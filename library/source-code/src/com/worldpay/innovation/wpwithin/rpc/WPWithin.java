/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.worldpay.innovation.wpwithin.rpc;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-01-24")
public class WPWithin {

  /**
   * WorldpayWithin Service - exposing all WorldpayWithin SDK functionality
   */
  public interface Iface {

    public void setup(java.lang.String name, java.lang.String description) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException;

    public void addService(com.worldpay.innovation.wpwithin.rpc.types.Service svc) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException;

    public void removeService(com.worldpay.innovation.wpwithin.rpc.types.Service svc) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException;

    public void initConsumer(java.lang.String scheme, java.lang.String hostname, int port, java.lang.String urlPrefix, java.lang.String clientID, com.worldpay.innovation.wpwithin.rpc.types.HCECard hceCard, java.util.Map<java.lang.String,java.lang.String> pspConfig) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException;

    public void initProducer(java.util.Map<java.lang.String,java.lang.String> pspConfig) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException;

    public com.worldpay.innovation.wpwithin.rpc.types.Device getDevice() throws org.apache.thrift.TException;

    public void startServiceBroadcast(int timeoutMillis) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException;

    public void stopServiceBroadcast() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException;

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage> deviceDiscovery(int timeoutMillis) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException;

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails> requestServices() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException;

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price> getServicePrices(int serviceId) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException;

    public com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse selectService(int serviceId, int numberOfUnits, int priceId) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException;

    public com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse makePayment(com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse request) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException;

    public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken beginServiceDelivery(int serviceID, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken, int unitsToSupply) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException;

    public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken endServiceDelivery(int serviceID, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken, int unitsReceived) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void setup(java.lang.String name, java.lang.String description, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void addService(com.worldpay.innovation.wpwithin.rpc.types.Service svc, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void removeService(com.worldpay.innovation.wpwithin.rpc.types.Service svc, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void initConsumer(java.lang.String scheme, java.lang.String hostname, int port, java.lang.String urlPrefix, java.lang.String clientID, com.worldpay.innovation.wpwithin.rpc.types.HCECard hceCard, java.util.Map<java.lang.String,java.lang.String> pspConfig, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void initProducer(java.util.Map<java.lang.String,java.lang.String> pspConfig, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void getDevice(org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.Device> resultHandler) throws org.apache.thrift.TException;

    public void startServiceBroadcast(int timeoutMillis, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void stopServiceBroadcast(org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException;

    public void deviceDiscovery(int timeoutMillis, org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage>> resultHandler) throws org.apache.thrift.TException;

    public void requestServices(org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails>> resultHandler) throws org.apache.thrift.TException;

    public void getServicePrices(int serviceId, org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price>> resultHandler) throws org.apache.thrift.TException;

    public void selectService(int serviceId, int numberOfUnits, int priceId, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse> resultHandler) throws org.apache.thrift.TException;

    public void makePayment(com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse request, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse> resultHandler) throws org.apache.thrift.TException;

    public void beginServiceDelivery(int serviceID, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken, int unitsToSupply, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken> resultHandler) throws org.apache.thrift.TException;

    public void endServiceDelivery(int serviceID, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken, int unitsReceived, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken> resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public void setup(java.lang.String name, java.lang.String description) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      send_setup(name, description);
      recv_setup();
    }

    public void send_setup(java.lang.String name, java.lang.String description) throws org.apache.thrift.TException
    {
      setup_args args = new setup_args();
      args.setName(name);
      args.setDescription(description);
      sendBase("setup", args);
    }

    public void recv_setup() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      setup_result result = new setup_result();
      receiveBase(result, "setup");
      if (result.err != null) {
        throw result.err;
      }
      return;
    }

    public void addService(com.worldpay.innovation.wpwithin.rpc.types.Service svc) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      send_addService(svc);
      recv_addService();
    }

    public void send_addService(com.worldpay.innovation.wpwithin.rpc.types.Service svc) throws org.apache.thrift.TException
    {
      addService_args args = new addService_args();
      args.setSvc(svc);
      sendBase("addService", args);
    }

    public void recv_addService() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      addService_result result = new addService_result();
      receiveBase(result, "addService");
      if (result.err != null) {
        throw result.err;
      }
      return;
    }

    public void removeService(com.worldpay.innovation.wpwithin.rpc.types.Service svc) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      send_removeService(svc);
      recv_removeService();
    }

    public void send_removeService(com.worldpay.innovation.wpwithin.rpc.types.Service svc) throws org.apache.thrift.TException
    {
      removeService_args args = new removeService_args();
      args.setSvc(svc);
      sendBase("removeService", args);
    }

    public void recv_removeService() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      removeService_result result = new removeService_result();
      receiveBase(result, "removeService");
      if (result.err != null) {
        throw result.err;
      }
      return;
    }

    public void initConsumer(java.lang.String scheme, java.lang.String hostname, int port, java.lang.String urlPrefix, java.lang.String clientID, com.worldpay.innovation.wpwithin.rpc.types.HCECard hceCard, java.util.Map<java.lang.String,java.lang.String> pspConfig) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      send_initConsumer(scheme, hostname, port, urlPrefix, clientID, hceCard, pspConfig);
      recv_initConsumer();
    }

    public void send_initConsumer(java.lang.String scheme, java.lang.String hostname, int port, java.lang.String urlPrefix, java.lang.String clientID, com.worldpay.innovation.wpwithin.rpc.types.HCECard hceCard, java.util.Map<java.lang.String,java.lang.String> pspConfig) throws org.apache.thrift.TException
    {
      initConsumer_args args = new initConsumer_args();
      args.setScheme(scheme);
      args.setHostname(hostname);
      args.setPort(port);
      args.setUrlPrefix(urlPrefix);
      args.setClientID(clientID);
      args.setHceCard(hceCard);
      args.setPspConfig(pspConfig);
      sendBase("initConsumer", args);
    }

    public void recv_initConsumer() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      initConsumer_result result = new initConsumer_result();
      receiveBase(result, "initConsumer");
      if (result.err != null) {
        throw result.err;
      }
      return;
    }

    public void initProducer(java.util.Map<java.lang.String,java.lang.String> pspConfig) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      send_initProducer(pspConfig);
      recv_initProducer();
    }

    public void send_initProducer(java.util.Map<java.lang.String,java.lang.String> pspConfig) throws org.apache.thrift.TException
    {
      initProducer_args args = new initProducer_args();
      args.setPspConfig(pspConfig);
      sendBase("initProducer", args);
    }

    public void recv_initProducer() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      initProducer_result result = new initProducer_result();
      receiveBase(result, "initProducer");
      if (result.err != null) {
        throw result.err;
      }
      return;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Device getDevice() throws org.apache.thrift.TException
    {
      send_getDevice();
      return recv_getDevice();
    }

    public void send_getDevice() throws org.apache.thrift.TException
    {
      getDevice_args args = new getDevice_args();
      sendBase("getDevice", args);
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Device recv_getDevice() throws org.apache.thrift.TException
    {
      getDevice_result result = new getDevice_result();
      receiveBase(result, "getDevice");
      if (result.isSetSuccess()) {
        return result.success;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getDevice failed: unknown result");
    }

    public void startServiceBroadcast(int timeoutMillis) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      send_startServiceBroadcast(timeoutMillis);
      recv_startServiceBroadcast();
    }

    public void send_startServiceBroadcast(int timeoutMillis) throws org.apache.thrift.TException
    {
      startServiceBroadcast_args args = new startServiceBroadcast_args();
      args.setTimeoutMillis(timeoutMillis);
      sendBase("startServiceBroadcast", args);
    }

    public void recv_startServiceBroadcast() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      startServiceBroadcast_result result = new startServiceBroadcast_result();
      receiveBase(result, "startServiceBroadcast");
      if (result.err != null) {
        throw result.err;
      }
      return;
    }

    public void stopServiceBroadcast() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      send_stopServiceBroadcast();
      recv_stopServiceBroadcast();
    }

    public void send_stopServiceBroadcast() throws org.apache.thrift.TException
    {
      stopServiceBroadcast_args args = new stopServiceBroadcast_args();
      sendBase("stopServiceBroadcast", args);
    }

    public void recv_stopServiceBroadcast() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      stopServiceBroadcast_result result = new stopServiceBroadcast_result();
      receiveBase(result, "stopServiceBroadcast");
      if (result.err != null) {
        throw result.err;
      }
      return;
    }

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage> deviceDiscovery(int timeoutMillis) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      send_deviceDiscovery(timeoutMillis);
      return recv_deviceDiscovery();
    }

    public void send_deviceDiscovery(int timeoutMillis) throws org.apache.thrift.TException
    {
      deviceDiscovery_args args = new deviceDiscovery_args();
      args.setTimeoutMillis(timeoutMillis);
      sendBase("deviceDiscovery", args);
    }

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage> recv_deviceDiscovery() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      deviceDiscovery_result result = new deviceDiscovery_result();
      receiveBase(result, "deviceDiscovery");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.err != null) {
        throw result.err;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "deviceDiscovery failed: unknown result");
    }

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails> requestServices() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      send_requestServices();
      return recv_requestServices();
    }

    public void send_requestServices() throws org.apache.thrift.TException
    {
      requestServices_args args = new requestServices_args();
      sendBase("requestServices", args);
    }

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails> recv_requestServices() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      requestServices_result result = new requestServices_result();
      receiveBase(result, "requestServices");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.err != null) {
        throw result.err;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "requestServices failed: unknown result");
    }

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price> getServicePrices(int serviceId) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      send_getServicePrices(serviceId);
      return recv_getServicePrices();
    }

    public void send_getServicePrices(int serviceId) throws org.apache.thrift.TException
    {
      getServicePrices_args args = new getServicePrices_args();
      args.setServiceId(serviceId);
      sendBase("getServicePrices", args);
    }

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price> recv_getServicePrices() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      getServicePrices_result result = new getServicePrices_result();
      receiveBase(result, "getServicePrices");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.err != null) {
        throw result.err;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "getServicePrices failed: unknown result");
    }

    public com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse selectService(int serviceId, int numberOfUnits, int priceId) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      send_selectService(serviceId, numberOfUnits, priceId);
      return recv_selectService();
    }

    public void send_selectService(int serviceId, int numberOfUnits, int priceId) throws org.apache.thrift.TException
    {
      selectService_args args = new selectService_args();
      args.setServiceId(serviceId);
      args.setNumberOfUnits(numberOfUnits);
      args.setPriceId(priceId);
      sendBase("selectService", args);
    }

    public com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse recv_selectService() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      selectService_result result = new selectService_result();
      receiveBase(result, "selectService");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.err != null) {
        throw result.err;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "selectService failed: unknown result");
    }

    public com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse makePayment(com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse request) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      send_makePayment(request);
      return recv_makePayment();
    }

    public void send_makePayment(com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse request) throws org.apache.thrift.TException
    {
      makePayment_args args = new makePayment_args();
      args.setRequest(request);
      sendBase("makePayment", args);
    }

    public com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse recv_makePayment() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      makePayment_result result = new makePayment_result();
      receiveBase(result, "makePayment");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.err != null) {
        throw result.err;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "makePayment failed: unknown result");
    }

    public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken beginServiceDelivery(int serviceID, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken, int unitsToSupply) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      send_beginServiceDelivery(serviceID, serviceDeliveryToken, unitsToSupply);
      return recv_beginServiceDelivery();
    }

    public void send_beginServiceDelivery(int serviceID, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken, int unitsToSupply) throws org.apache.thrift.TException
    {
      beginServiceDelivery_args args = new beginServiceDelivery_args();
      args.setServiceID(serviceID);
      args.setServiceDeliveryToken(serviceDeliveryToken);
      args.setUnitsToSupply(unitsToSupply);
      sendBase("beginServiceDelivery", args);
    }

    public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken recv_beginServiceDelivery() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      beginServiceDelivery_result result = new beginServiceDelivery_result();
      receiveBase(result, "beginServiceDelivery");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.err != null) {
        throw result.err;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "beginServiceDelivery failed: unknown result");
    }

    public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken endServiceDelivery(int serviceID, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken, int unitsReceived) throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      send_endServiceDelivery(serviceID, serviceDeliveryToken, unitsReceived);
      return recv_endServiceDelivery();
    }

    public void send_endServiceDelivery(int serviceID, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken, int unitsReceived) throws org.apache.thrift.TException
    {
      endServiceDelivery_args args = new endServiceDelivery_args();
      args.setServiceID(serviceID);
      args.setServiceDeliveryToken(serviceDeliveryToken);
      args.setUnitsReceived(unitsReceived);
      sendBase("endServiceDelivery", args);
    }

    public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken recv_endServiceDelivery() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException
    {
      endServiceDelivery_result result = new endServiceDelivery_result();
      receiveBase(result, "endServiceDelivery");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.err != null) {
        throw result.err;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "endServiceDelivery failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void setup(java.lang.String name, java.lang.String description, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      setup_call method_call = new setup_call(name, description, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class setup_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private java.lang.String name;
      private java.lang.String description;
      public setup_call(java.lang.String name, java.lang.String description, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.name = name;
        this.description = description;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("setup", org.apache.thrift.protocol.TMessageType.CALL, 0));
        setup_args args = new setup_args();
        args.setName(name);
        args.setDescription(description);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void addService(com.worldpay.innovation.wpwithin.rpc.types.Service svc, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      addService_call method_call = new addService_call(svc, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class addService_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private com.worldpay.innovation.wpwithin.rpc.types.Service svc;
      public addService_call(com.worldpay.innovation.wpwithin.rpc.types.Service svc, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.svc = svc;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addService", org.apache.thrift.protocol.TMessageType.CALL, 0));
        addService_args args = new addService_args();
        args.setSvc(svc);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void removeService(com.worldpay.innovation.wpwithin.rpc.types.Service svc, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      removeService_call method_call = new removeService_call(svc, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class removeService_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private com.worldpay.innovation.wpwithin.rpc.types.Service svc;
      public removeService_call(com.worldpay.innovation.wpwithin.rpc.types.Service svc, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.svc = svc;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("removeService", org.apache.thrift.protocol.TMessageType.CALL, 0));
        removeService_args args = new removeService_args();
        args.setSvc(svc);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void initConsumer(java.lang.String scheme, java.lang.String hostname, int port, java.lang.String urlPrefix, java.lang.String clientID, com.worldpay.innovation.wpwithin.rpc.types.HCECard hceCard, java.util.Map<java.lang.String,java.lang.String> pspConfig, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      initConsumer_call method_call = new initConsumer_call(scheme, hostname, port, urlPrefix, clientID, hceCard, pspConfig, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class initConsumer_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private java.lang.String scheme;
      private java.lang.String hostname;
      private int port;
      private java.lang.String urlPrefix;
      private java.lang.String clientID;
      private com.worldpay.innovation.wpwithin.rpc.types.HCECard hceCard;
      private java.util.Map<java.lang.String,java.lang.String> pspConfig;
      public initConsumer_call(java.lang.String scheme, java.lang.String hostname, int port, java.lang.String urlPrefix, java.lang.String clientID, com.worldpay.innovation.wpwithin.rpc.types.HCECard hceCard, java.util.Map<java.lang.String,java.lang.String> pspConfig, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.scheme = scheme;
        this.hostname = hostname;
        this.port = port;
        this.urlPrefix = urlPrefix;
        this.clientID = clientID;
        this.hceCard = hceCard;
        this.pspConfig = pspConfig;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("initConsumer", org.apache.thrift.protocol.TMessageType.CALL, 0));
        initConsumer_args args = new initConsumer_args();
        args.setScheme(scheme);
        args.setHostname(hostname);
        args.setPort(port);
        args.setUrlPrefix(urlPrefix);
        args.setClientID(clientID);
        args.setHceCard(hceCard);
        args.setPspConfig(pspConfig);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void initProducer(java.util.Map<java.lang.String,java.lang.String> pspConfig, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      initProducer_call method_call = new initProducer_call(pspConfig, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class initProducer_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private java.util.Map<java.lang.String,java.lang.String> pspConfig;
      public initProducer_call(java.util.Map<java.lang.String,java.lang.String> pspConfig, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.pspConfig = pspConfig;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("initProducer", org.apache.thrift.protocol.TMessageType.CALL, 0));
        initProducer_args args = new initProducer_args();
        args.setPspConfig(pspConfig);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void getDevice(org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.Device> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getDevice_call method_call = new getDevice_call(resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getDevice_call extends org.apache.thrift.async.TAsyncMethodCall<com.worldpay.innovation.wpwithin.rpc.types.Device> {
      public getDevice_call(org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.Device> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getDevice", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getDevice_args args = new getDevice_args();
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.worldpay.innovation.wpwithin.rpc.types.Device getResult() throws org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getDevice();
      }
    }

    public void startServiceBroadcast(int timeoutMillis, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      startServiceBroadcast_call method_call = new startServiceBroadcast_call(timeoutMillis, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class startServiceBroadcast_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      private int timeoutMillis;
      public startServiceBroadcast_call(int timeoutMillis, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.timeoutMillis = timeoutMillis;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("startServiceBroadcast", org.apache.thrift.protocol.TMessageType.CALL, 0));
        startServiceBroadcast_args args = new startServiceBroadcast_args();
        args.setTimeoutMillis(timeoutMillis);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void stopServiceBroadcast(org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      stopServiceBroadcast_call method_call = new stopServiceBroadcast_call(resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class stopServiceBroadcast_call extends org.apache.thrift.async.TAsyncMethodCall<Void> {
      public stopServiceBroadcast_call(org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("stopServiceBroadcast", org.apache.thrift.protocol.TMessageType.CALL, 0));
        stopServiceBroadcast_args args = new stopServiceBroadcast_args();
        args.write(prot);
        prot.writeMessageEnd();
      }

      public Void getResult() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return null;
      }
    }

    public void deviceDiscovery(int timeoutMillis, org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      deviceDiscovery_call method_call = new deviceDiscovery_call(timeoutMillis, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class deviceDiscovery_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage>> {
      private int timeoutMillis;
      public deviceDiscovery_call(int timeoutMillis, org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.timeoutMillis = timeoutMillis;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("deviceDiscovery", org.apache.thrift.protocol.TMessageType.CALL, 0));
        deviceDiscovery_args args = new deviceDiscovery_args();
        args.setTimeoutMillis(timeoutMillis);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage> getResult() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_deviceDiscovery();
      }
    }

    public void requestServices(org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      requestServices_call method_call = new requestServices_call(resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class requestServices_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails>> {
      public requestServices_call(org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("requestServices", org.apache.thrift.protocol.TMessageType.CALL, 0));
        requestServices_args args = new requestServices_args();
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails> getResult() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_requestServices();
      }
    }

    public void getServicePrices(int serviceId, org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price>> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      getServicePrices_call method_call = new getServicePrices_call(serviceId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class getServicePrices_call extends org.apache.thrift.async.TAsyncMethodCall<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price>> {
      private int serviceId;
      public getServicePrices_call(int serviceId, org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price>> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.serviceId = serviceId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("getServicePrices", org.apache.thrift.protocol.TMessageType.CALL, 0));
        getServicePrices_args args = new getServicePrices_args();
        args.setServiceId(serviceId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price> getResult() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_getServicePrices();
      }
    }

    public void selectService(int serviceId, int numberOfUnits, int priceId, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      selectService_call method_call = new selectService_call(serviceId, numberOfUnits, priceId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class selectService_call extends org.apache.thrift.async.TAsyncMethodCall<com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse> {
      private int serviceId;
      private int numberOfUnits;
      private int priceId;
      public selectService_call(int serviceId, int numberOfUnits, int priceId, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.serviceId = serviceId;
        this.numberOfUnits = numberOfUnits;
        this.priceId = priceId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("selectService", org.apache.thrift.protocol.TMessageType.CALL, 0));
        selectService_args args = new selectService_args();
        args.setServiceId(serviceId);
        args.setNumberOfUnits(numberOfUnits);
        args.setPriceId(priceId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse getResult() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_selectService();
      }
    }

    public void makePayment(com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse request, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      makePayment_call method_call = new makePayment_call(request, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class makePayment_call extends org.apache.thrift.async.TAsyncMethodCall<com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse> {
      private com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse request;
      public makePayment_call(com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse request, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.request = request;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("makePayment", org.apache.thrift.protocol.TMessageType.CALL, 0));
        makePayment_args args = new makePayment_args();
        args.setRequest(request);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse getResult() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_makePayment();
      }
    }

    public void beginServiceDelivery(int serviceID, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken, int unitsToSupply, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      beginServiceDelivery_call method_call = new beginServiceDelivery_call(serviceID, serviceDeliveryToken, unitsToSupply, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class beginServiceDelivery_call extends org.apache.thrift.async.TAsyncMethodCall<com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken> {
      private int serviceID;
      private com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken;
      private int unitsToSupply;
      public beginServiceDelivery_call(int serviceID, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken, int unitsToSupply, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.serviceID = serviceID;
        this.serviceDeliveryToken = serviceDeliveryToken;
        this.unitsToSupply = unitsToSupply;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("beginServiceDelivery", org.apache.thrift.protocol.TMessageType.CALL, 0));
        beginServiceDelivery_args args = new beginServiceDelivery_args();
        args.setServiceID(serviceID);
        args.setServiceDeliveryToken(serviceDeliveryToken);
        args.setUnitsToSupply(unitsToSupply);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken getResult() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_beginServiceDelivery();
      }
    }

    public void endServiceDelivery(int serviceID, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken, int unitsReceived, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken> resultHandler) throws org.apache.thrift.TException {
      checkReady();
      endServiceDelivery_call method_call = new endServiceDelivery_call(serviceID, serviceDeliveryToken, unitsReceived, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class endServiceDelivery_call extends org.apache.thrift.async.TAsyncMethodCall<com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken> {
      private int serviceID;
      private com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken;
      private int unitsReceived;
      public endServiceDelivery_call(int serviceID, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken, int unitsReceived, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken> resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.serviceID = serviceID;
        this.serviceDeliveryToken = serviceDeliveryToken;
        this.unitsReceived = unitsReceived;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("endServiceDelivery", org.apache.thrift.protocol.TMessageType.CALL, 0));
        endServiceDelivery_args args = new endServiceDelivery_args();
        args.setServiceID(serviceID);
        args.setServiceDeliveryToken(serviceDeliveryToken);
        args.setUnitsReceived(unitsReceived);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken getResult() throws com.worldpay.innovation.wpwithin.rpc.types.Error, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new java.lang.IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_endServiceDelivery();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(Processor.class.getName());
    public Processor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> java.util.Map<java.lang.String,  org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>> getProcessMap(java.util.Map<java.lang.String, org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("setup", new setup());
      processMap.put("addService", new addService());
      processMap.put("removeService", new removeService());
      processMap.put("initConsumer", new initConsumer());
      processMap.put("initProducer", new initProducer());
      processMap.put("getDevice", new getDevice());
      processMap.put("startServiceBroadcast", new startServiceBroadcast());
      processMap.put("stopServiceBroadcast", new stopServiceBroadcast());
      processMap.put("deviceDiscovery", new deviceDiscovery());
      processMap.put("requestServices", new requestServices());
      processMap.put("getServicePrices", new getServicePrices());
      processMap.put("selectService", new selectService());
      processMap.put("makePayment", new makePayment());
      processMap.put("beginServiceDelivery", new beginServiceDelivery());
      processMap.put("endServiceDelivery", new endServiceDelivery());
      return processMap;
    }

    public static class setup<I extends Iface> extends org.apache.thrift.ProcessFunction<I, setup_args> {
      public setup() {
        super("setup");
      }

      public setup_args getEmptyArgsInstance() {
        return new setup_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public setup_result getResult(I iface, setup_args args) throws org.apache.thrift.TException {
        setup_result result = new setup_result();
        try {
          iface.setup(args.name, args.description);
        } catch (com.worldpay.innovation.wpwithin.rpc.types.Error err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class addService<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addService_args> {
      public addService() {
        super("addService");
      }

      public addService_args getEmptyArgsInstance() {
        return new addService_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public addService_result getResult(I iface, addService_args args) throws org.apache.thrift.TException {
        addService_result result = new addService_result();
        try {
          iface.addService(args.svc);
        } catch (com.worldpay.innovation.wpwithin.rpc.types.Error err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class removeService<I extends Iface> extends org.apache.thrift.ProcessFunction<I, removeService_args> {
      public removeService() {
        super("removeService");
      }

      public removeService_args getEmptyArgsInstance() {
        return new removeService_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public removeService_result getResult(I iface, removeService_args args) throws org.apache.thrift.TException {
        removeService_result result = new removeService_result();
        try {
          iface.removeService(args.svc);
        } catch (com.worldpay.innovation.wpwithin.rpc.types.Error err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class initConsumer<I extends Iface> extends org.apache.thrift.ProcessFunction<I, initConsumer_args> {
      public initConsumer() {
        super("initConsumer");
      }

      public initConsumer_args getEmptyArgsInstance() {
        return new initConsumer_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public initConsumer_result getResult(I iface, initConsumer_args args) throws org.apache.thrift.TException {
        initConsumer_result result = new initConsumer_result();
        try {
          iface.initConsumer(args.scheme, args.hostname, args.port, args.urlPrefix, args.clientID, args.hceCard, args.pspConfig);
        } catch (com.worldpay.innovation.wpwithin.rpc.types.Error err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class initProducer<I extends Iface> extends org.apache.thrift.ProcessFunction<I, initProducer_args> {
      public initProducer() {
        super("initProducer");
      }

      public initProducer_args getEmptyArgsInstance() {
        return new initProducer_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public initProducer_result getResult(I iface, initProducer_args args) throws org.apache.thrift.TException {
        initProducer_result result = new initProducer_result();
        try {
          iface.initProducer(args.pspConfig);
        } catch (com.worldpay.innovation.wpwithin.rpc.types.Error err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class getDevice<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getDevice_args> {
      public getDevice() {
        super("getDevice");
      }

      public getDevice_args getEmptyArgsInstance() {
        return new getDevice_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getDevice_result getResult(I iface, getDevice_args args) throws org.apache.thrift.TException {
        getDevice_result result = new getDevice_result();
        result.success = iface.getDevice();
        return result;
      }
    }

    public static class startServiceBroadcast<I extends Iface> extends org.apache.thrift.ProcessFunction<I, startServiceBroadcast_args> {
      public startServiceBroadcast() {
        super("startServiceBroadcast");
      }

      public startServiceBroadcast_args getEmptyArgsInstance() {
        return new startServiceBroadcast_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public startServiceBroadcast_result getResult(I iface, startServiceBroadcast_args args) throws org.apache.thrift.TException {
        startServiceBroadcast_result result = new startServiceBroadcast_result();
        try {
          iface.startServiceBroadcast(args.timeoutMillis);
        } catch (com.worldpay.innovation.wpwithin.rpc.types.Error err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class stopServiceBroadcast<I extends Iface> extends org.apache.thrift.ProcessFunction<I, stopServiceBroadcast_args> {
      public stopServiceBroadcast() {
        super("stopServiceBroadcast");
      }

      public stopServiceBroadcast_args getEmptyArgsInstance() {
        return new stopServiceBroadcast_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public stopServiceBroadcast_result getResult(I iface, stopServiceBroadcast_args args) throws org.apache.thrift.TException {
        stopServiceBroadcast_result result = new stopServiceBroadcast_result();
        try {
          iface.stopServiceBroadcast();
        } catch (com.worldpay.innovation.wpwithin.rpc.types.Error err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class deviceDiscovery<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deviceDiscovery_args> {
      public deviceDiscovery() {
        super("deviceDiscovery");
      }

      public deviceDiscovery_args getEmptyArgsInstance() {
        return new deviceDiscovery_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public deviceDiscovery_result getResult(I iface, deviceDiscovery_args args) throws org.apache.thrift.TException {
        deviceDiscovery_result result = new deviceDiscovery_result();
        try {
          result.success = iface.deviceDiscovery(args.timeoutMillis);
        } catch (com.worldpay.innovation.wpwithin.rpc.types.Error err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class requestServices<I extends Iface> extends org.apache.thrift.ProcessFunction<I, requestServices_args> {
      public requestServices() {
        super("requestServices");
      }

      public requestServices_args getEmptyArgsInstance() {
        return new requestServices_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public requestServices_result getResult(I iface, requestServices_args args) throws org.apache.thrift.TException {
        requestServices_result result = new requestServices_result();
        try {
          result.success = iface.requestServices();
        } catch (com.worldpay.innovation.wpwithin.rpc.types.Error err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class getServicePrices<I extends Iface> extends org.apache.thrift.ProcessFunction<I, getServicePrices_args> {
      public getServicePrices() {
        super("getServicePrices");
      }

      public getServicePrices_args getEmptyArgsInstance() {
        return new getServicePrices_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public getServicePrices_result getResult(I iface, getServicePrices_args args) throws org.apache.thrift.TException {
        getServicePrices_result result = new getServicePrices_result();
        try {
          result.success = iface.getServicePrices(args.serviceId);
        } catch (com.worldpay.innovation.wpwithin.rpc.types.Error err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class selectService<I extends Iface> extends org.apache.thrift.ProcessFunction<I, selectService_args> {
      public selectService() {
        super("selectService");
      }

      public selectService_args getEmptyArgsInstance() {
        return new selectService_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public selectService_result getResult(I iface, selectService_args args) throws org.apache.thrift.TException {
        selectService_result result = new selectService_result();
        try {
          result.success = iface.selectService(args.serviceId, args.numberOfUnits, args.priceId);
        } catch (com.worldpay.innovation.wpwithin.rpc.types.Error err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class makePayment<I extends Iface> extends org.apache.thrift.ProcessFunction<I, makePayment_args> {
      public makePayment() {
        super("makePayment");
      }

      public makePayment_args getEmptyArgsInstance() {
        return new makePayment_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public makePayment_result getResult(I iface, makePayment_args args) throws org.apache.thrift.TException {
        makePayment_result result = new makePayment_result();
        try {
          result.success = iface.makePayment(args.request);
        } catch (com.worldpay.innovation.wpwithin.rpc.types.Error err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class beginServiceDelivery<I extends Iface> extends org.apache.thrift.ProcessFunction<I, beginServiceDelivery_args> {
      public beginServiceDelivery() {
        super("beginServiceDelivery");
      }

      public beginServiceDelivery_args getEmptyArgsInstance() {
        return new beginServiceDelivery_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public beginServiceDelivery_result getResult(I iface, beginServiceDelivery_args args) throws org.apache.thrift.TException {
        beginServiceDelivery_result result = new beginServiceDelivery_result();
        try {
          result.success = iface.beginServiceDelivery(args.serviceID, args.serviceDeliveryToken, args.unitsToSupply);
        } catch (com.worldpay.innovation.wpwithin.rpc.types.Error err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class endServiceDelivery<I extends Iface> extends org.apache.thrift.ProcessFunction<I, endServiceDelivery_args> {
      public endServiceDelivery() {
        super("endServiceDelivery");
      }

      public endServiceDelivery_args getEmptyArgsInstance() {
        return new endServiceDelivery_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public endServiceDelivery_result getResult(I iface, endServiceDelivery_args args) throws org.apache.thrift.TException {
        endServiceDelivery_result result = new endServiceDelivery_result();
        try {
          result.success = iface.endServiceDelivery(args.serviceID, args.serviceDeliveryToken, args.unitsReceived);
        } catch (com.worldpay.innovation.wpwithin.rpc.types.Error err) {
          result.err = err;
        }
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final org.slf4j.Logger _LOGGER = org.slf4j.LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new java.util.HashMap<java.lang.String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(java.util.Map<java.lang.String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("setup", new setup());
      processMap.put("addService", new addService());
      processMap.put("removeService", new removeService());
      processMap.put("initConsumer", new initConsumer());
      processMap.put("initProducer", new initProducer());
      processMap.put("getDevice", new getDevice());
      processMap.put("startServiceBroadcast", new startServiceBroadcast());
      processMap.put("stopServiceBroadcast", new stopServiceBroadcast());
      processMap.put("deviceDiscovery", new deviceDiscovery());
      processMap.put("requestServices", new requestServices());
      processMap.put("getServicePrices", new getServicePrices());
      processMap.put("selectService", new selectService());
      processMap.put("makePayment", new makePayment());
      processMap.put("beginServiceDelivery", new beginServiceDelivery());
      processMap.put("endServiceDelivery", new endServiceDelivery());
      return processMap;
    }

    public static class setup<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, setup_args, Void> {
      public setup() {
        super("setup");
      }

      public setup_args getEmptyArgsInstance() {
        return new setup_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            setup_result result = new setup_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            setup_result result = new setup_result();
            if (e instanceof com.worldpay.innovation.wpwithin.rpc.types.Error) {
              result.err = (com.worldpay.innovation.wpwithin.rpc.types.Error) e;
              result.setErrIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, setup_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.setup(args.name, args.description,resultHandler);
      }
    }

    public static class addService<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addService_args, Void> {
      public addService() {
        super("addService");
      }

      public addService_args getEmptyArgsInstance() {
        return new addService_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            addService_result result = new addService_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            addService_result result = new addService_result();
            if (e instanceof com.worldpay.innovation.wpwithin.rpc.types.Error) {
              result.err = (com.worldpay.innovation.wpwithin.rpc.types.Error) e;
              result.setErrIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, addService_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.addService(args.svc,resultHandler);
      }
    }

    public static class removeService<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, removeService_args, Void> {
      public removeService() {
        super("removeService");
      }

      public removeService_args getEmptyArgsInstance() {
        return new removeService_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            removeService_result result = new removeService_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            removeService_result result = new removeService_result();
            if (e instanceof com.worldpay.innovation.wpwithin.rpc.types.Error) {
              result.err = (com.worldpay.innovation.wpwithin.rpc.types.Error) e;
              result.setErrIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, removeService_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.removeService(args.svc,resultHandler);
      }
    }

    public static class initConsumer<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, initConsumer_args, Void> {
      public initConsumer() {
        super("initConsumer");
      }

      public initConsumer_args getEmptyArgsInstance() {
        return new initConsumer_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            initConsumer_result result = new initConsumer_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            initConsumer_result result = new initConsumer_result();
            if (e instanceof com.worldpay.innovation.wpwithin.rpc.types.Error) {
              result.err = (com.worldpay.innovation.wpwithin.rpc.types.Error) e;
              result.setErrIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, initConsumer_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.initConsumer(args.scheme, args.hostname, args.port, args.urlPrefix, args.clientID, args.hceCard, args.pspConfig,resultHandler);
      }
    }

    public static class initProducer<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, initProducer_args, Void> {
      public initProducer() {
        super("initProducer");
      }

      public initProducer_args getEmptyArgsInstance() {
        return new initProducer_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            initProducer_result result = new initProducer_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            initProducer_result result = new initProducer_result();
            if (e instanceof com.worldpay.innovation.wpwithin.rpc.types.Error) {
              result.err = (com.worldpay.innovation.wpwithin.rpc.types.Error) e;
              result.setErrIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, initProducer_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.initProducer(args.pspConfig,resultHandler);
      }
    }

    public static class getDevice<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getDevice_args, com.worldpay.innovation.wpwithin.rpc.types.Device> {
      public getDevice() {
        super("getDevice");
      }

      public getDevice_args getEmptyArgsInstance() {
        return new getDevice_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.Device> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.Device>() { 
          public void onComplete(com.worldpay.innovation.wpwithin.rpc.types.Device o) {
            getDevice_result result = new getDevice_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getDevice_result result = new getDevice_result();
            if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getDevice_args args, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.Device> resultHandler) throws org.apache.thrift.TException {
        iface.getDevice(resultHandler);
      }
    }

    public static class startServiceBroadcast<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, startServiceBroadcast_args, Void> {
      public startServiceBroadcast() {
        super("startServiceBroadcast");
      }

      public startServiceBroadcast_args getEmptyArgsInstance() {
        return new startServiceBroadcast_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            startServiceBroadcast_result result = new startServiceBroadcast_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            startServiceBroadcast_result result = new startServiceBroadcast_result();
            if (e instanceof com.worldpay.innovation.wpwithin.rpc.types.Error) {
              result.err = (com.worldpay.innovation.wpwithin.rpc.types.Error) e;
              result.setErrIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, startServiceBroadcast_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.startServiceBroadcast(args.timeoutMillis,resultHandler);
      }
    }

    public static class stopServiceBroadcast<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, stopServiceBroadcast_args, Void> {
      public stopServiceBroadcast() {
        super("stopServiceBroadcast");
      }

      public stopServiceBroadcast_args getEmptyArgsInstance() {
        return new stopServiceBroadcast_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<Void> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            stopServiceBroadcast_result result = new stopServiceBroadcast_result();
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            stopServiceBroadcast_result result = new stopServiceBroadcast_result();
            if (e instanceof com.worldpay.innovation.wpwithin.rpc.types.Error) {
              result.err = (com.worldpay.innovation.wpwithin.rpc.types.Error) e;
              result.setErrIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, stopServiceBroadcast_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws org.apache.thrift.TException {
        iface.stopServiceBroadcast(resultHandler);
      }
    }

    public static class deviceDiscovery<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, deviceDiscovery_args, java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage>> {
      public deviceDiscovery() {
        super("deviceDiscovery");
      }

      public deviceDiscovery_args getEmptyArgsInstance() {
        return new deviceDiscovery_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage>>() { 
          public void onComplete(java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage> o) {
            deviceDiscovery_result result = new deviceDiscovery_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            deviceDiscovery_result result = new deviceDiscovery_result();
            if (e instanceof com.worldpay.innovation.wpwithin.rpc.types.Error) {
              result.err = (com.worldpay.innovation.wpwithin.rpc.types.Error) e;
              result.setErrIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, deviceDiscovery_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage>> resultHandler) throws org.apache.thrift.TException {
        iface.deviceDiscovery(args.timeoutMillis,resultHandler);
      }
    }

    public static class requestServices<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, requestServices_args, java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails>> {
      public requestServices() {
        super("requestServices");
      }

      public requestServices_args getEmptyArgsInstance() {
        return new requestServices_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails>>() { 
          public void onComplete(java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails> o) {
            requestServices_result result = new requestServices_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            requestServices_result result = new requestServices_result();
            if (e instanceof com.worldpay.innovation.wpwithin.rpc.types.Error) {
              result.err = (com.worldpay.innovation.wpwithin.rpc.types.Error) e;
              result.setErrIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, requestServices_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails>> resultHandler) throws org.apache.thrift.TException {
        iface.requestServices(resultHandler);
      }
    }

    public static class getServicePrices<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, getServicePrices_args, java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price>> {
      public getServicePrices() {
        super("getServicePrices");
      }

      public getServicePrices_args getEmptyArgsInstance() {
        return new getServicePrices_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price>> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price>>() { 
          public void onComplete(java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price> o) {
            getServicePrices_result result = new getServicePrices_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            getServicePrices_result result = new getServicePrices_result();
            if (e instanceof com.worldpay.innovation.wpwithin.rpc.types.Error) {
              result.err = (com.worldpay.innovation.wpwithin.rpc.types.Error) e;
              result.setErrIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, getServicePrices_args args, org.apache.thrift.async.AsyncMethodCallback<java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price>> resultHandler) throws org.apache.thrift.TException {
        iface.getServicePrices(args.serviceId,resultHandler);
      }
    }

    public static class selectService<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, selectService_args, com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse> {
      public selectService() {
        super("selectService");
      }

      public selectService_args getEmptyArgsInstance() {
        return new selectService_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse>() { 
          public void onComplete(com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse o) {
            selectService_result result = new selectService_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            selectService_result result = new selectService_result();
            if (e instanceof com.worldpay.innovation.wpwithin.rpc.types.Error) {
              result.err = (com.worldpay.innovation.wpwithin.rpc.types.Error) e;
              result.setErrIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, selectService_args args, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse> resultHandler) throws org.apache.thrift.TException {
        iface.selectService(args.serviceId, args.numberOfUnits, args.priceId,resultHandler);
      }
    }

    public static class makePayment<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, makePayment_args, com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse> {
      public makePayment() {
        super("makePayment");
      }

      public makePayment_args getEmptyArgsInstance() {
        return new makePayment_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse>() { 
          public void onComplete(com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse o) {
            makePayment_result result = new makePayment_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            makePayment_result result = new makePayment_result();
            if (e instanceof com.worldpay.innovation.wpwithin.rpc.types.Error) {
              result.err = (com.worldpay.innovation.wpwithin.rpc.types.Error) e;
              result.setErrIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, makePayment_args args, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse> resultHandler) throws org.apache.thrift.TException {
        iface.makePayment(args.request,resultHandler);
      }
    }

    public static class beginServiceDelivery<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, beginServiceDelivery_args, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken> {
      public beginServiceDelivery() {
        super("beginServiceDelivery");
      }

      public beginServiceDelivery_args getEmptyArgsInstance() {
        return new beginServiceDelivery_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken>() { 
          public void onComplete(com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken o) {
            beginServiceDelivery_result result = new beginServiceDelivery_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            beginServiceDelivery_result result = new beginServiceDelivery_result();
            if (e instanceof com.worldpay.innovation.wpwithin.rpc.types.Error) {
              result.err = (com.worldpay.innovation.wpwithin.rpc.types.Error) e;
              result.setErrIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, beginServiceDelivery_args args, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken> resultHandler) throws org.apache.thrift.TException {
        iface.beginServiceDelivery(args.serviceID, args.serviceDeliveryToken, args.unitsToSupply,resultHandler);
      }
    }

    public static class endServiceDelivery<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, endServiceDelivery_args, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken> {
      public endServiceDelivery() {
        super("endServiceDelivery");
      }

      public endServiceDelivery_args getEmptyArgsInstance() {
        return new endServiceDelivery_args();
      }

      public org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken> getResultHandler(final org.apache.thrift.server.AbstractNonblockingServer.AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken>() { 
          public void onComplete(com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken o) {
            endServiceDelivery_result result = new endServiceDelivery_result();
            result.success = o;
            try {
              fcall.sendResponse(fb, result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
            } catch (org.apache.thrift.transport.TTransportException e) {
              _LOGGER.error("TTransportException writing to internal frame buffer", e);
              fb.close();
            } catch (java.lang.Exception e) {
              _LOGGER.error("Exception writing to internal frame buffer", e);
              onError(e);
            }
          }
          public void onError(java.lang.Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TSerializable msg;
            endServiceDelivery_result result = new endServiceDelivery_result();
            if (e instanceof com.worldpay.innovation.wpwithin.rpc.types.Error) {
              result.err = (com.worldpay.innovation.wpwithin.rpc.types.Error) e;
              result.setErrIsSet(true);
              msg = result;
            } else if (e instanceof org.apache.thrift.transport.TTransportException) {
              _LOGGER.error("TTransportException inside handler", e);
              fb.close();
              return;
            } else if (e instanceof org.apache.thrift.TApplicationException) {
              _LOGGER.error("TApplicationException inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TApplicationException)e;
            } else {
              _LOGGER.error("Exception inside handler", e);
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
            } catch (java.lang.Exception ex) {
              _LOGGER.error("Exception writing to internal frame buffer", ex);
              fb.close();
            }
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, endServiceDelivery_args args, org.apache.thrift.async.AsyncMethodCallback<com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken> resultHandler) throws org.apache.thrift.TException {
        iface.endServiceDelivery(args.serviceID, args.serviceDeliveryToken, args.unitsReceived,resultHandler);
      }
    }

  }

  public static class setup_args implements org.apache.thrift.TBase<setup_args, setup_args._Fields>, java.io.Serializable, Cloneable, Comparable<setup_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("setup_args");

    private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)2);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new setup_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new setup_argsTupleSchemeFactory();

    public java.lang.String name; // required
    public java.lang.String description; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      NAME((short)1, "name"),
      DESCRIPTION((short)2, "description");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // NAME
            return NAME;
          case 2: // DESCRIPTION
            return DESCRIPTION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(setup_args.class, metaDataMap);
    }

    public setup_args() {
    }

    public setup_args(
      java.lang.String name,
      java.lang.String description)
    {
      this();
      this.name = name;
      this.description = description;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public setup_args(setup_args other) {
      if (other.isSetName()) {
        this.name = other.name;
      }
      if (other.isSetDescription()) {
        this.description = other.description;
      }
    }

    public setup_args deepCopy() {
      return new setup_args(this);
    }

    @Override
    public void clear() {
      this.name = null;
      this.description = null;
    }

    public java.lang.String getName() {
      return this.name;
    }

    public setup_args setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    public void unsetName() {
      this.name = null;
    }

    /** Returns true if field name is set (has been assigned a value) and false otherwise */
    public boolean isSetName() {
      return this.name != null;
    }

    public void setNameIsSet(boolean value) {
      if (!value) {
        this.name = null;
      }
    }

    public java.lang.String getDescription() {
      return this.description;
    }

    public setup_args setDescription(java.lang.String description) {
      this.description = description;
      return this;
    }

    public void unsetDescription() {
      this.description = null;
    }

    /** Returns true if field description is set (has been assigned a value) and false otherwise */
    public boolean isSetDescription() {
      return this.description != null;
    }

    public void setDescriptionIsSet(boolean value) {
      if (!value) {
        this.description = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case NAME:
        if (value == null) {
          unsetName();
        } else {
          setName((java.lang.String)value);
        }
        break;

      case DESCRIPTION:
        if (value == null) {
          unsetDescription();
        } else {
          setDescription((java.lang.String)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case NAME:
        return getName();

      case DESCRIPTION:
        return getDescription();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case NAME:
        return isSetName();
      case DESCRIPTION:
        return isSetDescription();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof setup_args)
        return this.equals((setup_args)that);
      return false;
    }

    public boolean equals(setup_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_name = true && this.isSetName();
      boolean that_present_name = true && that.isSetName();
      if (this_present_name || that_present_name) {
        if (!(this_present_name && that_present_name))
          return false;
        if (!this.name.equals(that.name))
          return false;
      }

      boolean this_present_description = true && this.isSetDescription();
      boolean that_present_description = true && that.isSetDescription();
      if (this_present_description || that_present_description) {
        if (!(this_present_description && that_present_description))
          return false;
        if (!this.description.equals(that.description))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
      if (isSetName())
        hashCode = hashCode * 8191 + name.hashCode();

      hashCode = hashCode * 8191 + ((isSetDescription()) ? 131071 : 524287);
      if (isSetDescription())
        hashCode = hashCode * 8191 + description.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(setup_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetName()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetDescription()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("setup_args(");
      boolean first = true;

      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("description:");
      if (this.description == null) {
        sb.append("null");
      } else {
        sb.append(this.description);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class setup_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setup_argsStandardScheme getScheme() {
        return new setup_argsStandardScheme();
      }
    }

    private static class setup_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<setup_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, setup_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // NAME
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.name = iprot.readString();
                struct.setNameIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // DESCRIPTION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.description = iprot.readString();
                struct.setDescriptionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, setup_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.name != null) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
        if (struct.description != null) {
          oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.description);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class setup_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setup_argsTupleScheme getScheme() {
        return new setup_argsTupleScheme();
      }
    }

    private static class setup_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<setup_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, setup_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetName()) {
          optionals.set(0);
        }
        if (struct.isSetDescription()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetName()) {
          oprot.writeString(struct.name);
        }
        if (struct.isSetDescription()) {
          oprot.writeString(struct.description);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, setup_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.name = iprot.readString();
          struct.setNameIsSet(true);
        }
        if (incoming.get(1)) {
          struct.description = iprot.readString();
          struct.setDescriptionIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class setup_result implements org.apache.thrift.TBase<setup_result, setup_result._Fields>, java.io.Serializable, Cloneable, Comparable<setup_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("setup_result");

    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new setup_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new setup_resultTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.Error err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ERR((short)1, "err");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Error.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(setup_result.class, metaDataMap);
    }

    public setup_result() {
    }

    public setup_result(
      com.worldpay.innovation.wpwithin.rpc.types.Error err)
    {
      this();
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public setup_result(setup_result other) {
      if (other.isSetErr()) {
        this.err = new com.worldpay.innovation.wpwithin.rpc.types.Error(other.err);
      }
    }

    public setup_result deepCopy() {
      return new setup_result(this);
    }

    @Override
    public void clear() {
      this.err = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Error getErr() {
      return this.err;
    }

    public setup_result setErr(com.worldpay.innovation.wpwithin.rpc.types.Error err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((com.worldpay.innovation.wpwithin.rpc.types.Error)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ERR:
        return getErr();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ERR:
        return isSetErr();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof setup_result)
        return this.equals((setup_result)that);
      return false;
    }

    public boolean equals(setup_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetErr()) ? 131071 : 524287);
      if (isSetErr())
        hashCode = hashCode * 8191 + err.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(setup_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("setup_result(");
      boolean first = true;

      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class setup_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setup_resultStandardScheme getScheme() {
        return new setup_resultStandardScheme();
      }
    }

    private static class setup_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<setup_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, setup_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, setup_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class setup_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public setup_resultTupleScheme getScheme() {
        return new setup_resultTupleScheme();
      }
    }

    private static class setup_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<setup_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, setup_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetErr()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, setup_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class addService_args implements org.apache.thrift.TBase<addService_args, addService_args._Fields>, java.io.Serializable, Cloneable, Comparable<addService_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addService_args");

    private static final org.apache.thrift.protocol.TField SVC_FIELD_DESC = new org.apache.thrift.protocol.TField("svc", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new addService_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new addService_argsTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.Service svc; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SVC((short)1, "svc");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // SVC
            return SVC;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SVC, new org.apache.thrift.meta_data.FieldMetaData("svc", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Service.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addService_args.class, metaDataMap);
    }

    public addService_args() {
    }

    public addService_args(
      com.worldpay.innovation.wpwithin.rpc.types.Service svc)
    {
      this();
      this.svc = svc;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addService_args(addService_args other) {
      if (other.isSetSvc()) {
        this.svc = new com.worldpay.innovation.wpwithin.rpc.types.Service(other.svc);
      }
    }

    public addService_args deepCopy() {
      return new addService_args(this);
    }

    @Override
    public void clear() {
      this.svc = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Service getSvc() {
      return this.svc;
    }

    public addService_args setSvc(com.worldpay.innovation.wpwithin.rpc.types.Service svc) {
      this.svc = svc;
      return this;
    }

    public void unsetSvc() {
      this.svc = null;
    }

    /** Returns true if field svc is set (has been assigned a value) and false otherwise */
    public boolean isSetSvc() {
      return this.svc != null;
    }

    public void setSvcIsSet(boolean value) {
      if (!value) {
        this.svc = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SVC:
        if (value == null) {
          unsetSvc();
        } else {
          setSvc((com.worldpay.innovation.wpwithin.rpc.types.Service)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SVC:
        return getSvc();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SVC:
        return isSetSvc();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof addService_args)
        return this.equals((addService_args)that);
      return false;
    }

    public boolean equals(addService_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_svc = true && this.isSetSvc();
      boolean that_present_svc = true && that.isSetSvc();
      if (this_present_svc || that_present_svc) {
        if (!(this_present_svc && that_present_svc))
          return false;
        if (!this.svc.equals(that.svc))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSvc()) ? 131071 : 524287);
      if (isSetSvc())
        hashCode = hashCode * 8191 + svc.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(addService_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSvc()).compareTo(other.isSetSvc());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSvc()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.svc, other.svc);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("addService_args(");
      boolean first = true;

      sb.append("svc:");
      if (this.svc == null) {
        sb.append("null");
      } else {
        sb.append(this.svc);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (svc != null) {
        svc.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addService_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public addService_argsStandardScheme getScheme() {
        return new addService_argsStandardScheme();
      }
    }

    private static class addService_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<addService_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addService_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // SVC
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.svc = new com.worldpay.innovation.wpwithin.rpc.types.Service();
                struct.svc.read(iprot);
                struct.setSvcIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addService_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.svc != null) {
          oprot.writeFieldBegin(SVC_FIELD_DESC);
          struct.svc.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addService_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public addService_argsTupleScheme getScheme() {
        return new addService_argsTupleScheme();
      }
    }

    private static class addService_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<addService_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addService_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSvc()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSvc()) {
          struct.svc.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addService_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.svc = new com.worldpay.innovation.wpwithin.rpc.types.Service();
          struct.svc.read(iprot);
          struct.setSvcIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class addService_result implements org.apache.thrift.TBase<addService_result, addService_result._Fields>, java.io.Serializable, Cloneable, Comparable<addService_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addService_result");

    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new addService_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new addService_resultTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.Error err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ERR((short)1, "err");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Error.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addService_result.class, metaDataMap);
    }

    public addService_result() {
    }

    public addService_result(
      com.worldpay.innovation.wpwithin.rpc.types.Error err)
    {
      this();
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addService_result(addService_result other) {
      if (other.isSetErr()) {
        this.err = new com.worldpay.innovation.wpwithin.rpc.types.Error(other.err);
      }
    }

    public addService_result deepCopy() {
      return new addService_result(this);
    }

    @Override
    public void clear() {
      this.err = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Error getErr() {
      return this.err;
    }

    public addService_result setErr(com.worldpay.innovation.wpwithin.rpc.types.Error err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((com.worldpay.innovation.wpwithin.rpc.types.Error)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ERR:
        return getErr();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ERR:
        return isSetErr();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof addService_result)
        return this.equals((addService_result)that);
      return false;
    }

    public boolean equals(addService_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetErr()) ? 131071 : 524287);
      if (isSetErr())
        hashCode = hashCode * 8191 + err.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(addService_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("addService_result(");
      boolean first = true;

      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addService_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public addService_resultStandardScheme getScheme() {
        return new addService_resultStandardScheme();
      }
    }

    private static class addService_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<addService_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addService_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addService_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addService_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public addService_resultTupleScheme getScheme() {
        return new addService_resultTupleScheme();
      }
    }

    private static class addService_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<addService_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addService_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetErr()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addService_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class removeService_args implements org.apache.thrift.TBase<removeService_args, removeService_args._Fields>, java.io.Serializable, Cloneable, Comparable<removeService_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("removeService_args");

    private static final org.apache.thrift.protocol.TField SVC_FIELD_DESC = new org.apache.thrift.protocol.TField("svc", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new removeService_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new removeService_argsTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.Service svc; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SVC((short)1, "svc");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // SVC
            return SVC;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SVC, new org.apache.thrift.meta_data.FieldMetaData("svc", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Service.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(removeService_args.class, metaDataMap);
    }

    public removeService_args() {
    }

    public removeService_args(
      com.worldpay.innovation.wpwithin.rpc.types.Service svc)
    {
      this();
      this.svc = svc;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public removeService_args(removeService_args other) {
      if (other.isSetSvc()) {
        this.svc = new com.worldpay.innovation.wpwithin.rpc.types.Service(other.svc);
      }
    }

    public removeService_args deepCopy() {
      return new removeService_args(this);
    }

    @Override
    public void clear() {
      this.svc = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Service getSvc() {
      return this.svc;
    }

    public removeService_args setSvc(com.worldpay.innovation.wpwithin.rpc.types.Service svc) {
      this.svc = svc;
      return this;
    }

    public void unsetSvc() {
      this.svc = null;
    }

    /** Returns true if field svc is set (has been assigned a value) and false otherwise */
    public boolean isSetSvc() {
      return this.svc != null;
    }

    public void setSvcIsSet(boolean value) {
      if (!value) {
        this.svc = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SVC:
        if (value == null) {
          unsetSvc();
        } else {
          setSvc((com.worldpay.innovation.wpwithin.rpc.types.Service)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SVC:
        return getSvc();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SVC:
        return isSetSvc();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof removeService_args)
        return this.equals((removeService_args)that);
      return false;
    }

    public boolean equals(removeService_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_svc = true && this.isSetSvc();
      boolean that_present_svc = true && that.isSetSvc();
      if (this_present_svc || that_present_svc) {
        if (!(this_present_svc && that_present_svc))
          return false;
        if (!this.svc.equals(that.svc))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSvc()) ? 131071 : 524287);
      if (isSetSvc())
        hashCode = hashCode * 8191 + svc.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(removeService_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSvc()).compareTo(other.isSetSvc());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSvc()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.svc, other.svc);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("removeService_args(");
      boolean first = true;

      sb.append("svc:");
      if (this.svc == null) {
        sb.append("null");
      } else {
        sb.append(this.svc);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (svc != null) {
        svc.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class removeService_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public removeService_argsStandardScheme getScheme() {
        return new removeService_argsStandardScheme();
      }
    }

    private static class removeService_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<removeService_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, removeService_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // SVC
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.svc = new com.worldpay.innovation.wpwithin.rpc.types.Service();
                struct.svc.read(iprot);
                struct.setSvcIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, removeService_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.svc != null) {
          oprot.writeFieldBegin(SVC_FIELD_DESC);
          struct.svc.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class removeService_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public removeService_argsTupleScheme getScheme() {
        return new removeService_argsTupleScheme();
      }
    }

    private static class removeService_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<removeService_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, removeService_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSvc()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSvc()) {
          struct.svc.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, removeService_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.svc = new com.worldpay.innovation.wpwithin.rpc.types.Service();
          struct.svc.read(iprot);
          struct.setSvcIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class removeService_result implements org.apache.thrift.TBase<removeService_result, removeService_result._Fields>, java.io.Serializable, Cloneable, Comparable<removeService_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("removeService_result");

    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new removeService_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new removeService_resultTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.Error err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ERR((short)1, "err");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Error.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(removeService_result.class, metaDataMap);
    }

    public removeService_result() {
    }

    public removeService_result(
      com.worldpay.innovation.wpwithin.rpc.types.Error err)
    {
      this();
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public removeService_result(removeService_result other) {
      if (other.isSetErr()) {
        this.err = new com.worldpay.innovation.wpwithin.rpc.types.Error(other.err);
      }
    }

    public removeService_result deepCopy() {
      return new removeService_result(this);
    }

    @Override
    public void clear() {
      this.err = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Error getErr() {
      return this.err;
    }

    public removeService_result setErr(com.worldpay.innovation.wpwithin.rpc.types.Error err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((com.worldpay.innovation.wpwithin.rpc.types.Error)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ERR:
        return getErr();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ERR:
        return isSetErr();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof removeService_result)
        return this.equals((removeService_result)that);
      return false;
    }

    public boolean equals(removeService_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetErr()) ? 131071 : 524287);
      if (isSetErr())
        hashCode = hashCode * 8191 + err.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(removeService_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("removeService_result(");
      boolean first = true;

      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class removeService_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public removeService_resultStandardScheme getScheme() {
        return new removeService_resultStandardScheme();
      }
    }

    private static class removeService_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<removeService_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, removeService_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, removeService_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class removeService_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public removeService_resultTupleScheme getScheme() {
        return new removeService_resultTupleScheme();
      }
    }

    private static class removeService_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<removeService_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, removeService_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetErr()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, removeService_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class initConsumer_args implements org.apache.thrift.TBase<initConsumer_args, initConsumer_args._Fields>, java.io.Serializable, Cloneable, Comparable<initConsumer_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("initConsumer_args");

    private static final org.apache.thrift.protocol.TField SCHEME_FIELD_DESC = new org.apache.thrift.protocol.TField("scheme", org.apache.thrift.protocol.TType.STRING, (short)1);
    private static final org.apache.thrift.protocol.TField HOSTNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("hostname", org.apache.thrift.protocol.TType.STRING, (short)2);
    private static final org.apache.thrift.protocol.TField PORT_FIELD_DESC = new org.apache.thrift.protocol.TField("port", org.apache.thrift.protocol.TType.I32, (short)3);
    private static final org.apache.thrift.protocol.TField URL_PREFIX_FIELD_DESC = new org.apache.thrift.protocol.TField("urlPrefix", org.apache.thrift.protocol.TType.STRING, (short)4);
    private static final org.apache.thrift.protocol.TField CLIENT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("clientID", org.apache.thrift.protocol.TType.STRING, (short)5);
    private static final org.apache.thrift.protocol.TField HCE_CARD_FIELD_DESC = new org.apache.thrift.protocol.TField("hceCard", org.apache.thrift.protocol.TType.STRUCT, (short)6);
    private static final org.apache.thrift.protocol.TField PSP_CONFIG_FIELD_DESC = new org.apache.thrift.protocol.TField("pspConfig", org.apache.thrift.protocol.TType.MAP, (short)7);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new initConsumer_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new initConsumer_argsTupleSchemeFactory();

    public java.lang.String scheme; // required
    public java.lang.String hostname; // required
    public int port; // required
    public java.lang.String urlPrefix; // required
    public java.lang.String clientID; // required
    public com.worldpay.innovation.wpwithin.rpc.types.HCECard hceCard; // required
    public java.util.Map<java.lang.String,java.lang.String> pspConfig; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SCHEME((short)1, "scheme"),
      HOSTNAME((short)2, "hostname"),
      PORT((short)3, "port"),
      URL_PREFIX((short)4, "urlPrefix"),
      CLIENT_ID((short)5, "clientID"),
      HCE_CARD((short)6, "hceCard"),
      PSP_CONFIG((short)7, "pspConfig");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // SCHEME
            return SCHEME;
          case 2: // HOSTNAME
            return HOSTNAME;
          case 3: // PORT
            return PORT;
          case 4: // URL_PREFIX
            return URL_PREFIX;
          case 5: // CLIENT_ID
            return CLIENT_ID;
          case 6: // HCE_CARD
            return HCE_CARD;
          case 7: // PSP_CONFIG
            return PSP_CONFIG;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __PORT_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SCHEME, new org.apache.thrift.meta_data.FieldMetaData("scheme", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.HOSTNAME, new org.apache.thrift.meta_data.FieldMetaData("hostname", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.PORT, new org.apache.thrift.meta_data.FieldMetaData("port", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.URL_PREFIX, new org.apache.thrift.meta_data.FieldMetaData("urlPrefix", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.CLIENT_ID, new org.apache.thrift.meta_data.FieldMetaData("clientID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      tmpMap.put(_Fields.HCE_CARD, new org.apache.thrift.meta_data.FieldMetaData("hceCard", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.HCECard.class)));
      tmpMap.put(_Fields.PSP_CONFIG, new org.apache.thrift.meta_data.FieldMetaData("pspConfig", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(initConsumer_args.class, metaDataMap);
    }

    public initConsumer_args() {
    }

    public initConsumer_args(
      java.lang.String scheme,
      java.lang.String hostname,
      int port,
      java.lang.String urlPrefix,
      java.lang.String clientID,
      com.worldpay.innovation.wpwithin.rpc.types.HCECard hceCard,
      java.util.Map<java.lang.String,java.lang.String> pspConfig)
    {
      this();
      this.scheme = scheme;
      this.hostname = hostname;
      this.port = port;
      setPortIsSet(true);
      this.urlPrefix = urlPrefix;
      this.clientID = clientID;
      this.hceCard = hceCard;
      this.pspConfig = pspConfig;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public initConsumer_args(initConsumer_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetScheme()) {
        this.scheme = other.scheme;
      }
      if (other.isSetHostname()) {
        this.hostname = other.hostname;
      }
      this.port = other.port;
      if (other.isSetUrlPrefix()) {
        this.urlPrefix = other.urlPrefix;
      }
      if (other.isSetClientID()) {
        this.clientID = other.clientID;
      }
      if (other.isSetHceCard()) {
        this.hceCard = new com.worldpay.innovation.wpwithin.rpc.types.HCECard(other.hceCard);
      }
      if (other.isSetPspConfig()) {
        java.util.Map<java.lang.String,java.lang.String> __this__pspConfig = new java.util.HashMap<java.lang.String,java.lang.String>(other.pspConfig);
        this.pspConfig = __this__pspConfig;
      }
    }

    public initConsumer_args deepCopy() {
      return new initConsumer_args(this);
    }

    @Override
    public void clear() {
      this.scheme = null;
      this.hostname = null;
      setPortIsSet(false);
      this.port = 0;
      this.urlPrefix = null;
      this.clientID = null;
      this.hceCard = null;
      this.pspConfig = null;
    }

    public java.lang.String getScheme() {
      return this.scheme;
    }

    public initConsumer_args setScheme(java.lang.String scheme) {
      this.scheme = scheme;
      return this;
    }

    public void unsetScheme() {
      this.scheme = null;
    }

    /** Returns true if field scheme is set (has been assigned a value) and false otherwise */
    public boolean isSetScheme() {
      return this.scheme != null;
    }

    public void setSchemeIsSet(boolean value) {
      if (!value) {
        this.scheme = null;
      }
    }

    public java.lang.String getHostname() {
      return this.hostname;
    }

    public initConsumer_args setHostname(java.lang.String hostname) {
      this.hostname = hostname;
      return this;
    }

    public void unsetHostname() {
      this.hostname = null;
    }

    /** Returns true if field hostname is set (has been assigned a value) and false otherwise */
    public boolean isSetHostname() {
      return this.hostname != null;
    }

    public void setHostnameIsSet(boolean value) {
      if (!value) {
        this.hostname = null;
      }
    }

    public int getPort() {
      return this.port;
    }

    public initConsumer_args setPort(int port) {
      this.port = port;
      setPortIsSet(true);
      return this;
    }

    public void unsetPort() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PORT_ISSET_ID);
    }

    /** Returns true if field port is set (has been assigned a value) and false otherwise */
    public boolean isSetPort() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PORT_ISSET_ID);
    }

    public void setPortIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PORT_ISSET_ID, value);
    }

    public java.lang.String getUrlPrefix() {
      return this.urlPrefix;
    }

    public initConsumer_args setUrlPrefix(java.lang.String urlPrefix) {
      this.urlPrefix = urlPrefix;
      return this;
    }

    public void unsetUrlPrefix() {
      this.urlPrefix = null;
    }

    /** Returns true if field urlPrefix is set (has been assigned a value) and false otherwise */
    public boolean isSetUrlPrefix() {
      return this.urlPrefix != null;
    }

    public void setUrlPrefixIsSet(boolean value) {
      if (!value) {
        this.urlPrefix = null;
      }
    }

    public java.lang.String getClientID() {
      return this.clientID;
    }

    public initConsumer_args setClientID(java.lang.String clientID) {
      this.clientID = clientID;
      return this;
    }

    public void unsetClientID() {
      this.clientID = null;
    }

    /** Returns true if field clientID is set (has been assigned a value) and false otherwise */
    public boolean isSetClientID() {
      return this.clientID != null;
    }

    public void setClientIDIsSet(boolean value) {
      if (!value) {
        this.clientID = null;
      }
    }

    public com.worldpay.innovation.wpwithin.rpc.types.HCECard getHceCard() {
      return this.hceCard;
    }

    public initConsumer_args setHceCard(com.worldpay.innovation.wpwithin.rpc.types.HCECard hceCard) {
      this.hceCard = hceCard;
      return this;
    }

    public void unsetHceCard() {
      this.hceCard = null;
    }

    /** Returns true if field hceCard is set (has been assigned a value) and false otherwise */
    public boolean isSetHceCard() {
      return this.hceCard != null;
    }

    public void setHceCardIsSet(boolean value) {
      if (!value) {
        this.hceCard = null;
      }
    }

    public int getPspConfigSize() {
      return (this.pspConfig == null) ? 0 : this.pspConfig.size();
    }

    public void putToPspConfig(java.lang.String key, java.lang.String val) {
      if (this.pspConfig == null) {
        this.pspConfig = new java.util.HashMap<java.lang.String,java.lang.String>();
      }
      this.pspConfig.put(key, val);
    }

    public java.util.Map<java.lang.String,java.lang.String> getPspConfig() {
      return this.pspConfig;
    }

    public initConsumer_args setPspConfig(java.util.Map<java.lang.String,java.lang.String> pspConfig) {
      this.pspConfig = pspConfig;
      return this;
    }

    public void unsetPspConfig() {
      this.pspConfig = null;
    }

    /** Returns true if field pspConfig is set (has been assigned a value) and false otherwise */
    public boolean isSetPspConfig() {
      return this.pspConfig != null;
    }

    public void setPspConfigIsSet(boolean value) {
      if (!value) {
        this.pspConfig = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SCHEME:
        if (value == null) {
          unsetScheme();
        } else {
          setScheme((java.lang.String)value);
        }
        break;

      case HOSTNAME:
        if (value == null) {
          unsetHostname();
        } else {
          setHostname((java.lang.String)value);
        }
        break;

      case PORT:
        if (value == null) {
          unsetPort();
        } else {
          setPort((java.lang.Integer)value);
        }
        break;

      case URL_PREFIX:
        if (value == null) {
          unsetUrlPrefix();
        } else {
          setUrlPrefix((java.lang.String)value);
        }
        break;

      case CLIENT_ID:
        if (value == null) {
          unsetClientID();
        } else {
          setClientID((java.lang.String)value);
        }
        break;

      case HCE_CARD:
        if (value == null) {
          unsetHceCard();
        } else {
          setHceCard((com.worldpay.innovation.wpwithin.rpc.types.HCECard)value);
        }
        break;

      case PSP_CONFIG:
        if (value == null) {
          unsetPspConfig();
        } else {
          setPspConfig((java.util.Map<java.lang.String,java.lang.String>)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SCHEME:
        return getScheme();

      case HOSTNAME:
        return getHostname();

      case PORT:
        return getPort();

      case URL_PREFIX:
        return getUrlPrefix();

      case CLIENT_ID:
        return getClientID();

      case HCE_CARD:
        return getHceCard();

      case PSP_CONFIG:
        return getPspConfig();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SCHEME:
        return isSetScheme();
      case HOSTNAME:
        return isSetHostname();
      case PORT:
        return isSetPort();
      case URL_PREFIX:
        return isSetUrlPrefix();
      case CLIENT_ID:
        return isSetClientID();
      case HCE_CARD:
        return isSetHceCard();
      case PSP_CONFIG:
        return isSetPspConfig();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof initConsumer_args)
        return this.equals((initConsumer_args)that);
      return false;
    }

    public boolean equals(initConsumer_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_scheme = true && this.isSetScheme();
      boolean that_present_scheme = true && that.isSetScheme();
      if (this_present_scheme || that_present_scheme) {
        if (!(this_present_scheme && that_present_scheme))
          return false;
        if (!this.scheme.equals(that.scheme))
          return false;
      }

      boolean this_present_hostname = true && this.isSetHostname();
      boolean that_present_hostname = true && that.isSetHostname();
      if (this_present_hostname || that_present_hostname) {
        if (!(this_present_hostname && that_present_hostname))
          return false;
        if (!this.hostname.equals(that.hostname))
          return false;
      }

      boolean this_present_port = true;
      boolean that_present_port = true;
      if (this_present_port || that_present_port) {
        if (!(this_present_port && that_present_port))
          return false;
        if (this.port != that.port)
          return false;
      }

      boolean this_present_urlPrefix = true && this.isSetUrlPrefix();
      boolean that_present_urlPrefix = true && that.isSetUrlPrefix();
      if (this_present_urlPrefix || that_present_urlPrefix) {
        if (!(this_present_urlPrefix && that_present_urlPrefix))
          return false;
        if (!this.urlPrefix.equals(that.urlPrefix))
          return false;
      }

      boolean this_present_clientID = true && this.isSetClientID();
      boolean that_present_clientID = true && that.isSetClientID();
      if (this_present_clientID || that_present_clientID) {
        if (!(this_present_clientID && that_present_clientID))
          return false;
        if (!this.clientID.equals(that.clientID))
          return false;
      }

      boolean this_present_hceCard = true && this.isSetHceCard();
      boolean that_present_hceCard = true && that.isSetHceCard();
      if (this_present_hceCard || that_present_hceCard) {
        if (!(this_present_hceCard && that_present_hceCard))
          return false;
        if (!this.hceCard.equals(that.hceCard))
          return false;
      }

      boolean this_present_pspConfig = true && this.isSetPspConfig();
      boolean that_present_pspConfig = true && that.isSetPspConfig();
      if (this_present_pspConfig || that_present_pspConfig) {
        if (!(this_present_pspConfig && that_present_pspConfig))
          return false;
        if (!this.pspConfig.equals(that.pspConfig))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetScheme()) ? 131071 : 524287);
      if (isSetScheme())
        hashCode = hashCode * 8191 + scheme.hashCode();

      hashCode = hashCode * 8191 + ((isSetHostname()) ? 131071 : 524287);
      if (isSetHostname())
        hashCode = hashCode * 8191 + hostname.hashCode();

      hashCode = hashCode * 8191 + port;

      hashCode = hashCode * 8191 + ((isSetUrlPrefix()) ? 131071 : 524287);
      if (isSetUrlPrefix())
        hashCode = hashCode * 8191 + urlPrefix.hashCode();

      hashCode = hashCode * 8191 + ((isSetClientID()) ? 131071 : 524287);
      if (isSetClientID())
        hashCode = hashCode * 8191 + clientID.hashCode();

      hashCode = hashCode * 8191 + ((isSetHceCard()) ? 131071 : 524287);
      if (isSetHceCard())
        hashCode = hashCode * 8191 + hceCard.hashCode();

      hashCode = hashCode * 8191 + ((isSetPspConfig()) ? 131071 : 524287);
      if (isSetPspConfig())
        hashCode = hashCode * 8191 + pspConfig.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(initConsumer_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetScheme()).compareTo(other.isSetScheme());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetScheme()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.scheme, other.scheme);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetHostname()).compareTo(other.isSetHostname());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetHostname()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hostname, other.hostname);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPort()).compareTo(other.isSetPort());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPort()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.port, other.port);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetUrlPrefix()).compareTo(other.isSetUrlPrefix());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetUrlPrefix()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.urlPrefix, other.urlPrefix);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetClientID()).compareTo(other.isSetClientID());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetClientID()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clientID, other.clientID);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetHceCard()).compareTo(other.isSetHceCard());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetHceCard()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hceCard, other.hceCard);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPspConfig()).compareTo(other.isSetPspConfig());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPspConfig()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pspConfig, other.pspConfig);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("initConsumer_args(");
      boolean first = true;

      sb.append("scheme:");
      if (this.scheme == null) {
        sb.append("null");
      } else {
        sb.append(this.scheme);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("hostname:");
      if (this.hostname == null) {
        sb.append("null");
      } else {
        sb.append(this.hostname);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("port:");
      sb.append(this.port);
      first = false;
      if (!first) sb.append(", ");
      sb.append("urlPrefix:");
      if (this.urlPrefix == null) {
        sb.append("null");
      } else {
        sb.append(this.urlPrefix);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("clientID:");
      if (this.clientID == null) {
        sb.append("null");
      } else {
        sb.append(this.clientID);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("hceCard:");
      if (this.hceCard == null) {
        sb.append("null");
      } else {
        sb.append(this.hceCard);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("pspConfig:");
      if (this.pspConfig == null) {
        sb.append("null");
      } else {
        sb.append(this.pspConfig);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (hceCard != null) {
        hceCard.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class initConsumer_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public initConsumer_argsStandardScheme getScheme() {
        return new initConsumer_argsStandardScheme();
      }
    }

    private static class initConsumer_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<initConsumer_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, initConsumer_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // SCHEME
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.scheme = iprot.readString();
                struct.setSchemeIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // HOSTNAME
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.hostname = iprot.readString();
                struct.setHostnameIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // PORT
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.port = iprot.readI32();
                struct.setPortIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // URL_PREFIX
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.urlPrefix = iprot.readString();
                struct.setUrlPrefixIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 5: // CLIENT_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.clientID = iprot.readString();
                struct.setClientIDIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 6: // HCE_CARD
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.hceCard = new com.worldpay.innovation.wpwithin.rpc.types.HCECard();
                struct.hceCard.read(iprot);
                struct.setHceCardIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 7: // PSP_CONFIG
              if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
                {
                  org.apache.thrift.protocol.TMap _map0 = iprot.readMapBegin();
                  struct.pspConfig = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map0.size);
                  java.lang.String _key1;
                  java.lang.String _val2;
                  for (int _i3 = 0; _i3 < _map0.size; ++_i3)
                  {
                    _key1 = iprot.readString();
                    _val2 = iprot.readString();
                    struct.pspConfig.put(_key1, _val2);
                  }
                  iprot.readMapEnd();
                }
                struct.setPspConfigIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, initConsumer_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.scheme != null) {
          oprot.writeFieldBegin(SCHEME_FIELD_DESC);
          oprot.writeString(struct.scheme);
          oprot.writeFieldEnd();
        }
        if (struct.hostname != null) {
          oprot.writeFieldBegin(HOSTNAME_FIELD_DESC);
          oprot.writeString(struct.hostname);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(PORT_FIELD_DESC);
        oprot.writeI32(struct.port);
        oprot.writeFieldEnd();
        if (struct.urlPrefix != null) {
          oprot.writeFieldBegin(URL_PREFIX_FIELD_DESC);
          oprot.writeString(struct.urlPrefix);
          oprot.writeFieldEnd();
        }
        if (struct.clientID != null) {
          oprot.writeFieldBegin(CLIENT_ID_FIELD_DESC);
          oprot.writeString(struct.clientID);
          oprot.writeFieldEnd();
        }
        if (struct.hceCard != null) {
          oprot.writeFieldBegin(HCE_CARD_FIELD_DESC);
          struct.hceCard.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.pspConfig != null) {
          oprot.writeFieldBegin(PSP_CONFIG_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.pspConfig.size()));
            for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter4 : struct.pspConfig.entrySet())
            {
              oprot.writeString(_iter4.getKey());
              oprot.writeString(_iter4.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class initConsumer_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public initConsumer_argsTupleScheme getScheme() {
        return new initConsumer_argsTupleScheme();
      }
    }

    private static class initConsumer_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<initConsumer_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, initConsumer_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetScheme()) {
          optionals.set(0);
        }
        if (struct.isSetHostname()) {
          optionals.set(1);
        }
        if (struct.isSetPort()) {
          optionals.set(2);
        }
        if (struct.isSetUrlPrefix()) {
          optionals.set(3);
        }
        if (struct.isSetClientID()) {
          optionals.set(4);
        }
        if (struct.isSetHceCard()) {
          optionals.set(5);
        }
        if (struct.isSetPspConfig()) {
          optionals.set(6);
        }
        oprot.writeBitSet(optionals, 7);
        if (struct.isSetScheme()) {
          oprot.writeString(struct.scheme);
        }
        if (struct.isSetHostname()) {
          oprot.writeString(struct.hostname);
        }
        if (struct.isSetPort()) {
          oprot.writeI32(struct.port);
        }
        if (struct.isSetUrlPrefix()) {
          oprot.writeString(struct.urlPrefix);
        }
        if (struct.isSetClientID()) {
          oprot.writeString(struct.clientID);
        }
        if (struct.isSetHceCard()) {
          struct.hceCard.write(oprot);
        }
        if (struct.isSetPspConfig()) {
          {
            oprot.writeI32(struct.pspConfig.size());
            for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter5 : struct.pspConfig.entrySet())
            {
              oprot.writeString(_iter5.getKey());
              oprot.writeString(_iter5.getValue());
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, initConsumer_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(7);
        if (incoming.get(0)) {
          struct.scheme = iprot.readString();
          struct.setSchemeIsSet(true);
        }
        if (incoming.get(1)) {
          struct.hostname = iprot.readString();
          struct.setHostnameIsSet(true);
        }
        if (incoming.get(2)) {
          struct.port = iprot.readI32();
          struct.setPortIsSet(true);
        }
        if (incoming.get(3)) {
          struct.urlPrefix = iprot.readString();
          struct.setUrlPrefixIsSet(true);
        }
        if (incoming.get(4)) {
          struct.clientID = iprot.readString();
          struct.setClientIDIsSet(true);
        }
        if (incoming.get(5)) {
          struct.hceCard = new com.worldpay.innovation.wpwithin.rpc.types.HCECard();
          struct.hceCard.read(iprot);
          struct.setHceCardIsSet(true);
        }
        if (incoming.get(6)) {
          {
            org.apache.thrift.protocol.TMap _map6 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
            struct.pspConfig = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map6.size);
            java.lang.String _key7;
            java.lang.String _val8;
            for (int _i9 = 0; _i9 < _map6.size; ++_i9)
            {
              _key7 = iprot.readString();
              _val8 = iprot.readString();
              struct.pspConfig.put(_key7, _val8);
            }
          }
          struct.setPspConfigIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class initConsumer_result implements org.apache.thrift.TBase<initConsumer_result, initConsumer_result._Fields>, java.io.Serializable, Cloneable, Comparable<initConsumer_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("initConsumer_result");

    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new initConsumer_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new initConsumer_resultTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.Error err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ERR((short)1, "err");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Error.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(initConsumer_result.class, metaDataMap);
    }

    public initConsumer_result() {
    }

    public initConsumer_result(
      com.worldpay.innovation.wpwithin.rpc.types.Error err)
    {
      this();
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public initConsumer_result(initConsumer_result other) {
      if (other.isSetErr()) {
        this.err = new com.worldpay.innovation.wpwithin.rpc.types.Error(other.err);
      }
    }

    public initConsumer_result deepCopy() {
      return new initConsumer_result(this);
    }

    @Override
    public void clear() {
      this.err = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Error getErr() {
      return this.err;
    }

    public initConsumer_result setErr(com.worldpay.innovation.wpwithin.rpc.types.Error err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((com.worldpay.innovation.wpwithin.rpc.types.Error)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ERR:
        return getErr();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ERR:
        return isSetErr();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof initConsumer_result)
        return this.equals((initConsumer_result)that);
      return false;
    }

    public boolean equals(initConsumer_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetErr()) ? 131071 : 524287);
      if (isSetErr())
        hashCode = hashCode * 8191 + err.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(initConsumer_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("initConsumer_result(");
      boolean first = true;

      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class initConsumer_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public initConsumer_resultStandardScheme getScheme() {
        return new initConsumer_resultStandardScheme();
      }
    }

    private static class initConsumer_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<initConsumer_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, initConsumer_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, initConsumer_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class initConsumer_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public initConsumer_resultTupleScheme getScheme() {
        return new initConsumer_resultTupleScheme();
      }
    }

    private static class initConsumer_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<initConsumer_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, initConsumer_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetErr()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, initConsumer_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class initProducer_args implements org.apache.thrift.TBase<initProducer_args, initProducer_args._Fields>, java.io.Serializable, Cloneable, Comparable<initProducer_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("initProducer_args");

    private static final org.apache.thrift.protocol.TField PSP_CONFIG_FIELD_DESC = new org.apache.thrift.protocol.TField("pspConfig", org.apache.thrift.protocol.TType.MAP, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new initProducer_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new initProducer_argsTupleSchemeFactory();

    public java.util.Map<java.lang.String,java.lang.String> pspConfig; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PSP_CONFIG((short)1, "pspConfig");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PSP_CONFIG
            return PSP_CONFIG;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PSP_CONFIG, new org.apache.thrift.meta_data.FieldMetaData("pspConfig", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
              new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(initProducer_args.class, metaDataMap);
    }

    public initProducer_args() {
    }

    public initProducer_args(
      java.util.Map<java.lang.String,java.lang.String> pspConfig)
    {
      this();
      this.pspConfig = pspConfig;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public initProducer_args(initProducer_args other) {
      if (other.isSetPspConfig()) {
        java.util.Map<java.lang.String,java.lang.String> __this__pspConfig = new java.util.HashMap<java.lang.String,java.lang.String>(other.pspConfig);
        this.pspConfig = __this__pspConfig;
      }
    }

    public initProducer_args deepCopy() {
      return new initProducer_args(this);
    }

    @Override
    public void clear() {
      this.pspConfig = null;
    }

    public int getPspConfigSize() {
      return (this.pspConfig == null) ? 0 : this.pspConfig.size();
    }

    public void putToPspConfig(java.lang.String key, java.lang.String val) {
      if (this.pspConfig == null) {
        this.pspConfig = new java.util.HashMap<java.lang.String,java.lang.String>();
      }
      this.pspConfig.put(key, val);
    }

    public java.util.Map<java.lang.String,java.lang.String> getPspConfig() {
      return this.pspConfig;
    }

    public initProducer_args setPspConfig(java.util.Map<java.lang.String,java.lang.String> pspConfig) {
      this.pspConfig = pspConfig;
      return this;
    }

    public void unsetPspConfig() {
      this.pspConfig = null;
    }

    /** Returns true if field pspConfig is set (has been assigned a value) and false otherwise */
    public boolean isSetPspConfig() {
      return this.pspConfig != null;
    }

    public void setPspConfigIsSet(boolean value) {
      if (!value) {
        this.pspConfig = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case PSP_CONFIG:
        if (value == null) {
          unsetPspConfig();
        } else {
          setPspConfig((java.util.Map<java.lang.String,java.lang.String>)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case PSP_CONFIG:
        return getPspConfig();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case PSP_CONFIG:
        return isSetPspConfig();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof initProducer_args)
        return this.equals((initProducer_args)that);
      return false;
    }

    public boolean equals(initProducer_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_pspConfig = true && this.isSetPspConfig();
      boolean that_present_pspConfig = true && that.isSetPspConfig();
      if (this_present_pspConfig || that_present_pspConfig) {
        if (!(this_present_pspConfig && that_present_pspConfig))
          return false;
        if (!this.pspConfig.equals(that.pspConfig))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetPspConfig()) ? 131071 : 524287);
      if (isSetPspConfig())
        hashCode = hashCode * 8191 + pspConfig.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(initProducer_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetPspConfig()).compareTo(other.isSetPspConfig());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPspConfig()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pspConfig, other.pspConfig);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("initProducer_args(");
      boolean first = true;

      sb.append("pspConfig:");
      if (this.pspConfig == null) {
        sb.append("null");
      } else {
        sb.append(this.pspConfig);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class initProducer_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public initProducer_argsStandardScheme getScheme() {
        return new initProducer_argsStandardScheme();
      }
    }

    private static class initProducer_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<initProducer_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, initProducer_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PSP_CONFIG
              if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
                {
                  org.apache.thrift.protocol.TMap _map10 = iprot.readMapBegin();
                  struct.pspConfig = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map10.size);
                  java.lang.String _key11;
                  java.lang.String _val12;
                  for (int _i13 = 0; _i13 < _map10.size; ++_i13)
                  {
                    _key11 = iprot.readString();
                    _val12 = iprot.readString();
                    struct.pspConfig.put(_key11, _val12);
                  }
                  iprot.readMapEnd();
                }
                struct.setPspConfigIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, initProducer_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.pspConfig != null) {
          oprot.writeFieldBegin(PSP_CONFIG_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.pspConfig.size()));
            for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter14 : struct.pspConfig.entrySet())
            {
              oprot.writeString(_iter14.getKey());
              oprot.writeString(_iter14.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class initProducer_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public initProducer_argsTupleScheme getScheme() {
        return new initProducer_argsTupleScheme();
      }
    }

    private static class initProducer_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<initProducer_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, initProducer_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetPspConfig()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetPspConfig()) {
          {
            oprot.writeI32(struct.pspConfig.size());
            for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter15 : struct.pspConfig.entrySet())
            {
              oprot.writeString(_iter15.getKey());
              oprot.writeString(_iter15.getValue());
            }
          }
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, initProducer_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TMap _map16 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
            struct.pspConfig = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map16.size);
            java.lang.String _key17;
            java.lang.String _val18;
            for (int _i19 = 0; _i19 < _map16.size; ++_i19)
            {
              _key17 = iprot.readString();
              _val18 = iprot.readString();
              struct.pspConfig.put(_key17, _val18);
            }
          }
          struct.setPspConfigIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class initProducer_result implements org.apache.thrift.TBase<initProducer_result, initProducer_result._Fields>, java.io.Serializable, Cloneable, Comparable<initProducer_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("initProducer_result");

    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new initProducer_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new initProducer_resultTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.Error err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ERR((short)1, "err");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Error.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(initProducer_result.class, metaDataMap);
    }

    public initProducer_result() {
    }

    public initProducer_result(
      com.worldpay.innovation.wpwithin.rpc.types.Error err)
    {
      this();
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public initProducer_result(initProducer_result other) {
      if (other.isSetErr()) {
        this.err = new com.worldpay.innovation.wpwithin.rpc.types.Error(other.err);
      }
    }

    public initProducer_result deepCopy() {
      return new initProducer_result(this);
    }

    @Override
    public void clear() {
      this.err = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Error getErr() {
      return this.err;
    }

    public initProducer_result setErr(com.worldpay.innovation.wpwithin.rpc.types.Error err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((com.worldpay.innovation.wpwithin.rpc.types.Error)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ERR:
        return getErr();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ERR:
        return isSetErr();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof initProducer_result)
        return this.equals((initProducer_result)that);
      return false;
    }

    public boolean equals(initProducer_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetErr()) ? 131071 : 524287);
      if (isSetErr())
        hashCode = hashCode * 8191 + err.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(initProducer_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("initProducer_result(");
      boolean first = true;

      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class initProducer_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public initProducer_resultStandardScheme getScheme() {
        return new initProducer_resultStandardScheme();
      }
    }

    private static class initProducer_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<initProducer_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, initProducer_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, initProducer_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class initProducer_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public initProducer_resultTupleScheme getScheme() {
        return new initProducer_resultTupleScheme();
      }
    }

    private static class initProducer_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<initProducer_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, initProducer_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetErr()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, initProducer_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getDevice_args implements org.apache.thrift.TBase<getDevice_args, getDevice_args._Fields>, java.io.Serializable, Cloneable, Comparable<getDevice_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getDevice_args");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getDevice_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getDevice_argsTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getDevice_args.class, metaDataMap);
    }

    public getDevice_args() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getDevice_args(getDevice_args other) {
    }

    public getDevice_args deepCopy() {
      return new getDevice_args(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getDevice_args)
        return this.equals((getDevice_args)that);
      return false;
    }

    public boolean equals(getDevice_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(getDevice_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getDevice_args(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getDevice_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getDevice_argsStandardScheme getScheme() {
        return new getDevice_argsStandardScheme();
      }
    }

    private static class getDevice_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getDevice_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getDevice_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getDevice_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getDevice_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getDevice_argsTupleScheme getScheme() {
        return new getDevice_argsTupleScheme();
      }
    }

    private static class getDevice_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getDevice_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getDevice_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getDevice_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getDevice_result implements org.apache.thrift.TBase<getDevice_result, getDevice_result._Fields>, java.io.Serializable, Cloneable, Comparable<getDevice_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getDevice_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getDevice_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getDevice_resultTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.Device success; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Device.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getDevice_result.class, metaDataMap);
    }

    public getDevice_result() {
    }

    public getDevice_result(
      com.worldpay.innovation.wpwithin.rpc.types.Device success)
    {
      this();
      this.success = success;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getDevice_result(getDevice_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.worldpay.innovation.wpwithin.rpc.types.Device(other.success);
      }
    }

    public getDevice_result deepCopy() {
      return new getDevice_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Device getSuccess() {
      return this.success;
    }

    public getDevice_result setSuccess(com.worldpay.innovation.wpwithin.rpc.types.Device success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.worldpay.innovation.wpwithin.rpc.types.Device)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getDevice_result)
        return this.equals((getDevice_result)that);
      return false;
    }

    public boolean equals(getDevice_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getDevice_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getDevice_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getDevice_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getDevice_resultStandardScheme getScheme() {
        return new getDevice_resultStandardScheme();
      }
    }

    private static class getDevice_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getDevice_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getDevice_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.worldpay.innovation.wpwithin.rpc.types.Device();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getDevice_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getDevice_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getDevice_resultTupleScheme getScheme() {
        return new getDevice_resultTupleScheme();
      }
    }

    private static class getDevice_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getDevice_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getDevice_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getDevice_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.success = new com.worldpay.innovation.wpwithin.rpc.types.Device();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class startServiceBroadcast_args implements org.apache.thrift.TBase<startServiceBroadcast_args, startServiceBroadcast_args._Fields>, java.io.Serializable, Cloneable, Comparable<startServiceBroadcast_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("startServiceBroadcast_args");

    private static final org.apache.thrift.protocol.TField TIMEOUT_MILLIS_FIELD_DESC = new org.apache.thrift.protocol.TField("timeoutMillis", org.apache.thrift.protocol.TType.I32, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new startServiceBroadcast_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new startServiceBroadcast_argsTupleSchemeFactory();

    public int timeoutMillis; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      TIMEOUT_MILLIS((short)1, "timeoutMillis");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // TIMEOUT_MILLIS
            return TIMEOUT_MILLIS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __TIMEOUTMILLIS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.TIMEOUT_MILLIS, new org.apache.thrift.meta_data.FieldMetaData("timeoutMillis", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(startServiceBroadcast_args.class, metaDataMap);
    }

    public startServiceBroadcast_args() {
    }

    public startServiceBroadcast_args(
      int timeoutMillis)
    {
      this();
      this.timeoutMillis = timeoutMillis;
      setTimeoutMillisIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public startServiceBroadcast_args(startServiceBroadcast_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.timeoutMillis = other.timeoutMillis;
    }

    public startServiceBroadcast_args deepCopy() {
      return new startServiceBroadcast_args(this);
    }

    @Override
    public void clear() {
      setTimeoutMillisIsSet(false);
      this.timeoutMillis = 0;
    }

    public int getTimeoutMillis() {
      return this.timeoutMillis;
    }

    public startServiceBroadcast_args setTimeoutMillis(int timeoutMillis) {
      this.timeoutMillis = timeoutMillis;
      setTimeoutMillisIsSet(true);
      return this;
    }

    public void unsetTimeoutMillis() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TIMEOUTMILLIS_ISSET_ID);
    }

    /** Returns true if field timeoutMillis is set (has been assigned a value) and false otherwise */
    public boolean isSetTimeoutMillis() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TIMEOUTMILLIS_ISSET_ID);
    }

    public void setTimeoutMillisIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TIMEOUTMILLIS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case TIMEOUT_MILLIS:
        if (value == null) {
          unsetTimeoutMillis();
        } else {
          setTimeoutMillis((java.lang.Integer)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case TIMEOUT_MILLIS:
        return getTimeoutMillis();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case TIMEOUT_MILLIS:
        return isSetTimeoutMillis();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof startServiceBroadcast_args)
        return this.equals((startServiceBroadcast_args)that);
      return false;
    }

    public boolean equals(startServiceBroadcast_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_timeoutMillis = true;
      boolean that_present_timeoutMillis = true;
      if (this_present_timeoutMillis || that_present_timeoutMillis) {
        if (!(this_present_timeoutMillis && that_present_timeoutMillis))
          return false;
        if (this.timeoutMillis != that.timeoutMillis)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + timeoutMillis;

      return hashCode;
    }

    @Override
    public int compareTo(startServiceBroadcast_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetTimeoutMillis()).compareTo(other.isSetTimeoutMillis());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTimeoutMillis()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeoutMillis, other.timeoutMillis);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("startServiceBroadcast_args(");
      boolean first = true;

      sb.append("timeoutMillis:");
      sb.append(this.timeoutMillis);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class startServiceBroadcast_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public startServiceBroadcast_argsStandardScheme getScheme() {
        return new startServiceBroadcast_argsStandardScheme();
      }
    }

    private static class startServiceBroadcast_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<startServiceBroadcast_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, startServiceBroadcast_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // TIMEOUT_MILLIS
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.timeoutMillis = iprot.readI32();
                struct.setTimeoutMillisIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, startServiceBroadcast_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(TIMEOUT_MILLIS_FIELD_DESC);
        oprot.writeI32(struct.timeoutMillis);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class startServiceBroadcast_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public startServiceBroadcast_argsTupleScheme getScheme() {
        return new startServiceBroadcast_argsTupleScheme();
      }
    }

    private static class startServiceBroadcast_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<startServiceBroadcast_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, startServiceBroadcast_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetTimeoutMillis()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetTimeoutMillis()) {
          oprot.writeI32(struct.timeoutMillis);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, startServiceBroadcast_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.timeoutMillis = iprot.readI32();
          struct.setTimeoutMillisIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class startServiceBroadcast_result implements org.apache.thrift.TBase<startServiceBroadcast_result, startServiceBroadcast_result._Fields>, java.io.Serializable, Cloneable, Comparable<startServiceBroadcast_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("startServiceBroadcast_result");

    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new startServiceBroadcast_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new startServiceBroadcast_resultTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.Error err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ERR((short)1, "err");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Error.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(startServiceBroadcast_result.class, metaDataMap);
    }

    public startServiceBroadcast_result() {
    }

    public startServiceBroadcast_result(
      com.worldpay.innovation.wpwithin.rpc.types.Error err)
    {
      this();
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public startServiceBroadcast_result(startServiceBroadcast_result other) {
      if (other.isSetErr()) {
        this.err = new com.worldpay.innovation.wpwithin.rpc.types.Error(other.err);
      }
    }

    public startServiceBroadcast_result deepCopy() {
      return new startServiceBroadcast_result(this);
    }

    @Override
    public void clear() {
      this.err = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Error getErr() {
      return this.err;
    }

    public startServiceBroadcast_result setErr(com.worldpay.innovation.wpwithin.rpc.types.Error err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((com.worldpay.innovation.wpwithin.rpc.types.Error)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ERR:
        return getErr();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ERR:
        return isSetErr();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof startServiceBroadcast_result)
        return this.equals((startServiceBroadcast_result)that);
      return false;
    }

    public boolean equals(startServiceBroadcast_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetErr()) ? 131071 : 524287);
      if (isSetErr())
        hashCode = hashCode * 8191 + err.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(startServiceBroadcast_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("startServiceBroadcast_result(");
      boolean first = true;

      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class startServiceBroadcast_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public startServiceBroadcast_resultStandardScheme getScheme() {
        return new startServiceBroadcast_resultStandardScheme();
      }
    }

    private static class startServiceBroadcast_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<startServiceBroadcast_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, startServiceBroadcast_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, startServiceBroadcast_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class startServiceBroadcast_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public startServiceBroadcast_resultTupleScheme getScheme() {
        return new startServiceBroadcast_resultTupleScheme();
      }
    }

    private static class startServiceBroadcast_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<startServiceBroadcast_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, startServiceBroadcast_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetErr()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, startServiceBroadcast_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class stopServiceBroadcast_args implements org.apache.thrift.TBase<stopServiceBroadcast_args, stopServiceBroadcast_args._Fields>, java.io.Serializable, Cloneable, Comparable<stopServiceBroadcast_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("stopServiceBroadcast_args");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new stopServiceBroadcast_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new stopServiceBroadcast_argsTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(stopServiceBroadcast_args.class, metaDataMap);
    }

    public stopServiceBroadcast_args() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public stopServiceBroadcast_args(stopServiceBroadcast_args other) {
    }

    public stopServiceBroadcast_args deepCopy() {
      return new stopServiceBroadcast_args(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof stopServiceBroadcast_args)
        return this.equals((stopServiceBroadcast_args)that);
      return false;
    }

    public boolean equals(stopServiceBroadcast_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(stopServiceBroadcast_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("stopServiceBroadcast_args(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class stopServiceBroadcast_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public stopServiceBroadcast_argsStandardScheme getScheme() {
        return new stopServiceBroadcast_argsStandardScheme();
      }
    }

    private static class stopServiceBroadcast_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<stopServiceBroadcast_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, stopServiceBroadcast_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, stopServiceBroadcast_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class stopServiceBroadcast_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public stopServiceBroadcast_argsTupleScheme getScheme() {
        return new stopServiceBroadcast_argsTupleScheme();
      }
    }

    private static class stopServiceBroadcast_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<stopServiceBroadcast_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, stopServiceBroadcast_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, stopServiceBroadcast_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class stopServiceBroadcast_result implements org.apache.thrift.TBase<stopServiceBroadcast_result, stopServiceBroadcast_result._Fields>, java.io.Serializable, Cloneable, Comparable<stopServiceBroadcast_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("stopServiceBroadcast_result");

    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new stopServiceBroadcast_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new stopServiceBroadcast_resultTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.Error err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ERR((short)1, "err");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Error.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(stopServiceBroadcast_result.class, metaDataMap);
    }

    public stopServiceBroadcast_result() {
    }

    public stopServiceBroadcast_result(
      com.worldpay.innovation.wpwithin.rpc.types.Error err)
    {
      this();
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public stopServiceBroadcast_result(stopServiceBroadcast_result other) {
      if (other.isSetErr()) {
        this.err = new com.worldpay.innovation.wpwithin.rpc.types.Error(other.err);
      }
    }

    public stopServiceBroadcast_result deepCopy() {
      return new stopServiceBroadcast_result(this);
    }

    @Override
    public void clear() {
      this.err = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Error getErr() {
      return this.err;
    }

    public stopServiceBroadcast_result setErr(com.worldpay.innovation.wpwithin.rpc.types.Error err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((com.worldpay.innovation.wpwithin.rpc.types.Error)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case ERR:
        return getErr();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case ERR:
        return isSetErr();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof stopServiceBroadcast_result)
        return this.equals((stopServiceBroadcast_result)that);
      return false;
    }

    public boolean equals(stopServiceBroadcast_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetErr()) ? 131071 : 524287);
      if (isSetErr())
        hashCode = hashCode * 8191 + err.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(stopServiceBroadcast_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("stopServiceBroadcast_result(");
      boolean first = true;

      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class stopServiceBroadcast_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public stopServiceBroadcast_resultStandardScheme getScheme() {
        return new stopServiceBroadcast_resultStandardScheme();
      }
    }

    private static class stopServiceBroadcast_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<stopServiceBroadcast_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, stopServiceBroadcast_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, stopServiceBroadcast_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class stopServiceBroadcast_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public stopServiceBroadcast_resultTupleScheme getScheme() {
        return new stopServiceBroadcast_resultTupleScheme();
      }
    }

    private static class stopServiceBroadcast_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<stopServiceBroadcast_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, stopServiceBroadcast_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetErr()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, stopServiceBroadcast_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class deviceDiscovery_args implements org.apache.thrift.TBase<deviceDiscovery_args, deviceDiscovery_args._Fields>, java.io.Serializable, Cloneable, Comparable<deviceDiscovery_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deviceDiscovery_args");

    private static final org.apache.thrift.protocol.TField TIMEOUT_MILLIS_FIELD_DESC = new org.apache.thrift.protocol.TField("timeoutMillis", org.apache.thrift.protocol.TType.I32, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new deviceDiscovery_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new deviceDiscovery_argsTupleSchemeFactory();

    public int timeoutMillis; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      TIMEOUT_MILLIS((short)1, "timeoutMillis");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // TIMEOUT_MILLIS
            return TIMEOUT_MILLIS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __TIMEOUTMILLIS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.TIMEOUT_MILLIS, new org.apache.thrift.meta_data.FieldMetaData("timeoutMillis", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deviceDiscovery_args.class, metaDataMap);
    }

    public deviceDiscovery_args() {
    }

    public deviceDiscovery_args(
      int timeoutMillis)
    {
      this();
      this.timeoutMillis = timeoutMillis;
      setTimeoutMillisIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deviceDiscovery_args(deviceDiscovery_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.timeoutMillis = other.timeoutMillis;
    }

    public deviceDiscovery_args deepCopy() {
      return new deviceDiscovery_args(this);
    }

    @Override
    public void clear() {
      setTimeoutMillisIsSet(false);
      this.timeoutMillis = 0;
    }

    public int getTimeoutMillis() {
      return this.timeoutMillis;
    }

    public deviceDiscovery_args setTimeoutMillis(int timeoutMillis) {
      this.timeoutMillis = timeoutMillis;
      setTimeoutMillisIsSet(true);
      return this;
    }

    public void unsetTimeoutMillis() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TIMEOUTMILLIS_ISSET_ID);
    }

    /** Returns true if field timeoutMillis is set (has been assigned a value) and false otherwise */
    public boolean isSetTimeoutMillis() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TIMEOUTMILLIS_ISSET_ID);
    }

    public void setTimeoutMillisIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TIMEOUTMILLIS_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case TIMEOUT_MILLIS:
        if (value == null) {
          unsetTimeoutMillis();
        } else {
          setTimeoutMillis((java.lang.Integer)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case TIMEOUT_MILLIS:
        return getTimeoutMillis();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case TIMEOUT_MILLIS:
        return isSetTimeoutMillis();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof deviceDiscovery_args)
        return this.equals((deviceDiscovery_args)that);
      return false;
    }

    public boolean equals(deviceDiscovery_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_timeoutMillis = true;
      boolean that_present_timeoutMillis = true;
      if (this_present_timeoutMillis || that_present_timeoutMillis) {
        if (!(this_present_timeoutMillis && that_present_timeoutMillis))
          return false;
        if (this.timeoutMillis != that.timeoutMillis)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + timeoutMillis;

      return hashCode;
    }

    @Override
    public int compareTo(deviceDiscovery_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetTimeoutMillis()).compareTo(other.isSetTimeoutMillis());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTimeoutMillis()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeoutMillis, other.timeoutMillis);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("deviceDiscovery_args(");
      boolean first = true;

      sb.append("timeoutMillis:");
      sb.append(this.timeoutMillis);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deviceDiscovery_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public deviceDiscovery_argsStandardScheme getScheme() {
        return new deviceDiscovery_argsStandardScheme();
      }
    }

    private static class deviceDiscovery_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<deviceDiscovery_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deviceDiscovery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // TIMEOUT_MILLIS
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.timeoutMillis = iprot.readI32();
                struct.setTimeoutMillisIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deviceDiscovery_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(TIMEOUT_MILLIS_FIELD_DESC);
        oprot.writeI32(struct.timeoutMillis);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deviceDiscovery_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public deviceDiscovery_argsTupleScheme getScheme() {
        return new deviceDiscovery_argsTupleScheme();
      }
    }

    private static class deviceDiscovery_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<deviceDiscovery_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deviceDiscovery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetTimeoutMillis()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetTimeoutMillis()) {
          oprot.writeI32(struct.timeoutMillis);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deviceDiscovery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.timeoutMillis = iprot.readI32();
          struct.setTimeoutMillisIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class deviceDiscovery_result implements org.apache.thrift.TBase<deviceDiscovery_result, deviceDiscovery_result._Fields>, java.io.Serializable, Cloneable, Comparable<deviceDiscovery_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deviceDiscovery_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.SET, (short)0);
    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new deviceDiscovery_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new deviceDiscovery_resultTupleSchemeFactory();

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage> success; // required
    public com.worldpay.innovation.wpwithin.rpc.types.Error err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      ERR((short)1, "err");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage.class))));
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Error.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deviceDiscovery_result.class, metaDataMap);
    }

    public deviceDiscovery_result() {
    }

    public deviceDiscovery_result(
      java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage> success,
      com.worldpay.innovation.wpwithin.rpc.types.Error err)
    {
      this();
      this.success = success;
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deviceDiscovery_result(deviceDiscovery_result other) {
      if (other.isSetSuccess()) {
        java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage> __this__success = new java.util.HashSet<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage>(other.success.size());
        for (com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage other_element : other.success) {
          __this__success.add(new com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetErr()) {
        this.err = new com.worldpay.innovation.wpwithin.rpc.types.Error(other.err);
      }
    }

    public deviceDiscovery_result deepCopy() {
      return new deviceDiscovery_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.err = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage elem) {
      if (this.success == null) {
        this.success = new java.util.HashSet<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage>();
      }
      this.success.add(elem);
    }

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage> getSuccess() {
      return this.success;
    }

    public deviceDiscovery_result setSuccess(java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Error getErr() {
      return this.err;
    }

    public deviceDiscovery_result setErr(com.worldpay.innovation.wpwithin.rpc.types.Error err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage>)value);
        }
        break;

      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((com.worldpay.innovation.wpwithin.rpc.types.Error)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case ERR:
        return getErr();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case ERR:
        return isSetErr();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof deviceDiscovery_result)
        return this.equals((deviceDiscovery_result)that);
      return false;
    }

    public boolean equals(deviceDiscovery_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetErr()) ? 131071 : 524287);
      if (isSetErr())
        hashCode = hashCode * 8191 + err.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(deviceDiscovery_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("deviceDiscovery_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deviceDiscovery_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public deviceDiscovery_resultStandardScheme getScheme() {
        return new deviceDiscovery_resultStandardScheme();
      }
    }

    private static class deviceDiscovery_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<deviceDiscovery_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deviceDiscovery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
                {
                  org.apache.thrift.protocol.TSet _set20 = iprot.readSetBegin();
                  struct.success = new java.util.HashSet<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage>(2*_set20.size);
                  com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage _elem21;
                  for (int _i22 = 0; _i22 < _set20.size; ++_i22)
                  {
                    _elem21 = new com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage();
                    _elem21.read(iprot);
                    struct.success.add(_elem21);
                  }
                  iprot.readSetEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deviceDiscovery_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage _iter23 : struct.success)
            {
              _iter23.write(oprot);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deviceDiscovery_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public deviceDiscovery_resultTupleScheme getScheme() {
        return new deviceDiscovery_resultTupleScheme();
      }
    }

    private static class deviceDiscovery_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<deviceDiscovery_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deviceDiscovery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetErr()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage _iter24 : struct.success)
            {
              _iter24.write(oprot);
            }
          }
        }
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deviceDiscovery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TSet _set25 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.HashSet<com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage>(2*_set25.size);
            com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage _elem26;
            for (int _i27 = 0; _i27 < _set25.size; ++_i27)
            {
              _elem26 = new com.worldpay.innovation.wpwithin.rpc.types.ServiceMessage();
              _elem26.read(iprot);
              struct.success.add(_elem26);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class requestServices_args implements org.apache.thrift.TBase<requestServices_args, requestServices_args._Fields>, java.io.Serializable, Cloneable, Comparable<requestServices_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("requestServices_args");


    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new requestServices_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new requestServices_argsTupleSchemeFactory();


    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
;

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(requestServices_args.class, metaDataMap);
    }

    public requestServices_args() {
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public requestServices_args(requestServices_args other) {
    }

    public requestServices_args deepCopy() {
      return new requestServices_args(this);
    }

    @Override
    public void clear() {
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof requestServices_args)
        return this.equals((requestServices_args)that);
      return false;
    }

    public boolean equals(requestServices_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      return hashCode;
    }

    @Override
    public int compareTo(requestServices_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("requestServices_args(");
      boolean first = true;

      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class requestServices_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public requestServices_argsStandardScheme getScheme() {
        return new requestServices_argsStandardScheme();
      }
    }

    private static class requestServices_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<requestServices_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, requestServices_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, requestServices_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class requestServices_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public requestServices_argsTupleScheme getScheme() {
        return new requestServices_argsTupleScheme();
      }
    }

    private static class requestServices_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<requestServices_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, requestServices_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, requestServices_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class requestServices_result implements org.apache.thrift.TBase<requestServices_result, requestServices_result._Fields>, java.io.Serializable, Cloneable, Comparable<requestServices_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("requestServices_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.SET, (short)0);
    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new requestServices_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new requestServices_resultTupleSchemeFactory();

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails> success; // required
    public com.worldpay.innovation.wpwithin.rpc.types.Error err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      ERR((short)1, "err");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails.class))));
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Error.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(requestServices_result.class, metaDataMap);
    }

    public requestServices_result() {
    }

    public requestServices_result(
      java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails> success,
      com.worldpay.innovation.wpwithin.rpc.types.Error err)
    {
      this();
      this.success = success;
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public requestServices_result(requestServices_result other) {
      if (other.isSetSuccess()) {
        java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails> __this__success = new java.util.HashSet<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails>(other.success.size());
        for (com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails other_element : other.success) {
          __this__success.add(new com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetErr()) {
        this.err = new com.worldpay.innovation.wpwithin.rpc.types.Error(other.err);
      }
    }

    public requestServices_result deepCopy() {
      return new requestServices_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.err = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails elem) {
      if (this.success == null) {
        this.success = new java.util.HashSet<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails>();
      }
      this.success.add(elem);
    }

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails> getSuccess() {
      return this.success;
    }

    public requestServices_result setSuccess(java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Error getErr() {
      return this.err;
    }

    public requestServices_result setErr(com.worldpay.innovation.wpwithin.rpc.types.Error err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails>)value);
        }
        break;

      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((com.worldpay.innovation.wpwithin.rpc.types.Error)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case ERR:
        return getErr();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case ERR:
        return isSetErr();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof requestServices_result)
        return this.equals((requestServices_result)that);
      return false;
    }

    public boolean equals(requestServices_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetErr()) ? 131071 : 524287);
      if (isSetErr())
        hashCode = hashCode * 8191 + err.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(requestServices_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("requestServices_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class requestServices_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public requestServices_resultStandardScheme getScheme() {
        return new requestServices_resultStandardScheme();
      }
    }

    private static class requestServices_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<requestServices_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, requestServices_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
                {
                  org.apache.thrift.protocol.TSet _set28 = iprot.readSetBegin();
                  struct.success = new java.util.HashSet<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails>(2*_set28.size);
                  com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails _elem29;
                  for (int _i30 = 0; _i30 < _set28.size; ++_i30)
                  {
                    _elem29 = new com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails();
                    _elem29.read(iprot);
                    struct.success.add(_elem29);
                  }
                  iprot.readSetEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, requestServices_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails _iter31 : struct.success)
            {
              _iter31.write(oprot);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class requestServices_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public requestServices_resultTupleScheme getScheme() {
        return new requestServices_resultTupleScheme();
      }
    }

    private static class requestServices_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<requestServices_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, requestServices_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetErr()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails _iter32 : struct.success)
            {
              _iter32.write(oprot);
            }
          }
        }
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, requestServices_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TSet _set33 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.HashSet<com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails>(2*_set33.size);
            com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails _elem34;
            for (int _i35 = 0; _i35 < _set33.size; ++_i35)
            {
              _elem34 = new com.worldpay.innovation.wpwithin.rpc.types.ServiceDetails();
              _elem34.read(iprot);
              struct.success.add(_elem34);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getServicePrices_args implements org.apache.thrift.TBase<getServicePrices_args, getServicePrices_args._Fields>, java.io.Serializable, Cloneable, Comparable<getServicePrices_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getServicePrices_args");

    private static final org.apache.thrift.protocol.TField SERVICE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("serviceId", org.apache.thrift.protocol.TType.I32, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getServicePrices_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getServicePrices_argsTupleSchemeFactory();

    public int serviceId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SERVICE_ID((short)1, "serviceId");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // SERVICE_ID
            return SERVICE_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SERVICEID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SERVICE_ID, new org.apache.thrift.meta_data.FieldMetaData("serviceId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getServicePrices_args.class, metaDataMap);
    }

    public getServicePrices_args() {
    }

    public getServicePrices_args(
      int serviceId)
    {
      this();
      this.serviceId = serviceId;
      setServiceIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getServicePrices_args(getServicePrices_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.serviceId = other.serviceId;
    }

    public getServicePrices_args deepCopy() {
      return new getServicePrices_args(this);
    }

    @Override
    public void clear() {
      setServiceIdIsSet(false);
      this.serviceId = 0;
    }

    public int getServiceId() {
      return this.serviceId;
    }

    public getServicePrices_args setServiceId(int serviceId) {
      this.serviceId = serviceId;
      setServiceIdIsSet(true);
      return this;
    }

    public void unsetServiceId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SERVICEID_ISSET_ID);
    }

    /** Returns true if field serviceId is set (has been assigned a value) and false otherwise */
    public boolean isSetServiceId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SERVICEID_ISSET_ID);
    }

    public void setServiceIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SERVICEID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SERVICE_ID:
        if (value == null) {
          unsetServiceId();
        } else {
          setServiceId((java.lang.Integer)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SERVICE_ID:
        return getServiceId();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SERVICE_ID:
        return isSetServiceId();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getServicePrices_args)
        return this.equals((getServicePrices_args)that);
      return false;
    }

    public boolean equals(getServicePrices_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_serviceId = true;
      boolean that_present_serviceId = true;
      if (this_present_serviceId || that_present_serviceId) {
        if (!(this_present_serviceId && that_present_serviceId))
          return false;
        if (this.serviceId != that.serviceId)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + serviceId;

      return hashCode;
    }

    @Override
    public int compareTo(getServicePrices_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetServiceId()).compareTo(other.isSetServiceId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetServiceId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.serviceId, other.serviceId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getServicePrices_args(");
      boolean first = true;

      sb.append("serviceId:");
      sb.append(this.serviceId);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getServicePrices_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getServicePrices_argsStandardScheme getScheme() {
        return new getServicePrices_argsStandardScheme();
      }
    }

    private static class getServicePrices_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<getServicePrices_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getServicePrices_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // SERVICE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.serviceId = iprot.readI32();
                struct.setServiceIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getServicePrices_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(SERVICE_ID_FIELD_DESC);
        oprot.writeI32(struct.serviceId);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getServicePrices_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getServicePrices_argsTupleScheme getScheme() {
        return new getServicePrices_argsTupleScheme();
      }
    }

    private static class getServicePrices_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<getServicePrices_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getServicePrices_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetServiceId()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetServiceId()) {
          oprot.writeI32(struct.serviceId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getServicePrices_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.serviceId = iprot.readI32();
          struct.setServiceIdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class getServicePrices_result implements org.apache.thrift.TBase<getServicePrices_result, getServicePrices_result._Fields>, java.io.Serializable, Cloneable, Comparable<getServicePrices_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("getServicePrices_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.SET, (short)0);
    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new getServicePrices_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new getServicePrices_resultTupleSchemeFactory();

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price> success; // required
    public com.worldpay.innovation.wpwithin.rpc.types.Error err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      ERR((short)1, "err");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
              new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Price.class))));
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Error.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(getServicePrices_result.class, metaDataMap);
    }

    public getServicePrices_result() {
    }

    public getServicePrices_result(
      java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price> success,
      com.worldpay.innovation.wpwithin.rpc.types.Error err)
    {
      this();
      this.success = success;
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public getServicePrices_result(getServicePrices_result other) {
      if (other.isSetSuccess()) {
        java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price> __this__success = new java.util.HashSet<com.worldpay.innovation.wpwithin.rpc.types.Price>(other.success.size());
        for (com.worldpay.innovation.wpwithin.rpc.types.Price other_element : other.success) {
          __this__success.add(new com.worldpay.innovation.wpwithin.rpc.types.Price(other_element));
        }
        this.success = __this__success;
      }
      if (other.isSetErr()) {
        this.err = new com.worldpay.innovation.wpwithin.rpc.types.Error(other.err);
      }
    }

    public getServicePrices_result deepCopy() {
      return new getServicePrices_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.err = null;
    }

    public int getSuccessSize() {
      return (this.success == null) ? 0 : this.success.size();
    }

    public java.util.Iterator<com.worldpay.innovation.wpwithin.rpc.types.Price> getSuccessIterator() {
      return (this.success == null) ? null : this.success.iterator();
    }

    public void addToSuccess(com.worldpay.innovation.wpwithin.rpc.types.Price elem) {
      if (this.success == null) {
        this.success = new java.util.HashSet<com.worldpay.innovation.wpwithin.rpc.types.Price>();
      }
      this.success.add(elem);
    }

    public java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price> getSuccess() {
      return this.success;
    }

    public getServicePrices_result setSuccess(java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price> success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Error getErr() {
      return this.err;
    }

    public getServicePrices_result setErr(com.worldpay.innovation.wpwithin.rpc.types.Error err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((java.util.Set<com.worldpay.innovation.wpwithin.rpc.types.Price>)value);
        }
        break;

      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((com.worldpay.innovation.wpwithin.rpc.types.Error)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case ERR:
        return getErr();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case ERR:
        return isSetErr();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof getServicePrices_result)
        return this.equals((getServicePrices_result)that);
      return false;
    }

    public boolean equals(getServicePrices_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetErr()) ? 131071 : 524287);
      if (isSetErr())
        hashCode = hashCode * 8191 + err.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(getServicePrices_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("getServicePrices_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class getServicePrices_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getServicePrices_resultStandardScheme getScheme() {
        return new getServicePrices_resultStandardScheme();
      }
    }

    private static class getServicePrices_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<getServicePrices_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, getServicePrices_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
                {
                  org.apache.thrift.protocol.TSet _set36 = iprot.readSetBegin();
                  struct.success = new java.util.HashSet<com.worldpay.innovation.wpwithin.rpc.types.Price>(2*_set36.size);
                  com.worldpay.innovation.wpwithin.rpc.types.Price _elem37;
                  for (int _i38 = 0; _i38 < _set36.size; ++_i38)
                  {
                    _elem37 = new com.worldpay.innovation.wpwithin.rpc.types.Price();
                    _elem37.read(iprot);
                    struct.success.add(_elem37);
                  }
                  iprot.readSetEnd();
                }
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, getServicePrices_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, struct.success.size()));
            for (com.worldpay.innovation.wpwithin.rpc.types.Price _iter39 : struct.success)
            {
              _iter39.write(oprot);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class getServicePrices_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public getServicePrices_resultTupleScheme getScheme() {
        return new getServicePrices_resultTupleScheme();
      }
    }

    private static class getServicePrices_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<getServicePrices_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, getServicePrices_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetErr()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          {
            oprot.writeI32(struct.success.size());
            for (com.worldpay.innovation.wpwithin.rpc.types.Price _iter40 : struct.success)
            {
              _iter40.write(oprot);
            }
          }
        }
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, getServicePrices_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          {
            org.apache.thrift.protocol.TSet _set41 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
            struct.success = new java.util.HashSet<com.worldpay.innovation.wpwithin.rpc.types.Price>(2*_set41.size);
            com.worldpay.innovation.wpwithin.rpc.types.Price _elem42;
            for (int _i43 = 0; _i43 < _set41.size; ++_i43)
            {
              _elem42 = new com.worldpay.innovation.wpwithin.rpc.types.Price();
              _elem42.read(iprot);
              struct.success.add(_elem42);
            }
          }
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class selectService_args implements org.apache.thrift.TBase<selectService_args, selectService_args._Fields>, java.io.Serializable, Cloneable, Comparable<selectService_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("selectService_args");

    private static final org.apache.thrift.protocol.TField SERVICE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("serviceId", org.apache.thrift.protocol.TType.I32, (short)1);
    private static final org.apache.thrift.protocol.TField NUMBER_OF_UNITS_FIELD_DESC = new org.apache.thrift.protocol.TField("numberOfUnits", org.apache.thrift.protocol.TType.I32, (short)2);
    private static final org.apache.thrift.protocol.TField PRICE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("priceId", org.apache.thrift.protocol.TType.I32, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new selectService_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new selectService_argsTupleSchemeFactory();

    public int serviceId; // required
    public int numberOfUnits; // required
    public int priceId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SERVICE_ID((short)1, "serviceId"),
      NUMBER_OF_UNITS((short)2, "numberOfUnits"),
      PRICE_ID((short)3, "priceId");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // SERVICE_ID
            return SERVICE_ID;
          case 2: // NUMBER_OF_UNITS
            return NUMBER_OF_UNITS;
          case 3: // PRICE_ID
            return PRICE_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SERVICEID_ISSET_ID = 0;
    private static final int __NUMBEROFUNITS_ISSET_ID = 1;
    private static final int __PRICEID_ISSET_ID = 2;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SERVICE_ID, new org.apache.thrift.meta_data.FieldMetaData("serviceId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.NUMBER_OF_UNITS, new org.apache.thrift.meta_data.FieldMetaData("numberOfUnits", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.PRICE_ID, new org.apache.thrift.meta_data.FieldMetaData("priceId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(selectService_args.class, metaDataMap);
    }

    public selectService_args() {
    }

    public selectService_args(
      int serviceId,
      int numberOfUnits,
      int priceId)
    {
      this();
      this.serviceId = serviceId;
      setServiceIdIsSet(true);
      this.numberOfUnits = numberOfUnits;
      setNumberOfUnitsIsSet(true);
      this.priceId = priceId;
      setPriceIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public selectService_args(selectService_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.serviceId = other.serviceId;
      this.numberOfUnits = other.numberOfUnits;
      this.priceId = other.priceId;
    }

    public selectService_args deepCopy() {
      return new selectService_args(this);
    }

    @Override
    public void clear() {
      setServiceIdIsSet(false);
      this.serviceId = 0;
      setNumberOfUnitsIsSet(false);
      this.numberOfUnits = 0;
      setPriceIdIsSet(false);
      this.priceId = 0;
    }

    public int getServiceId() {
      return this.serviceId;
    }

    public selectService_args setServiceId(int serviceId) {
      this.serviceId = serviceId;
      setServiceIdIsSet(true);
      return this;
    }

    public void unsetServiceId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SERVICEID_ISSET_ID);
    }

    /** Returns true if field serviceId is set (has been assigned a value) and false otherwise */
    public boolean isSetServiceId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SERVICEID_ISSET_ID);
    }

    public void setServiceIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SERVICEID_ISSET_ID, value);
    }

    public int getNumberOfUnits() {
      return this.numberOfUnits;
    }

    public selectService_args setNumberOfUnits(int numberOfUnits) {
      this.numberOfUnits = numberOfUnits;
      setNumberOfUnitsIsSet(true);
      return this;
    }

    public void unsetNumberOfUnits() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NUMBEROFUNITS_ISSET_ID);
    }

    /** Returns true if field numberOfUnits is set (has been assigned a value) and false otherwise */
    public boolean isSetNumberOfUnits() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NUMBEROFUNITS_ISSET_ID);
    }

    public void setNumberOfUnitsIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NUMBEROFUNITS_ISSET_ID, value);
    }

    public int getPriceId() {
      return this.priceId;
    }

    public selectService_args setPriceId(int priceId) {
      this.priceId = priceId;
      setPriceIdIsSet(true);
      return this;
    }

    public void unsetPriceId() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PRICEID_ISSET_ID);
    }

    /** Returns true if field priceId is set (has been assigned a value) and false otherwise */
    public boolean isSetPriceId() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PRICEID_ISSET_ID);
    }

    public void setPriceIdIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PRICEID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SERVICE_ID:
        if (value == null) {
          unsetServiceId();
        } else {
          setServiceId((java.lang.Integer)value);
        }
        break;

      case NUMBER_OF_UNITS:
        if (value == null) {
          unsetNumberOfUnits();
        } else {
          setNumberOfUnits((java.lang.Integer)value);
        }
        break;

      case PRICE_ID:
        if (value == null) {
          unsetPriceId();
        } else {
          setPriceId((java.lang.Integer)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SERVICE_ID:
        return getServiceId();

      case NUMBER_OF_UNITS:
        return getNumberOfUnits();

      case PRICE_ID:
        return getPriceId();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SERVICE_ID:
        return isSetServiceId();
      case NUMBER_OF_UNITS:
        return isSetNumberOfUnits();
      case PRICE_ID:
        return isSetPriceId();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof selectService_args)
        return this.equals((selectService_args)that);
      return false;
    }

    public boolean equals(selectService_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_serviceId = true;
      boolean that_present_serviceId = true;
      if (this_present_serviceId || that_present_serviceId) {
        if (!(this_present_serviceId && that_present_serviceId))
          return false;
        if (this.serviceId != that.serviceId)
          return false;
      }

      boolean this_present_numberOfUnits = true;
      boolean that_present_numberOfUnits = true;
      if (this_present_numberOfUnits || that_present_numberOfUnits) {
        if (!(this_present_numberOfUnits && that_present_numberOfUnits))
          return false;
        if (this.numberOfUnits != that.numberOfUnits)
          return false;
      }

      boolean this_present_priceId = true;
      boolean that_present_priceId = true;
      if (this_present_priceId || that_present_priceId) {
        if (!(this_present_priceId && that_present_priceId))
          return false;
        if (this.priceId != that.priceId)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + serviceId;

      hashCode = hashCode * 8191 + numberOfUnits;

      hashCode = hashCode * 8191 + priceId;

      return hashCode;
    }

    @Override
    public int compareTo(selectService_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetServiceId()).compareTo(other.isSetServiceId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetServiceId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.serviceId, other.serviceId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetNumberOfUnits()).compareTo(other.isSetNumberOfUnits());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetNumberOfUnits()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numberOfUnits, other.numberOfUnits);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetPriceId()).compareTo(other.isSetPriceId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPriceId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.priceId, other.priceId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("selectService_args(");
      boolean first = true;

      sb.append("serviceId:");
      sb.append(this.serviceId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("numberOfUnits:");
      sb.append(this.numberOfUnits);
      first = false;
      if (!first) sb.append(", ");
      sb.append("priceId:");
      sb.append(this.priceId);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class selectService_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public selectService_argsStandardScheme getScheme() {
        return new selectService_argsStandardScheme();
      }
    }

    private static class selectService_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<selectService_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, selectService_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // SERVICE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.serviceId = iprot.readI32();
                struct.setServiceIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // NUMBER_OF_UNITS
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.numberOfUnits = iprot.readI32();
                struct.setNumberOfUnitsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // PRICE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.priceId = iprot.readI32();
                struct.setPriceIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, selectService_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(SERVICE_ID_FIELD_DESC);
        oprot.writeI32(struct.serviceId);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(NUMBER_OF_UNITS_FIELD_DESC);
        oprot.writeI32(struct.numberOfUnits);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(PRICE_ID_FIELD_DESC);
        oprot.writeI32(struct.priceId);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class selectService_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public selectService_argsTupleScheme getScheme() {
        return new selectService_argsTupleScheme();
      }
    }

    private static class selectService_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<selectService_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, selectService_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetServiceId()) {
          optionals.set(0);
        }
        if (struct.isSetNumberOfUnits()) {
          optionals.set(1);
        }
        if (struct.isSetPriceId()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetServiceId()) {
          oprot.writeI32(struct.serviceId);
        }
        if (struct.isSetNumberOfUnits()) {
          oprot.writeI32(struct.numberOfUnits);
        }
        if (struct.isSetPriceId()) {
          oprot.writeI32(struct.priceId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, selectService_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.serviceId = iprot.readI32();
          struct.setServiceIdIsSet(true);
        }
        if (incoming.get(1)) {
          struct.numberOfUnits = iprot.readI32();
          struct.setNumberOfUnitsIsSet(true);
        }
        if (incoming.get(2)) {
          struct.priceId = iprot.readI32();
          struct.setPriceIdIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class selectService_result implements org.apache.thrift.TBase<selectService_result, selectService_result._Fields>, java.io.Serializable, Cloneable, Comparable<selectService_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("selectService_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new selectService_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new selectService_resultTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse success; // required
    public com.worldpay.innovation.wpwithin.rpc.types.Error err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      ERR((short)1, "err");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse.class)));
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Error.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(selectService_result.class, metaDataMap);
    }

    public selectService_result() {
    }

    public selectService_result(
      com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse success,
      com.worldpay.innovation.wpwithin.rpc.types.Error err)
    {
      this();
      this.success = success;
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public selectService_result(selectService_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse(other.success);
      }
      if (other.isSetErr()) {
        this.err = new com.worldpay.innovation.wpwithin.rpc.types.Error(other.err);
      }
    }

    public selectService_result deepCopy() {
      return new selectService_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.err = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse getSuccess() {
      return this.success;
    }

    public selectService_result setSuccess(com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Error getErr() {
      return this.err;
    }

    public selectService_result setErr(com.worldpay.innovation.wpwithin.rpc.types.Error err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse)value);
        }
        break;

      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((com.worldpay.innovation.wpwithin.rpc.types.Error)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case ERR:
        return getErr();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case ERR:
        return isSetErr();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof selectService_result)
        return this.equals((selectService_result)that);
      return false;
    }

    public boolean equals(selectService_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetErr()) ? 131071 : 524287);
      if (isSetErr())
        hashCode = hashCode * 8191 + err.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(selectService_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("selectService_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class selectService_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public selectService_resultStandardScheme getScheme() {
        return new selectService_resultStandardScheme();
      }
    }

    private static class selectService_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<selectService_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, selectService_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, selectService_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class selectService_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public selectService_resultTupleScheme getScheme() {
        return new selectService_resultTupleScheme();
      }
    }

    private static class selectService_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<selectService_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, selectService_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetErr()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, selectService_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class makePayment_args implements org.apache.thrift.TBase<makePayment_args, makePayment_args._Fields>, java.io.Serializable, Cloneable, Comparable<makePayment_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("makePayment_args");

    private static final org.apache.thrift.protocol.TField REQUEST_FIELD_DESC = new org.apache.thrift.protocol.TField("request", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new makePayment_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new makePayment_argsTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse request; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      REQUEST((short)1, "request");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // REQUEST
            return REQUEST;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.REQUEST, new org.apache.thrift.meta_data.FieldMetaData("request", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(makePayment_args.class, metaDataMap);
    }

    public makePayment_args() {
    }

    public makePayment_args(
      com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse request)
    {
      this();
      this.request = request;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public makePayment_args(makePayment_args other) {
      if (other.isSetRequest()) {
        this.request = new com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse(other.request);
      }
    }

    public makePayment_args deepCopy() {
      return new makePayment_args(this);
    }

    @Override
    public void clear() {
      this.request = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse getRequest() {
      return this.request;
    }

    public makePayment_args setRequest(com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse request) {
      this.request = request;
      return this;
    }

    public void unsetRequest() {
      this.request = null;
    }

    /** Returns true if field request is set (has been assigned a value) and false otherwise */
    public boolean isSetRequest() {
      return this.request != null;
    }

    public void setRequestIsSet(boolean value) {
      if (!value) {
        this.request = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case REQUEST:
        if (value == null) {
          unsetRequest();
        } else {
          setRequest((com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case REQUEST:
        return getRequest();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case REQUEST:
        return isSetRequest();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof makePayment_args)
        return this.equals((makePayment_args)that);
      return false;
    }

    public boolean equals(makePayment_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_request = true && this.isSetRequest();
      boolean that_present_request = true && that.isSetRequest();
      if (this_present_request || that_present_request) {
        if (!(this_present_request && that_present_request))
          return false;
        if (!this.request.equals(that.request))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetRequest()) ? 131071 : 524287);
      if (isSetRequest())
        hashCode = hashCode * 8191 + request.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(makePayment_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetRequest()).compareTo(other.isSetRequest());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetRequest()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.request, other.request);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("makePayment_args(");
      boolean first = true;

      sb.append("request:");
      if (this.request == null) {
        sb.append("null");
      } else {
        sb.append(this.request);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (request != null) {
        request.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class makePayment_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public makePayment_argsStandardScheme getScheme() {
        return new makePayment_argsStandardScheme();
      }
    }

    private static class makePayment_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<makePayment_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, makePayment_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // REQUEST
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.request = new com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse();
                struct.request.read(iprot);
                struct.setRequestIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, makePayment_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.request != null) {
          oprot.writeFieldBegin(REQUEST_FIELD_DESC);
          struct.request.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class makePayment_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public makePayment_argsTupleScheme getScheme() {
        return new makePayment_argsTupleScheme();
      }
    }

    private static class makePayment_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<makePayment_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, makePayment_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetRequest()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetRequest()) {
          struct.request.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, makePayment_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.request = new com.worldpay.innovation.wpwithin.rpc.types.TotalPriceResponse();
          struct.request.read(iprot);
          struct.setRequestIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class makePayment_result implements org.apache.thrift.TBase<makePayment_result, makePayment_result._Fields>, java.io.Serializable, Cloneable, Comparable<makePayment_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("makePayment_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new makePayment_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new makePayment_resultTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse success; // required
    public com.worldpay.innovation.wpwithin.rpc.types.Error err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      ERR((short)1, "err");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse.class)));
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Error.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(makePayment_result.class, metaDataMap);
    }

    public makePayment_result() {
    }

    public makePayment_result(
      com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse success,
      com.worldpay.innovation.wpwithin.rpc.types.Error err)
    {
      this();
      this.success = success;
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public makePayment_result(makePayment_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse(other.success);
      }
      if (other.isSetErr()) {
        this.err = new com.worldpay.innovation.wpwithin.rpc.types.Error(other.err);
      }
    }

    public makePayment_result deepCopy() {
      return new makePayment_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.err = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse getSuccess() {
      return this.success;
    }

    public makePayment_result setSuccess(com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Error getErr() {
      return this.err;
    }

    public makePayment_result setErr(com.worldpay.innovation.wpwithin.rpc.types.Error err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse)value);
        }
        break;

      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((com.worldpay.innovation.wpwithin.rpc.types.Error)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case ERR:
        return getErr();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case ERR:
        return isSetErr();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof makePayment_result)
        return this.equals((makePayment_result)that);
      return false;
    }

    public boolean equals(makePayment_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetErr()) ? 131071 : 524287);
      if (isSetErr())
        hashCode = hashCode * 8191 + err.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(makePayment_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("makePayment_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class makePayment_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public makePayment_resultStandardScheme getScheme() {
        return new makePayment_resultStandardScheme();
      }
    }

    private static class makePayment_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<makePayment_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, makePayment_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, makePayment_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class makePayment_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public makePayment_resultTupleScheme getScheme() {
        return new makePayment_resultTupleScheme();
      }
    }

    private static class makePayment_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<makePayment_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, makePayment_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetErr()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, makePayment_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new com.worldpay.innovation.wpwithin.rpc.types.PaymentResponse();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class beginServiceDelivery_args implements org.apache.thrift.TBase<beginServiceDelivery_args, beginServiceDelivery_args._Fields>, java.io.Serializable, Cloneable, Comparable<beginServiceDelivery_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("beginServiceDelivery_args");

    private static final org.apache.thrift.protocol.TField SERVICE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("serviceID", org.apache.thrift.protocol.TType.I32, (short)1);
    private static final org.apache.thrift.protocol.TField SERVICE_DELIVERY_TOKEN_FIELD_DESC = new org.apache.thrift.protocol.TField("serviceDeliveryToken", org.apache.thrift.protocol.TType.STRUCT, (short)2);
    private static final org.apache.thrift.protocol.TField UNITS_TO_SUPPLY_FIELD_DESC = new org.apache.thrift.protocol.TField("unitsToSupply", org.apache.thrift.protocol.TType.I32, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new beginServiceDelivery_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new beginServiceDelivery_argsTupleSchemeFactory();

    public int serviceID; // required
    public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken; // required
    public int unitsToSupply; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SERVICE_ID((short)1, "serviceID"),
      SERVICE_DELIVERY_TOKEN((short)2, "serviceDeliveryToken"),
      UNITS_TO_SUPPLY((short)3, "unitsToSupply");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // SERVICE_ID
            return SERVICE_ID;
          case 2: // SERVICE_DELIVERY_TOKEN
            return SERVICE_DELIVERY_TOKEN;
          case 3: // UNITS_TO_SUPPLY
            return UNITS_TO_SUPPLY;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SERVICEID_ISSET_ID = 0;
    private static final int __UNITSTOSUPPLY_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SERVICE_ID, new org.apache.thrift.meta_data.FieldMetaData("serviceID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.SERVICE_DELIVERY_TOKEN, new org.apache.thrift.meta_data.FieldMetaData("serviceDeliveryToken", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken.class)));
      tmpMap.put(_Fields.UNITS_TO_SUPPLY, new org.apache.thrift.meta_data.FieldMetaData("unitsToSupply", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(beginServiceDelivery_args.class, metaDataMap);
    }

    public beginServiceDelivery_args() {
    }

    public beginServiceDelivery_args(
      int serviceID,
      com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken,
      int unitsToSupply)
    {
      this();
      this.serviceID = serviceID;
      setServiceIDIsSet(true);
      this.serviceDeliveryToken = serviceDeliveryToken;
      this.unitsToSupply = unitsToSupply;
      setUnitsToSupplyIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public beginServiceDelivery_args(beginServiceDelivery_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.serviceID = other.serviceID;
      if (other.isSetServiceDeliveryToken()) {
        this.serviceDeliveryToken = new com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken(other.serviceDeliveryToken);
      }
      this.unitsToSupply = other.unitsToSupply;
    }

    public beginServiceDelivery_args deepCopy() {
      return new beginServiceDelivery_args(this);
    }

    @Override
    public void clear() {
      setServiceIDIsSet(false);
      this.serviceID = 0;
      this.serviceDeliveryToken = null;
      setUnitsToSupplyIsSet(false);
      this.unitsToSupply = 0;
    }

    public int getServiceID() {
      return this.serviceID;
    }

    public beginServiceDelivery_args setServiceID(int serviceID) {
      this.serviceID = serviceID;
      setServiceIDIsSet(true);
      return this;
    }

    public void unsetServiceID() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SERVICEID_ISSET_ID);
    }

    /** Returns true if field serviceID is set (has been assigned a value) and false otherwise */
    public boolean isSetServiceID() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SERVICEID_ISSET_ID);
    }

    public void setServiceIDIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SERVICEID_ISSET_ID, value);
    }

    public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken getServiceDeliveryToken() {
      return this.serviceDeliveryToken;
    }

    public beginServiceDelivery_args setServiceDeliveryToken(com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken) {
      this.serviceDeliveryToken = serviceDeliveryToken;
      return this;
    }

    public void unsetServiceDeliveryToken() {
      this.serviceDeliveryToken = null;
    }

    /** Returns true if field serviceDeliveryToken is set (has been assigned a value) and false otherwise */
    public boolean isSetServiceDeliveryToken() {
      return this.serviceDeliveryToken != null;
    }

    public void setServiceDeliveryTokenIsSet(boolean value) {
      if (!value) {
        this.serviceDeliveryToken = null;
      }
    }

    public int getUnitsToSupply() {
      return this.unitsToSupply;
    }

    public beginServiceDelivery_args setUnitsToSupply(int unitsToSupply) {
      this.unitsToSupply = unitsToSupply;
      setUnitsToSupplyIsSet(true);
      return this;
    }

    public void unsetUnitsToSupply() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __UNITSTOSUPPLY_ISSET_ID);
    }

    /** Returns true if field unitsToSupply is set (has been assigned a value) and false otherwise */
    public boolean isSetUnitsToSupply() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __UNITSTOSUPPLY_ISSET_ID);
    }

    public void setUnitsToSupplyIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __UNITSTOSUPPLY_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SERVICE_ID:
        if (value == null) {
          unsetServiceID();
        } else {
          setServiceID((java.lang.Integer)value);
        }
        break;

      case SERVICE_DELIVERY_TOKEN:
        if (value == null) {
          unsetServiceDeliveryToken();
        } else {
          setServiceDeliveryToken((com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken)value);
        }
        break;

      case UNITS_TO_SUPPLY:
        if (value == null) {
          unsetUnitsToSupply();
        } else {
          setUnitsToSupply((java.lang.Integer)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SERVICE_ID:
        return getServiceID();

      case SERVICE_DELIVERY_TOKEN:
        return getServiceDeliveryToken();

      case UNITS_TO_SUPPLY:
        return getUnitsToSupply();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SERVICE_ID:
        return isSetServiceID();
      case SERVICE_DELIVERY_TOKEN:
        return isSetServiceDeliveryToken();
      case UNITS_TO_SUPPLY:
        return isSetUnitsToSupply();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof beginServiceDelivery_args)
        return this.equals((beginServiceDelivery_args)that);
      return false;
    }

    public boolean equals(beginServiceDelivery_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_serviceID = true;
      boolean that_present_serviceID = true;
      if (this_present_serviceID || that_present_serviceID) {
        if (!(this_present_serviceID && that_present_serviceID))
          return false;
        if (this.serviceID != that.serviceID)
          return false;
      }

      boolean this_present_serviceDeliveryToken = true && this.isSetServiceDeliveryToken();
      boolean that_present_serviceDeliveryToken = true && that.isSetServiceDeliveryToken();
      if (this_present_serviceDeliveryToken || that_present_serviceDeliveryToken) {
        if (!(this_present_serviceDeliveryToken && that_present_serviceDeliveryToken))
          return false;
        if (!this.serviceDeliveryToken.equals(that.serviceDeliveryToken))
          return false;
      }

      boolean this_present_unitsToSupply = true;
      boolean that_present_unitsToSupply = true;
      if (this_present_unitsToSupply || that_present_unitsToSupply) {
        if (!(this_present_unitsToSupply && that_present_unitsToSupply))
          return false;
        if (this.unitsToSupply != that.unitsToSupply)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + serviceID;

      hashCode = hashCode * 8191 + ((isSetServiceDeliveryToken()) ? 131071 : 524287);
      if (isSetServiceDeliveryToken())
        hashCode = hashCode * 8191 + serviceDeliveryToken.hashCode();

      hashCode = hashCode * 8191 + unitsToSupply;

      return hashCode;
    }

    @Override
    public int compareTo(beginServiceDelivery_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetServiceID()).compareTo(other.isSetServiceID());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetServiceID()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.serviceID, other.serviceID);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetServiceDeliveryToken()).compareTo(other.isSetServiceDeliveryToken());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetServiceDeliveryToken()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.serviceDeliveryToken, other.serviceDeliveryToken);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetUnitsToSupply()).compareTo(other.isSetUnitsToSupply());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetUnitsToSupply()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.unitsToSupply, other.unitsToSupply);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("beginServiceDelivery_args(");
      boolean first = true;

      sb.append("serviceID:");
      sb.append(this.serviceID);
      first = false;
      if (!first) sb.append(", ");
      sb.append("serviceDeliveryToken:");
      if (this.serviceDeliveryToken == null) {
        sb.append("null");
      } else {
        sb.append(this.serviceDeliveryToken);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("unitsToSupply:");
      sb.append(this.unitsToSupply);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (serviceDeliveryToken != null) {
        serviceDeliveryToken.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class beginServiceDelivery_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public beginServiceDelivery_argsStandardScheme getScheme() {
        return new beginServiceDelivery_argsStandardScheme();
      }
    }

    private static class beginServiceDelivery_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<beginServiceDelivery_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, beginServiceDelivery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // SERVICE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.serviceID = iprot.readI32();
                struct.setServiceIDIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // SERVICE_DELIVERY_TOKEN
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.serviceDeliveryToken = new com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken();
                struct.serviceDeliveryToken.read(iprot);
                struct.setServiceDeliveryTokenIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // UNITS_TO_SUPPLY
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.unitsToSupply = iprot.readI32();
                struct.setUnitsToSupplyIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, beginServiceDelivery_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(SERVICE_ID_FIELD_DESC);
        oprot.writeI32(struct.serviceID);
        oprot.writeFieldEnd();
        if (struct.serviceDeliveryToken != null) {
          oprot.writeFieldBegin(SERVICE_DELIVERY_TOKEN_FIELD_DESC);
          struct.serviceDeliveryToken.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(UNITS_TO_SUPPLY_FIELD_DESC);
        oprot.writeI32(struct.unitsToSupply);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class beginServiceDelivery_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public beginServiceDelivery_argsTupleScheme getScheme() {
        return new beginServiceDelivery_argsTupleScheme();
      }
    }

    private static class beginServiceDelivery_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<beginServiceDelivery_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, beginServiceDelivery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetServiceID()) {
          optionals.set(0);
        }
        if (struct.isSetServiceDeliveryToken()) {
          optionals.set(1);
        }
        if (struct.isSetUnitsToSupply()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetServiceID()) {
          oprot.writeI32(struct.serviceID);
        }
        if (struct.isSetServiceDeliveryToken()) {
          struct.serviceDeliveryToken.write(oprot);
        }
        if (struct.isSetUnitsToSupply()) {
          oprot.writeI32(struct.unitsToSupply);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, beginServiceDelivery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.serviceID = iprot.readI32();
          struct.setServiceIDIsSet(true);
        }
        if (incoming.get(1)) {
          struct.serviceDeliveryToken = new com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken();
          struct.serviceDeliveryToken.read(iprot);
          struct.setServiceDeliveryTokenIsSet(true);
        }
        if (incoming.get(2)) {
          struct.unitsToSupply = iprot.readI32();
          struct.setUnitsToSupplyIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class beginServiceDelivery_result implements org.apache.thrift.TBase<beginServiceDelivery_result, beginServiceDelivery_result._Fields>, java.io.Serializable, Cloneable, Comparable<beginServiceDelivery_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("beginServiceDelivery_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new beginServiceDelivery_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new beginServiceDelivery_resultTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken success; // required
    public com.worldpay.innovation.wpwithin.rpc.types.Error err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      ERR((short)1, "err");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken.class)));
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Error.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(beginServiceDelivery_result.class, metaDataMap);
    }

    public beginServiceDelivery_result() {
    }

    public beginServiceDelivery_result(
      com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken success,
      com.worldpay.innovation.wpwithin.rpc.types.Error err)
    {
      this();
      this.success = success;
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public beginServiceDelivery_result(beginServiceDelivery_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken(other.success);
      }
      if (other.isSetErr()) {
        this.err = new com.worldpay.innovation.wpwithin.rpc.types.Error(other.err);
      }
    }

    public beginServiceDelivery_result deepCopy() {
      return new beginServiceDelivery_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.err = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken getSuccess() {
      return this.success;
    }

    public beginServiceDelivery_result setSuccess(com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Error getErr() {
      return this.err;
    }

    public beginServiceDelivery_result setErr(com.worldpay.innovation.wpwithin.rpc.types.Error err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken)value);
        }
        break;

      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((com.worldpay.innovation.wpwithin.rpc.types.Error)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case ERR:
        return getErr();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case ERR:
        return isSetErr();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof beginServiceDelivery_result)
        return this.equals((beginServiceDelivery_result)that);
      return false;
    }

    public boolean equals(beginServiceDelivery_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetErr()) ? 131071 : 524287);
      if (isSetErr())
        hashCode = hashCode * 8191 + err.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(beginServiceDelivery_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("beginServiceDelivery_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class beginServiceDelivery_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public beginServiceDelivery_resultStandardScheme getScheme() {
        return new beginServiceDelivery_resultStandardScheme();
      }
    }

    private static class beginServiceDelivery_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<beginServiceDelivery_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, beginServiceDelivery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, beginServiceDelivery_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class beginServiceDelivery_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public beginServiceDelivery_resultTupleScheme getScheme() {
        return new beginServiceDelivery_resultTupleScheme();
      }
    }

    private static class beginServiceDelivery_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<beginServiceDelivery_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, beginServiceDelivery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetErr()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, beginServiceDelivery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class endServiceDelivery_args implements org.apache.thrift.TBase<endServiceDelivery_args, endServiceDelivery_args._Fields>, java.io.Serializable, Cloneable, Comparable<endServiceDelivery_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("endServiceDelivery_args");

    private static final org.apache.thrift.protocol.TField SERVICE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("serviceID", org.apache.thrift.protocol.TType.I32, (short)1);
    private static final org.apache.thrift.protocol.TField SERVICE_DELIVERY_TOKEN_FIELD_DESC = new org.apache.thrift.protocol.TField("serviceDeliveryToken", org.apache.thrift.protocol.TType.STRUCT, (short)2);
    private static final org.apache.thrift.protocol.TField UNITS_RECEIVED_FIELD_DESC = new org.apache.thrift.protocol.TField("unitsReceived", org.apache.thrift.protocol.TType.I32, (short)3);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new endServiceDelivery_argsStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new endServiceDelivery_argsTupleSchemeFactory();

    public int serviceID; // required
    public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken; // required
    public int unitsReceived; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SERVICE_ID((short)1, "serviceID"),
      SERVICE_DELIVERY_TOKEN((short)2, "serviceDeliveryToken"),
      UNITS_RECEIVED((short)3, "unitsReceived");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // SERVICE_ID
            return SERVICE_ID;
          case 2: // SERVICE_DELIVERY_TOKEN
            return SERVICE_DELIVERY_TOKEN;
          case 3: // UNITS_RECEIVED
            return UNITS_RECEIVED;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SERVICEID_ISSET_ID = 0;
    private static final int __UNITSRECEIVED_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SERVICE_ID, new org.apache.thrift.meta_data.FieldMetaData("serviceID", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      tmpMap.put(_Fields.SERVICE_DELIVERY_TOKEN, new org.apache.thrift.meta_data.FieldMetaData("serviceDeliveryToken", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken.class)));
      tmpMap.put(_Fields.UNITS_RECEIVED, new org.apache.thrift.meta_data.FieldMetaData("unitsReceived", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(endServiceDelivery_args.class, metaDataMap);
    }

    public endServiceDelivery_args() {
    }

    public endServiceDelivery_args(
      int serviceID,
      com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken,
      int unitsReceived)
    {
      this();
      this.serviceID = serviceID;
      setServiceIDIsSet(true);
      this.serviceDeliveryToken = serviceDeliveryToken;
      this.unitsReceived = unitsReceived;
      setUnitsReceivedIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public endServiceDelivery_args(endServiceDelivery_args other) {
      __isset_bitfield = other.__isset_bitfield;
      this.serviceID = other.serviceID;
      if (other.isSetServiceDeliveryToken()) {
        this.serviceDeliveryToken = new com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken(other.serviceDeliveryToken);
      }
      this.unitsReceived = other.unitsReceived;
    }

    public endServiceDelivery_args deepCopy() {
      return new endServiceDelivery_args(this);
    }

    @Override
    public void clear() {
      setServiceIDIsSet(false);
      this.serviceID = 0;
      this.serviceDeliveryToken = null;
      setUnitsReceivedIsSet(false);
      this.unitsReceived = 0;
    }

    public int getServiceID() {
      return this.serviceID;
    }

    public endServiceDelivery_args setServiceID(int serviceID) {
      this.serviceID = serviceID;
      setServiceIDIsSet(true);
      return this;
    }

    public void unsetServiceID() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SERVICEID_ISSET_ID);
    }

    /** Returns true if field serviceID is set (has been assigned a value) and false otherwise */
    public boolean isSetServiceID() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SERVICEID_ISSET_ID);
    }

    public void setServiceIDIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SERVICEID_ISSET_ID, value);
    }

    public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken getServiceDeliveryToken() {
      return this.serviceDeliveryToken;
    }

    public endServiceDelivery_args setServiceDeliveryToken(com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken serviceDeliveryToken) {
      this.serviceDeliveryToken = serviceDeliveryToken;
      return this;
    }

    public void unsetServiceDeliveryToken() {
      this.serviceDeliveryToken = null;
    }

    /** Returns true if field serviceDeliveryToken is set (has been assigned a value) and false otherwise */
    public boolean isSetServiceDeliveryToken() {
      return this.serviceDeliveryToken != null;
    }

    public void setServiceDeliveryTokenIsSet(boolean value) {
      if (!value) {
        this.serviceDeliveryToken = null;
      }
    }

    public int getUnitsReceived() {
      return this.unitsReceived;
    }

    public endServiceDelivery_args setUnitsReceived(int unitsReceived) {
      this.unitsReceived = unitsReceived;
      setUnitsReceivedIsSet(true);
      return this;
    }

    public void unsetUnitsReceived() {
      __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __UNITSRECEIVED_ISSET_ID);
    }

    /** Returns true if field unitsReceived is set (has been assigned a value) and false otherwise */
    public boolean isSetUnitsReceived() {
      return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __UNITSRECEIVED_ISSET_ID);
    }

    public void setUnitsReceivedIsSet(boolean value) {
      __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __UNITSRECEIVED_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SERVICE_ID:
        if (value == null) {
          unsetServiceID();
        } else {
          setServiceID((java.lang.Integer)value);
        }
        break;

      case SERVICE_DELIVERY_TOKEN:
        if (value == null) {
          unsetServiceDeliveryToken();
        } else {
          setServiceDeliveryToken((com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken)value);
        }
        break;

      case UNITS_RECEIVED:
        if (value == null) {
          unsetUnitsReceived();
        } else {
          setUnitsReceived((java.lang.Integer)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SERVICE_ID:
        return getServiceID();

      case SERVICE_DELIVERY_TOKEN:
        return getServiceDeliveryToken();

      case UNITS_RECEIVED:
        return getUnitsReceived();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SERVICE_ID:
        return isSetServiceID();
      case SERVICE_DELIVERY_TOKEN:
        return isSetServiceDeliveryToken();
      case UNITS_RECEIVED:
        return isSetUnitsReceived();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof endServiceDelivery_args)
        return this.equals((endServiceDelivery_args)that);
      return false;
    }

    public boolean equals(endServiceDelivery_args that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_serviceID = true;
      boolean that_present_serviceID = true;
      if (this_present_serviceID || that_present_serviceID) {
        if (!(this_present_serviceID && that_present_serviceID))
          return false;
        if (this.serviceID != that.serviceID)
          return false;
      }

      boolean this_present_serviceDeliveryToken = true && this.isSetServiceDeliveryToken();
      boolean that_present_serviceDeliveryToken = true && that.isSetServiceDeliveryToken();
      if (this_present_serviceDeliveryToken || that_present_serviceDeliveryToken) {
        if (!(this_present_serviceDeliveryToken && that_present_serviceDeliveryToken))
          return false;
        if (!this.serviceDeliveryToken.equals(that.serviceDeliveryToken))
          return false;
      }

      boolean this_present_unitsReceived = true;
      boolean that_present_unitsReceived = true;
      if (this_present_unitsReceived || that_present_unitsReceived) {
        if (!(this_present_unitsReceived && that_present_unitsReceived))
          return false;
        if (this.unitsReceived != that.unitsReceived)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + serviceID;

      hashCode = hashCode * 8191 + ((isSetServiceDeliveryToken()) ? 131071 : 524287);
      if (isSetServiceDeliveryToken())
        hashCode = hashCode * 8191 + serviceDeliveryToken.hashCode();

      hashCode = hashCode * 8191 + unitsReceived;

      return hashCode;
    }

    @Override
    public int compareTo(endServiceDelivery_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetServiceID()).compareTo(other.isSetServiceID());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetServiceID()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.serviceID, other.serviceID);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetServiceDeliveryToken()).compareTo(other.isSetServiceDeliveryToken());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetServiceDeliveryToken()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.serviceDeliveryToken, other.serviceDeliveryToken);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetUnitsReceived()).compareTo(other.isSetUnitsReceived());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetUnitsReceived()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.unitsReceived, other.unitsReceived);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("endServiceDelivery_args(");
      boolean first = true;

      sb.append("serviceID:");
      sb.append(this.serviceID);
      first = false;
      if (!first) sb.append(", ");
      sb.append("serviceDeliveryToken:");
      if (this.serviceDeliveryToken == null) {
        sb.append("null");
      } else {
        sb.append(this.serviceDeliveryToken);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("unitsReceived:");
      sb.append(this.unitsReceived);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (serviceDeliveryToken != null) {
        serviceDeliveryToken.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class endServiceDelivery_argsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public endServiceDelivery_argsStandardScheme getScheme() {
        return new endServiceDelivery_argsStandardScheme();
      }
    }

    private static class endServiceDelivery_argsStandardScheme extends org.apache.thrift.scheme.StandardScheme<endServiceDelivery_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, endServiceDelivery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // SERVICE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.serviceID = iprot.readI32();
                struct.setServiceIDIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // SERVICE_DELIVERY_TOKEN
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.serviceDeliveryToken = new com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken();
                struct.serviceDeliveryToken.read(iprot);
                struct.setServiceDeliveryTokenIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // UNITS_RECEIVED
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.unitsReceived = iprot.readI32();
                struct.setUnitsReceivedIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, endServiceDelivery_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(SERVICE_ID_FIELD_DESC);
        oprot.writeI32(struct.serviceID);
        oprot.writeFieldEnd();
        if (struct.serviceDeliveryToken != null) {
          oprot.writeFieldBegin(SERVICE_DELIVERY_TOKEN_FIELD_DESC);
          struct.serviceDeliveryToken.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(UNITS_RECEIVED_FIELD_DESC);
        oprot.writeI32(struct.unitsReceived);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class endServiceDelivery_argsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public endServiceDelivery_argsTupleScheme getScheme() {
        return new endServiceDelivery_argsTupleScheme();
      }
    }

    private static class endServiceDelivery_argsTupleScheme extends org.apache.thrift.scheme.TupleScheme<endServiceDelivery_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, endServiceDelivery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetServiceID()) {
          optionals.set(0);
        }
        if (struct.isSetServiceDeliveryToken()) {
          optionals.set(1);
        }
        if (struct.isSetUnitsReceived()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetServiceID()) {
          oprot.writeI32(struct.serviceID);
        }
        if (struct.isSetServiceDeliveryToken()) {
          struct.serviceDeliveryToken.write(oprot);
        }
        if (struct.isSetUnitsReceived()) {
          oprot.writeI32(struct.unitsReceived);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, endServiceDelivery_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.serviceID = iprot.readI32();
          struct.setServiceIDIsSet(true);
        }
        if (incoming.get(1)) {
          struct.serviceDeliveryToken = new com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken();
          struct.serviceDeliveryToken.read(iprot);
          struct.setServiceDeliveryTokenIsSet(true);
        }
        if (incoming.get(2)) {
          struct.unitsReceived = iprot.readI32();
          struct.setUnitsReceivedIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

  public static class endServiceDelivery_result implements org.apache.thrift.TBase<endServiceDelivery_result, endServiceDelivery_result._Fields>, java.io.Serializable, Cloneable, Comparable<endServiceDelivery_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("endServiceDelivery_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new endServiceDelivery_resultStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new endServiceDelivery_resultTupleSchemeFactory();

    public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken success; // required
    public com.worldpay.innovation.wpwithin.rpc.types.Error err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      ERR((short)1, "err");

      private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

      static {
        for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(java.lang.String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final java.lang.String _fieldName;

      _Fields(short thriftId, java.lang.String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public java.lang.String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken.class)));
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.worldpay.innovation.wpwithin.rpc.types.Error.class)));
      metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(endServiceDelivery_result.class, metaDataMap);
    }

    public endServiceDelivery_result() {
    }

    public endServiceDelivery_result(
      com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken success,
      com.worldpay.innovation.wpwithin.rpc.types.Error err)
    {
      this();
      this.success = success;
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public endServiceDelivery_result(endServiceDelivery_result other) {
      if (other.isSetSuccess()) {
        this.success = new com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken(other.success);
      }
      if (other.isSetErr()) {
        this.err = new com.worldpay.innovation.wpwithin.rpc.types.Error(other.err);
      }
    }

    public endServiceDelivery_result deepCopy() {
      return new endServiceDelivery_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.err = null;
    }

    public com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken getSuccess() {
      return this.success;
    }

    public endServiceDelivery_result setSuccess(com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public com.worldpay.innovation.wpwithin.rpc.types.Error getErr() {
      return this.err;
    }

    public endServiceDelivery_result setErr(com.worldpay.innovation.wpwithin.rpc.types.Error err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken)value);
        }
        break;

      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((com.worldpay.innovation.wpwithin.rpc.types.Error)value);
        }
        break;

      }
    }

    public java.lang.Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case ERR:
        return getErr();

      }
      throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new java.lang.IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case ERR:
        return isSetErr();
      }
      throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
      if (that == null)
        return false;
      if (that instanceof endServiceDelivery_result)
        return this.equals((endServiceDelivery_result)that);
      return false;
    }

    public boolean equals(endServiceDelivery_result that) {
      if (that == null)
        return false;
      if (this == that)
        return true;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      int hashCode = 1;

      hashCode = hashCode * 8191 + ((isSetSuccess()) ? 131071 : 524287);
      if (isSetSuccess())
        hashCode = hashCode * 8191 + success.hashCode();

      hashCode = hashCode * 8191 + ((isSetErr()) ? 131071 : 524287);
      if (isSetErr())
        hashCode = hashCode * 8191 + err.hashCode();

      return hashCode;
    }

    @Override
    public int compareTo(endServiceDelivery_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = java.lang.Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = java.lang.Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      scheme(oprot).write(oprot, this);
      }

    @Override
    public java.lang.String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder("endServiceDelivery_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class endServiceDelivery_resultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public endServiceDelivery_resultStandardScheme getScheme() {
        return new endServiceDelivery_resultStandardScheme();
      }
    }

    private static class endServiceDelivery_resultStandardScheme extends org.apache.thrift.scheme.StandardScheme<endServiceDelivery_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, endServiceDelivery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, endServiceDelivery_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class endServiceDelivery_resultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
      public endServiceDelivery_resultTupleScheme getScheme() {
        return new endServiceDelivery_resultTupleScheme();
      }
    }

    private static class endServiceDelivery_resultTupleScheme extends org.apache.thrift.scheme.TupleScheme<endServiceDelivery_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, endServiceDelivery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet optionals = new java.util.BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetErr()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, endServiceDelivery_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
        java.util.BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new com.worldpay.innovation.wpwithin.rpc.types.ServiceDeliveryToken();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.err = new com.worldpay.innovation.wpwithin.rpc.types.Error();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
      return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }
  }

}
