time="2017-08-19T08:26:12+01:00" level=debug msg="End log setup" 
time="2017-08-19T08:26:12+01:00" level=debug msg="After initLogFile()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Before startRPC()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Before startRPC()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Before assign RPC config." 
time="2017-08-19T08:26:12+01:00" level=debug msg="After assign RPC config." 
time="2017-08-19T08:26:12+01:00" level=debug msg="Before rpc.NewService" Configuration: ="{Protocol:binary Framed:false Buffered:false Host:127.0.0.1 Port:10000 Secure:false BufferSize:8192 Loglevel: Logfile: CallbackPort:0}" 
time="2017-08-19T08:26:12+01:00" level=debug msg="begin rpc.ServiceImpl.NewService()" Config="{Protocol:binary Framed:false Buffered:false Host:127.0.0.1 Port:10000 Secure:false BufferSize:8192 Loglevel: Logfile: CallbackPort:0}" 
time="2017-08-19T08:26:12+01:00" level=debug msg="end rpc.ServiceImpl.NewService()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="After rpc.NewService" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Attempting to start RPC interface on port" port=10000 
time="2017-08-19T08:26:12+01:00" level=debug msg="begin rpc.ServiceImpl.start()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Begin RPC.WPWithinHandler.NewWPWithinHander()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="End RPC.WPWithinHandler.NewWPWithinHander()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Starting the rpc server on...: 127.0.0.1:10000" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Begin RPC.WPWithinHandler.Setup()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="begin wpwithin.Initialise()" description="Example WorldpayWithin producer" name="Producer Example" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Will perform parameter validation" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Parameter validation passed" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Will create new core.SDKFactory" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Did create new core.SDKFactory" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Will create new core.Core" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Did create new core.Core" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Will call doWebSocketLogSetup()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Begin wpwithin.doWebSocketLogSetup()" Configuration={true 8081 debug,warn,info,error,fatal} 
time="2017-08-19T08:26:12+01:00" level=debug msg="Config.WSLogEnable is true -- proceed to setup WS Logger" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Clean up Config.WSLogLevel -- remove spaces" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Split up Config.WSLogLevel to array -- comma delimiter" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Setting up logger to support the specified log levels." log levels=[debug warn info error fatal] 
time="2017-08-19T08:26:12+01:00" level=debug msg="Attempt to get external IPv4 address" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Did get external IPv4" IPv4=192.168.1.22 
time="2017-08-19T08:26:12+01:00" level=debug msg="will call wslog.Initialise()" ip_add=192.168.1.22 log levels=[debug warning info error fatal] ws_port=8081 
time="2017-08-19T08:26:12+01:00" level=info msg="Did set up WebSocket logger @ http://192.168.1.22:8081" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Did call wslog.Initialise()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="End doWebSocketLogSetup()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="After call doWebSocketLogSetup()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Will call Factory.GetDevice()" description="Example WorldpayWithin producer" name="Producer Example" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Will call Factory.GetOrderManager()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="After call Factory.GetOrderManager()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Will call Factory.GetSvcBroadcaster()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="After call Factory.GetSvcBroadcaster()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Will call Factory.GetSvcScanner()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="After call Factory.GetSvcScanner()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="end wpwithin.Initialise()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="wp.callback not set, not setting handler in WPWithin." 
time="2017-08-19T08:26:12+01:00" level=debug msg="End RPC.WPWithinHandler.Setup()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Begin RPC.WPWithinHandler.AddService()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="End RPC.WPWithinHandler.AddService()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Begin wpwithin.AddService()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Is wp.core.Device.Services map nil? true" 
time="2017-08-19T08:26:12+01:00" level=debug msg="wp.core.Device.Services is nil, will make now: map[int]*types.Service" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Did make wp.core.Device.Services: map[int]*types.Service" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Does wp.core.Device.Services contain service with id 1? false" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Adding service to wp.core.Device.Services as it doesn't appear to exist." 
time="2017-08-19T08:26:12+01:00" level=debug msg="End wpwithin.AddService()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="RPC.WPWithinHandler.InitProducer()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Begin wpwithin.InitProducer()" pspConfig=map[api_endpoint:https://gwapi.demo.securenet.com/api hte_public_key:8c0ce953-455d-4c12-8d14-ff20d565e485 hte_private_key:KZ9kWv2EPy7M app_version:0.1 secure_key:KZ9kWv2EPy7M secure_net_id:8008609 developer_id:12345678 psp_name:securenet public_key:8c0ce953-455d-4c12-8d14-ff20d565e485] 
time="2017-08-19T08:26:12+01:00" level=debug msg="Is pspConfig parameter nil? false" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Will call Factory.GetPSPMerchant()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="begin client.New()" apiEndpoint="https://gwapi.demo.securenet.com/api" appVersion=0.1 secureKey=KZ9kWv2EPy7M secureNetID=8008609 
time="2017-08-19T08:26:12+01:00" level=debug msg="begin connectionImpl.NewConnection" APIBaseURL="https://gwapi.demo.securenet.com/api" AppVersion=0.1 Proxy= SecureKey="**obfuscated**" SecureNetID=8008609 UserAgentString="os.name=darwin;os.version=?;os.arch=amd64;lang.version=go1.7.1;lib.version=1.0;api.version=1.0;lang=go;owner=worldpay-tech-innovation" sslCheck=true timeout=60 
time="2017-08-19T08:26:12+01:00" level=debug msg="Did create new connection" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Did create new tokenization service" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Did create card not present service" 
time="2017-08-19T08:26:12+01:00" level=debug msg="end client.New()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Did call Factory.GetPSPMerchant()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Will call hte.NewHTECredential()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Did call hte.NewHTECredential()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Will call Factory.GetHTEServiceHandler()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Did call Factory.GetHTEServiceHandler()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Will call Factory.GetHTE()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Did call Factory.GetHTE()" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Will setup channel of type error make(chan error)" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Did call make(chan error)" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Will spin up goroutine to start HTE service" 
time="2017-08-19T08:26:12+01:00" level=debug msg="Did spin up go routine.. this is main thread." 
time="2017-08-19T08:26:12+01:00" level=debug msg="Inside go routine, will call wp.core.HTE.Start()" 
time="2017-08-19T08:26:13+01:00" level=debug msg="Did wait 750ms, no error" 
time="2017-08-19T08:26:13+01:00" level=debug msg="End wpwithin.InitProducer()" Error result=<nil> 
time="2017-08-19T08:26:13+01:00" level=debug msg="RPC.WPWithinHandler.StartServiceBroadcast()" 
time="2017-08-19T08:26:13+01:00" level=debug msg="Begin wpwithin.startServiceBroadcast()" 
time="2017-08-19T08:26:13+01:00" level=debug msg="Will construct types.BroadcastMessage now" 
time="2017-08-19T08:26:13+01:00" level=debug msg="Did construct types.BroadcastMessage" 
time="2017-08-19T08:26:13+01:00" level=debug msg="Will make channel of type error for catching broadcast errors from go routine." 
time="2017-08-19T08:26:13+01:00" level=debug msg="Did make channel of type error" 
time="2017-08-19T08:26:13+01:00" level=debug msg="Will spin up go routine to perform broadcasting" 
time="2017-08-19T08:26:13+01:00" level=debug msg="Did spin up go routine to perform broadcasting" 
time="2017-08-19T08:26:13+01:00" level=debug msg="Inside go routine, will call wp.core.SvcBroadcaster.StartBroadcast(" message={Example WorldpayWithin producer 192.168.1.22 64521 b9e343f8-78dd-4037-590d-b35c1647cfd7  http://} timeoutmillis=0 
time="2017-08-19T08:26:13+01:00" level=debug msg="Start svc broadcast" 
time="2017-08-19T08:26:13+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:26:13+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:26:13+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:26:14+01:00" level=debug msg="End wpwithin.startServiceBroadcast()" Result err=<nil> 
time="2017-08-19T08:26:18+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:26:18+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:26:18+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:26:23+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:26:23+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:26:23+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:26:28+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:26:28+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:26:28+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:26:31+01:00" level=debug msg="clientImpl.CardNotPresentService()" 
time="2017-08-19T08:26:31+01:00" level=debug msg="Begin ChargeUsingToken()" 
time="2017-08-19T08:26:31+01:00" level=debug msg="begin connectionImpl.Post()" auth=true url="/Payments/Charge" 
time="2017-08-19T08:26:31+01:00" level=info msg="HTTP Request: POST https://gwapi.demo.securenet.com/api/Payments/Charge" 
time="2017-08-19T08:26:31+01:00" level=debug msg="begin connectionImpl.request()" auth=true body="{\"amount\":1.25,\"paymentVaultToken\":{\"customerId\":\"88aca91a-34a9-40cc-4be3-1200cbec68b2\",\"paymentMethodId\":\"c23775d2-d259-45d3-bdde-6e4d04e0e853\",\"publicKey\":\"8c0ce953-455d-4c12-8d14-ff20d565e485\",\"paymentType\":\"CREDIT_CARD\"},\"developerApplication\":{\"developerId\":12345678,\"version\":\"0.1\"},\"extendedInformation\":null}" method=POST url="https://gwapi.demo.securenet.com/api/Payments/Charge" 
time="2017-08-19T08:26:31+01:00" level=debug msg="Did create new HTTP request" 
time="2017-08-19T08:26:31+01:00" level=debug msg="Did set authorisation key (service key)" 
time="2017-08-19T08:26:31+01:00" level=debug msg="Request Header. Content-Type : [application/json]" 
time="2017-08-19T08:26:31+01:00" level=debug msg="Request Header. Accept : [application/json]" 
time="2017-08-19T08:26:31+01:00" level=debug msg="Request Header. Origin : [http://www.worldpay.com]" 
time="2017-08-19T08:26:31+01:00" level=debug msg="Request Header. Authorization : [Basic ODAwODYwOTpLWjlrV3YyRVB5N00=]" 
time="2017-08-19T08:26:31+01:00" level=debug msg="Request Body: {\"amount\":1.25,\"paymentVaultToken\":{\"customerId\":\"88aca91a-34a9-40cc-4be3-1200cbec68b2\",\"paymentMethodId\":\"c23775d2-d259-45d3-bdde-6e4d04e0e853\",\"publicKey\":\"8c0ce953-455d-4c12-8d14-ff20d565e485\",\"paymentType\":\"CREDIT_CARD\"},\"developerApplication\":{\"developerId\":12345678,\"version\":\"0.1\"},\"extendedInformation\":null}" 
time="2017-08-19T08:26:33+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:26:33+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:26:33+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:26:38+01:00" level=debug msg="Did make HTTP request" 
time="2017-08-19T08:26:38+01:00" level=debug msg="Response Header. Expires : [-1]" 
time="2017-08-19T08:26:38+01:00" level=debug msg="Response Header. X-Powered-By : [ASP.NET]" 
time="2017-08-19T08:26:38+01:00" level=debug msg="Response Header. Date : [Sat, 19 Aug 2017 07:26:08 GMT]" 
time="2017-08-19T08:26:38+01:00" level=debug msg="Response Header. Set-Cookie : [TS01dc44ce=014e6ce3a348173bb816d3ad649b35217eaf8a990ee3a47ac56d130b927b0bc16bc7a27ef4; Path=/]" 
time="2017-08-19T08:26:38+01:00" level=debug msg="Response Header. Cache-Control : [no-cache]" 
time="2017-08-19T08:26:38+01:00" level=debug msg="Response Header. Pragma : [no-cache]" 
time="2017-08-19T08:26:38+01:00" level=debug msg="Response Header. Content-Length : [1697]" 
time="2017-08-19T08:26:38+01:00" level=debug msg="Response Header. Content-Type : [application/json; charset=utf-8]" 
time="2017-08-19T08:26:38+01:00" level=debug msg="HTTP Response body: \n{\"transaction\":{\"secureNetId\":8008609,\"transactionType\":\"AUTH_CAPTURE\",\"customerId\":\"\",\"orderId\":\"AP80086091908170326029590\",\"transactionId\":115968237,\"authorizationCode\":\"CKQACK\",\"authorizedAmount\":1.25,\"allowedPartialCharges\":false,\"paymentTypeCode\":\"MC\",\"paymentTypeResult\":\"CREDIT_CARD\",\"level2Valid\":true,\"level3Valid\":true,\"transactionData\":{\"date\":\"2017-08-19T07:26:02Z\",\"amount\":1.25},\"settlementData\":null,\"vaultData\":null,\"creditCardType\":\"MASTERCARD\",\"cardNumber\":\"XXXXXXXXXXXX 4444\",\"avsCode\":\"Y\",\"avsResult\":\"MATCH\",\"cardHolder_FirstName\":\"\",\"cardHolder_LastName\":\"\",\"expirationDate\":\"1118\",\"billAddress\":{\"line1\":\"\",\"city\":\"\",\"state\":\"\",\"zip\":\"\",\"country\":\"\",\"company\":\"\",\"phone\":\"\",\"firstName\":null,\"lastName\":null},\"email\":\"\",\"emailReceipt\":false,\"softDescriptor\":null,\"dynamicMCC\":null,\"cardCodeCode\":\"M\",\"cardCodeResult\":\"MATCH\",\"accountName\":null,\"accountType\":null,\"accountNumber\":null,\"checkNumber\":null,\"traceNumber\":null,\"surchargeAmount\":0.0,\"cashbackAmount\":0.0,\"fnsNumber\":null,\"voucherNumber\":null,\"fleetCardInfo\":null,\"gratuity\":0.0,\"industrySpecificData\":\"0\",\"marketSpecificData\":\"\",\"networkCode\":\"\",\"additionalAmount\":0.0,\"additionalData1\":null,\"additionalData2\":null,\"additionalData3\":null,\"additionalData4\":\"\",\"additionalData5\":\"\",\"method\":\"CC\",\"responseText\":\"Approved\",\"imageResult\":null,\"userDefinedFields\":null,\"notes\":null,\"invoiceDescription\":null,\"catIndicator\":\"0\",\"callId\":\"\"},\"success\":true,\"result\":\"APPROVED\",\"responseCode\":1,\"message\":\"SUCCESS\",\"responseDateTime\":\"2017-08-19T07:26:02.94Z\",\"rawRequest\":null,\"rawResponse\":null,\"jsonRequest\":null,\"emvResponse\":{\"issuerauthenticationdata\":null,\"issuerscripttemplatE1\":null,\"issuerscripttemplatE2\":null}}" 
time="2017-08-19T08:26:38+01:00" level=debug msg="end connectionImpl.request()" 
time="2017-08-19T08:26:38+01:00" level=debug msg="Did close response body" 
time="2017-08-19T08:26:38+01:00" level=debug msg="end connectionImpl.Post()" 
time="2017-08-19T08:26:38+01:00" level=debug msg="End ChargeUsingToken()" 
time="2017-08-19T08:26:38+01:00" level=debug msg="begin hte.ServiceHandlerImpl.ServiceDeliveryBegin()" 
time="2017-08-19T08:26:38+01:00" level=debug msg="ORDER:: &{UUID:88aca91a-34a9-40cc-4be3-1200cbec68b2 Service:{ID:1 Name:Car charger Description:Can charge your hybrid / electric car Prices:map[1:{ID:1 Description:Kilowatt-hour PricePerUnit:0xc42014d920 UnitID:1 UnitDescription:One kilowatt-hour}]} SelectedPriceID:1 ClientID:4159e823-8dc9-406f-7571-2c3acb1f11e0 SelectedNumberOfUnits:5 PSPReference:115968237 DeliveryToken:{Key:88aca91a-34a9-40cc-4be3-1200cbec68b2 Issued:2017-08-19 08:26:38.332849354 +0100 BST Expiry:2017-08-26 08:26:38.332849498 +0100 BST RefundOnExpiry:false Signature:[]} ConsumedUnits:0}" 
time="2017-08-19T08:26:38+01:00" level=debug msg="REQ SDT Key: 88aca91a-34a9-40cc-4be3-1200cbec68b2" 
time="2017-08-19T08:26:38+01:00" level=debug msg="end hte.ServiceHandlerImpl.ServiceDeliveryBegin()" 
time="2017-08-19T08:26:38+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:26:38+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:26:38+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:26:43+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:26:43+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:26:43+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:26:48+01:00" level=debug msg="begin hte.ServiceHandlerImpl.ServiceDeliveryEnd()" 
time="2017-08-19T08:26:48+01:00" level=debug msg="end hte.ServiceHandlerImpl.ServiceDeliveryEnd()" 
time="2017-08-19T08:26:48+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:26:48+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:26:48+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:26:53+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:26:53+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:26:53+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:26:58+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:26:58+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:26:58+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:27:03+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:32:02+01:00" level=debug msg="End log setup" 
time="2017-08-19T08:32:02+01:00" level=debug msg="After initLogFile()" 
time="2017-08-19T08:32:02+01:00" level=debug msg="Before startRPC()" 
time="2017-08-19T08:32:02+01:00" level=debug msg="Before startRPC()" 
time="2017-08-19T08:32:02+01:00" level=debug msg="Before assign RPC config." 
time="2017-08-19T08:32:02+01:00" level=debug msg="After assign RPC config." 
time="2017-08-19T08:32:02+01:00" level=debug msg="Before rpc.NewService" Configuration: ="{Protocol:binary Framed:false Buffered:false Host:127.0.0.1 Port:10000 Secure:false BufferSize:8192 Loglevel: Logfile: CallbackPort:0}" 
time="2017-08-19T08:32:02+01:00" level=debug msg="begin rpc.ServiceImpl.NewService()" Config="{Protocol:binary Framed:false Buffered:false Host:127.0.0.1 Port:10000 Secure:false BufferSize:8192 Loglevel: Logfile: CallbackPort:0}" 
time="2017-08-19T08:32:02+01:00" level=debug msg="end rpc.ServiceImpl.NewService()" 
time="2017-08-19T08:32:02+01:00" level=debug msg="After rpc.NewService" 
time="2017-08-19T08:32:02+01:00" level=debug msg="Attempting to start RPC interface on port" port=10000 
time="2017-08-19T08:32:02+01:00" level=debug msg="begin rpc.ServiceImpl.start()" 
time="2017-08-19T08:32:02+01:00" level=debug msg="Begin RPC.WPWithinHandler.NewWPWithinHander()" 
time="2017-08-19T08:32:02+01:00" level=debug msg="End RPC.WPWithinHandler.NewWPWithinHander()" 
time="2017-08-19T08:32:02+01:00" level=debug msg="Starting the rpc server on...: 127.0.0.1:10000" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Begin RPC.WPWithinHandler.Setup()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="begin wpwithin.Initialise()" description="Example WorldpayWithin producer" name="Producer Example" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Will perform parameter validation" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Parameter validation passed" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Will create new core.SDKFactory" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Did create new core.SDKFactory" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Will create new core.Core" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Did create new core.Core" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Will call doWebSocketLogSetup()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Begin wpwithin.doWebSocketLogSetup()" Configuration={true 8081 debug,warn,info,error,fatal} 
time="2017-08-19T08:32:03+01:00" level=debug msg="Config.WSLogEnable is true -- proceed to setup WS Logger" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Clean up Config.WSLogLevel -- remove spaces" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Split up Config.WSLogLevel to array -- comma delimiter" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Setting up logger to support the specified log levels." log levels=[debug warn info error fatal] 
time="2017-08-19T08:32:03+01:00" level=debug msg="Attempt to get external IPv4 address" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Did get external IPv4" IPv4=192.168.1.22 
time="2017-08-19T08:32:03+01:00" level=debug msg="will call wslog.Initialise()" ip_add=192.168.1.22 log levels=[debug warning info error fatal] ws_port=8081 
time="2017-08-19T08:32:03+01:00" level=info msg="Did set up WebSocket logger @ http://192.168.1.22:8081" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Did call wslog.Initialise()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="End doWebSocketLogSetup()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="After call doWebSocketLogSetup()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Will call Factory.GetDevice()" description="Example WorldpayWithin producer" name="Producer Example" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Will call Factory.GetOrderManager()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="After call Factory.GetOrderManager()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Will call Factory.GetSvcBroadcaster()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="After call Factory.GetSvcBroadcaster()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Will call Factory.GetSvcScanner()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="After call Factory.GetSvcScanner()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="end wpwithin.Initialise()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="wp.callback not set, not setting handler in WPWithin." 
time="2017-08-19T08:32:03+01:00" level=debug msg="End RPC.WPWithinHandler.Setup()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Begin RPC.WPWithinHandler.AddService()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="End RPC.WPWithinHandler.AddService()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Begin wpwithin.AddService()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Is wp.core.Device.Services map nil? true" 
time="2017-08-19T08:32:03+01:00" level=debug msg="wp.core.Device.Services is nil, will make now: map[int]*types.Service" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Did make wp.core.Device.Services: map[int]*types.Service" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Does wp.core.Device.Services contain service with id 1? false" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Adding service to wp.core.Device.Services as it doesn't appear to exist." 
time="2017-08-19T08:32:03+01:00" level=debug msg="End wpwithin.AddService()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="RPC.WPWithinHandler.InitProducer()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Begin wpwithin.InitProducer()" pspConfig=map[app_version:0.1 secure_net_id:8008609 developer_id:12345678 psp_name:securenet public_key:8c0ce953-455d-4c12-8d14-ff20d565e485 api_endpoint:https://gwapi.demo.securenet.com/api hte_private_key:KZ9kWv2EPy7M secure_key:KZ9kWv2EPy7M hte_public_key:8c0ce953-455d-4c12-8d14-ff20d565e485] 
time="2017-08-19T08:32:03+01:00" level=debug msg="Is pspConfig parameter nil? false" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Will call Factory.GetPSPMerchant()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="begin client.New()" apiEndpoint="https://gwapi.demo.securenet.com/api" appVersion=0.1 secureKey=KZ9kWv2EPy7M secureNetID=8008609 
time="2017-08-19T08:32:03+01:00" level=debug msg="begin connectionImpl.NewConnection" APIBaseURL="https://gwapi.demo.securenet.com/api" AppVersion=0.1 Proxy= SecureKey="**obfuscated**" SecureNetID=8008609 UserAgentString="os.name=darwin;os.version=?;os.arch=amd64;lang.version=go1.7.1;lib.version=1.0;api.version=1.0;lang=go;owner=worldpay-tech-innovation" sslCheck=true timeout=60 
time="2017-08-19T08:32:03+01:00" level=debug msg="Did create new connection" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Did create new tokenization service" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Did create card not present service" 
time="2017-08-19T08:32:03+01:00" level=debug msg="end client.New()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Did call Factory.GetPSPMerchant()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Will call hte.NewHTECredential()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Did call hte.NewHTECredential()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Will call Factory.GetHTEServiceHandler()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Did call Factory.GetHTEServiceHandler()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Will call Factory.GetHTE()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Did call Factory.GetHTE()" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Will setup channel of type error make(chan error)" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Did call make(chan error)" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Will spin up goroutine to start HTE service" 
time="2017-08-19T08:32:03+01:00" level=debug msg="Did spin up go routine.. this is main thread." 
time="2017-08-19T08:32:03+01:00" level=debug msg="Inside go routine, will call wp.core.HTE.Start()" 
time="2017-08-19T08:32:04+01:00" level=debug msg="Did wait 750ms, no error" 
time="2017-08-19T08:32:04+01:00" level=debug msg="End wpwithin.InitProducer()" Error result=<nil> 
time="2017-08-19T08:32:04+01:00" level=debug msg="RPC.WPWithinHandler.StartServiceBroadcast()" 
time="2017-08-19T08:32:04+01:00" level=debug msg="Begin wpwithin.startServiceBroadcast()" 
time="2017-08-19T08:32:04+01:00" level=debug msg="Will construct types.BroadcastMessage now" 
time="2017-08-19T08:32:04+01:00" level=debug msg="Did construct types.BroadcastMessage" 
time="2017-08-19T08:32:04+01:00" level=debug msg="Will make channel of type error for catching broadcast errors from go routine." 
time="2017-08-19T08:32:04+01:00" level=debug msg="Did make channel of type error" 
time="2017-08-19T08:32:04+01:00" level=debug msg="Will spin up go routine to perform broadcasting" 
time="2017-08-19T08:32:04+01:00" level=debug msg="Did spin up go routine to perform broadcasting" 
time="2017-08-19T08:32:04+01:00" level=debug msg="Inside go routine, will call wp.core.SvcBroadcaster.StartBroadcast(" message={Example WorldpayWithin producer 192.168.1.22 64521 b9e343f8-78dd-4037-590d-b35c1647cfd7  http://} timeoutmillis=0 
time="2017-08-19T08:32:04+01:00" level=debug msg="Start svc broadcast" 
time="2017-08-19T08:32:04+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:32:04+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:32:04+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:32:04+01:00" level=debug msg="End wpwithin.startServiceBroadcast()" Result err=<nil> 
time="2017-08-19T08:32:09+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:32:09+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:32:09+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:32:14+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:32:14+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:32:14+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:32:17+01:00" level=debug msg="clientImpl.CardNotPresentService()" 
time="2017-08-19T08:32:17+01:00" level=debug msg="Begin ChargeUsingToken()" 
time="2017-08-19T08:32:17+01:00" level=debug msg="begin connectionImpl.Post()" auth=true url="/Payments/Charge" 
time="2017-08-19T08:32:17+01:00" level=info msg="HTTP Request: POST https://gwapi.demo.securenet.com/api/Payments/Charge" 
time="2017-08-19T08:32:17+01:00" level=debug msg="begin connectionImpl.request()" auth=true body="{\"amount\":1.25,\"paymentVaultToken\":{\"customerId\":\"835e78e3-98bb-4189-5dc5-bf56f2140bd8\",\"paymentMethodId\":\"05385483-9d8a-46c5-a349-df32160faea5\",\"publicKey\":\"8c0ce953-455d-4c12-8d14-ff20d565e485\",\"paymentType\":\"CREDIT_CARD\"},\"developerApplication\":{\"developerId\":12345678,\"version\":\"0.1\"},\"extendedInformation\":null}" method=POST url="https://gwapi.demo.securenet.com/api/Payments/Charge" 
time="2017-08-19T08:32:17+01:00" level=debug msg="Did create new HTTP request" 
time="2017-08-19T08:32:17+01:00" level=debug msg="Did set authorisation key (service key)" 
time="2017-08-19T08:32:17+01:00" level=debug msg="Request Header. Origin : [http://www.worldpay.com]" 
time="2017-08-19T08:32:17+01:00" level=debug msg="Request Header. Authorization : [Basic ODAwODYwOTpLWjlrV3YyRVB5N00=]" 
time="2017-08-19T08:32:17+01:00" level=debug msg="Request Header. Content-Type : [application/json]" 
time="2017-08-19T08:32:17+01:00" level=debug msg="Request Header. Accept : [application/json]" 
time="2017-08-19T08:32:17+01:00" level=debug msg="Request Body: {\"amount\":1.25,\"paymentVaultToken\":{\"customerId\":\"835e78e3-98bb-4189-5dc5-bf56f2140bd8\",\"paymentMethodId\":\"05385483-9d8a-46c5-a349-df32160faea5\",\"publicKey\":\"8c0ce953-455d-4c12-8d14-ff20d565e485\",\"paymentType\":\"CREDIT_CARD\"},\"developerApplication\":{\"developerId\":12345678,\"version\":\"0.1\"},\"extendedInformation\":null}" 
time="2017-08-19T08:32:19+01:00" level=debug msg="Did make HTTP request" 
time="2017-08-19T08:32:19+01:00" level=debug msg="Response Header. Content-Type : [application/json; charset=utf-8]" 
time="2017-08-19T08:32:19+01:00" level=debug msg="Response Header. Expires : [-1]" 
time="2017-08-19T08:32:19+01:00" level=debug msg="Response Header. X-Powered-By : [ASP.NET]" 
time="2017-08-19T08:32:19+01:00" level=debug msg="Response Header. Date : [Sat, 19 Aug 2017 07:31:54 GMT]" 
time="2017-08-19T08:32:19+01:00" level=debug msg="Response Header. Set-Cookie : [TS01dc44ce=014e6ce3a340a59b497e85a574451856321b36720aab6db973cb9792404f5d2d74d8b7e3c1; Path=/]" 
time="2017-08-19T08:32:19+01:00" level=debug msg="Response Header. Cache-Control : [no-cache]" 
time="2017-08-19T08:32:19+01:00" level=debug msg="Response Header. Pragma : [no-cache]" 
time="2017-08-19T08:32:19+01:00" level=debug msg="Response Header. Content-Length : [1697]" 
time="2017-08-19T08:32:19+01:00" level=debug msg="HTTP Response body: \n{\"transaction\":{\"secureNetId\":8008609,\"transactionType\":\"AUTH_CAPTURE\",\"customerId\":\"\",\"orderId\":\"AP80086091908170331543501\",\"transactionId\":115968239,\"authorizationCode\":\"+G7I4A\",\"authorizedAmount\":1.25,\"allowedPartialCharges\":false,\"paymentTypeCode\":\"MC\",\"paymentTypeResult\":\"CREDIT_CARD\",\"level2Valid\":true,\"level3Valid\":true,\"transactionData\":{\"date\":\"2017-08-19T07:31:54Z\",\"amount\":1.25},\"settlementData\":null,\"vaultData\":null,\"creditCardType\":\"MASTERCARD\",\"cardNumber\":\"XXXXXXXXXXXX 4444\",\"avsCode\":\"Y\",\"avsResult\":\"MATCH\",\"cardHolder_FirstName\":\"\",\"cardHolder_LastName\":\"\",\"expirationDate\":\"1118\",\"billAddress\":{\"line1\":\"\",\"city\":\"\",\"state\":\"\",\"zip\":\"\",\"country\":\"\",\"company\":\"\",\"phone\":\"\",\"firstName\":null,\"lastName\":null},\"email\":\"\",\"emailReceipt\":false,\"softDescriptor\":null,\"dynamicMCC\":null,\"cardCodeCode\":\"M\",\"cardCodeResult\":\"MATCH\",\"accountName\":null,\"accountType\":null,\"accountNumber\":null,\"checkNumber\":null,\"traceNumber\":null,\"surchargeAmount\":0.0,\"cashbackAmount\":0.0,\"fnsNumber\":null,\"voucherNumber\":null,\"fleetCardInfo\":null,\"gratuity\":0.0,\"industrySpecificData\":\"0\",\"marketSpecificData\":\"\",\"networkCode\":\"\",\"additionalAmount\":0.0,\"additionalData1\":null,\"additionalData2\":null,\"additionalData3\":null,\"additionalData4\":\"\",\"additionalData5\":\"\",\"method\":\"CC\",\"responseText\":\"Approved\",\"imageResult\":null,\"userDefinedFields\":null,\"notes\":null,\"invoiceDescription\":null,\"catIndicator\":\"0\",\"callId\":\"\"},\"success\":true,\"result\":\"APPROVED\",\"responseCode\":1,\"message\":\"SUCCESS\",\"responseDateTime\":\"2017-08-19T07:31:54.33Z\",\"rawRequest\":null,\"rawResponse\":null,\"jsonRequest\":null,\"emvResponse\":{\"issuerauthenticationdata\":null,\"issuerscripttemplatE1\":null,\"issuerscripttemplatE2\":null}}" 
time="2017-08-19T08:32:19+01:00" level=debug msg="end connectionImpl.request()" 
time="2017-08-19T08:32:19+01:00" level=debug msg="Did close response body" 
time="2017-08-19T08:32:19+01:00" level=debug msg="end connectionImpl.Post()" 
time="2017-08-19T08:32:19+01:00" level=debug msg="End ChargeUsingToken()" 
time="2017-08-19T08:32:19+01:00" level=debug msg="begin hte.ServiceHandlerImpl.ServiceDeliveryBegin()" 
time="2017-08-19T08:32:19+01:00" level=debug msg="ORDER:: &{UUID:835e78e3-98bb-4189-5dc5-bf56f2140bd8 Service:{ID:1 Name:Car charger Description:Can charge your hybrid / electric car Prices:map[1:{ID:1 Description:Kilowatt-hour PricePerUnit:0xc42013d900 UnitID:1 UnitDescription:One kilowatt-hour}]} SelectedPriceID:1 ClientID:4159e823-8dc9-406f-7571-2c3acb1f11e0 SelectedNumberOfUnits:5 PSPReference:115968239 DeliveryToken:{Key:835e78e3-98bb-4189-5dc5-bf56f2140bd8 Issued:2017-08-19 08:32:19.00967569 +0100 BST Expiry:2017-08-26 08:32:19.009675737 +0100 BST RefundOnExpiry:false Signature:[]} ConsumedUnits:0}" 
time="2017-08-19T08:32:19+01:00" level=debug msg="REQ SDT Key: 835e78e3-98bb-4189-5dc5-bf56f2140bd8" 
time="2017-08-19T08:32:19+01:00" level=debug msg="end hte.ServiceHandlerImpl.ServiceDeliveryBegin()" 
time="2017-08-19T08:32:19+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:32:19+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:32:19+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:32:24+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:32:24+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:32:24+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:32:24+01:00" level=debug msg="clientImpl.CardNotPresentService()" 
time="2017-08-19T08:32:24+01:00" level=debug msg="Begin ChargeUsingToken()" 
time="2017-08-19T08:32:24+01:00" level=debug msg="begin connectionImpl.Post()" auth=true url="/Payments/Charge" 
time="2017-08-19T08:32:24+01:00" level=info msg="HTTP Request: POST https://gwapi.demo.securenet.com/api/Payments/Charge" 
time="2017-08-19T08:32:24+01:00" level=debug msg="begin connectionImpl.request()" auth=true body="{\"amount\":1.25,\"paymentVaultToken\":{\"customerId\":\"876794bd-115d-4053-7cbc-ea086fd67375\",\"paymentMethodId\":\"510b813d-b2b3-46a8-bf86-850d655948f3\",\"publicKey\":\"8c0ce953-455d-4c12-8d14-ff20d565e485\",\"paymentType\":\"CREDIT_CARD\"},\"developerApplication\":{\"developerId\":12345678,\"version\":\"0.1\"},\"extendedInformation\":null}" method=POST url="https://gwapi.demo.securenet.com/api/Payments/Charge" 
time="2017-08-19T08:32:24+01:00" level=debug msg="Did create new HTTP request" 
time="2017-08-19T08:32:24+01:00" level=debug msg="Did set authorisation key (service key)" 
time="2017-08-19T08:32:24+01:00" level=debug msg="Request Header. Content-Type : [application/json]" 
time="2017-08-19T08:32:24+01:00" level=debug msg="Request Header. Accept : [application/json]" 
time="2017-08-19T08:32:24+01:00" level=debug msg="Request Header. Origin : [http://www.worldpay.com]" 
time="2017-08-19T08:32:24+01:00" level=debug msg="Request Header. Authorization : [Basic ODAwODYwOTpLWjlrV3YyRVB5N00=]" 
time="2017-08-19T08:32:24+01:00" level=debug msg="Request Body: {\"amount\":1.25,\"paymentVaultToken\":{\"customerId\":\"876794bd-115d-4053-7cbc-ea086fd67375\",\"paymentMethodId\":\"510b813d-b2b3-46a8-bf86-850d655948f3\",\"publicKey\":\"8c0ce953-455d-4c12-8d14-ff20d565e485\",\"paymentType\":\"CREDIT_CARD\"},\"developerApplication\":{\"developerId\":12345678,\"version\":\"0.1\"},\"extendedInformation\":null}" 
time="2017-08-19T08:32:25+01:00" level=debug msg="Did make HTTP request" 
time="2017-08-19T08:32:25+01:00" level=debug msg="Response Header. Date : [Sat, 19 Aug 2017 07:32:00 GMT]" 
time="2017-08-19T08:32:25+01:00" level=debug msg="Response Header. Set-Cookie : [TS01dc44ce=014e6ce3a3eabe47135f3f9f170ab21cf89f2df1d885cba0ac6c4eea7004c9e7400f994e1b; Path=/]" 
time="2017-08-19T08:32:25+01:00" level=debug msg="Response Header. Cache-Control : [no-cache]" 
time="2017-08-19T08:32:25+01:00" level=debug msg="Response Header. Pragma : [no-cache]" 
time="2017-08-19T08:32:25+01:00" level=debug msg="Response Header. Content-Length : [1697]" 
time="2017-08-19T08:32:25+01:00" level=debug msg="Response Header. Content-Type : [application/json; charset=utf-8]" 
time="2017-08-19T08:32:25+01:00" level=debug msg="Response Header. Expires : [-1]" 
time="2017-08-19T08:32:25+01:00" level=debug msg="Response Header. X-Powered-By : [ASP.NET]" 
time="2017-08-19T08:32:25+01:00" level=debug msg="HTTP Response body: \n{\"transaction\":{\"secureNetId\":8008609,\"transactionType\":\"AUTH_CAPTURE\",\"customerId\":\"\",\"orderId\":\"AP80086091908170332010581\",\"transactionId\":115968240,\"authorizationCode\":\"WS0XVY\",\"authorizedAmount\":1.25,\"allowedPartialCharges\":false,\"paymentTypeCode\":\"MC\",\"paymentTypeResult\":\"CREDIT_CARD\",\"level2Valid\":true,\"level3Valid\":true,\"transactionData\":{\"date\":\"2017-08-19T07:32:01Z\",\"amount\":1.25},\"settlementData\":null,\"vaultData\":null,\"creditCardType\":\"MASTERCARD\",\"cardNumber\":\"XXXXXXXXXXXX 4444\",\"avsCode\":\"Y\",\"avsResult\":\"MATCH\",\"cardHolder_FirstName\":\"\",\"cardHolder_LastName\":\"\",\"expirationDate\":\"1118\",\"billAddress\":{\"line1\":\"\",\"city\":\"\",\"state\":\"\",\"zip\":\"\",\"country\":\"\",\"company\":\"\",\"phone\":\"\",\"firstName\":null,\"lastName\":null},\"email\":\"\",\"emailReceipt\":false,\"softDescriptor\":null,\"dynamicMCC\":null,\"cardCodeCode\":\"M\",\"cardCodeResult\":\"MATCH\",\"accountName\":null,\"accountType\":null,\"accountNumber\":null,\"checkNumber\":null,\"traceNumber\":null,\"surchargeAmount\":0.0,\"cashbackAmount\":0.0,\"fnsNumber\":null,\"voucherNumber\":null,\"fleetCardInfo\":null,\"gratuity\":0.0,\"industrySpecificData\":\"0\",\"marketSpecificData\":\"\",\"networkCode\":\"\",\"additionalAmount\":0.0,\"additionalData1\":null,\"additionalData2\":null,\"additionalData3\":null,\"additionalData4\":\"\",\"additionalData5\":\"\",\"method\":\"CC\",\"responseText\":\"Approved\",\"imageResult\":null,\"userDefinedFields\":null,\"notes\":null,\"invoiceDescription\":null,\"catIndicator\":\"0\",\"callId\":\"\"},\"success\":true,\"result\":\"APPROVED\",\"responseCode\":1,\"message\":\"SUCCESS\",\"responseDateTime\":\"2017-08-19T07:32:01.05Z\",\"rawRequest\":null,\"rawResponse\":null,\"jsonRequest\":null,\"emvResponse\":{\"issuerauthenticationdata\":null,\"issuerscripttemplatE1\":null,\"issuerscripttemplatE2\":null}}" 
time="2017-08-19T08:32:25+01:00" level=debug msg="end connectionImpl.request()" 
time="2017-08-19T08:32:25+01:00" level=debug msg="Did close response body" 
time="2017-08-19T08:32:25+01:00" level=debug msg="end connectionImpl.Post()" 
time="2017-08-19T08:32:25+01:00" level=debug msg="End ChargeUsingToken()" 
time="2017-08-19T08:32:25+01:00" level=debug msg="begin hte.ServiceHandlerImpl.ServiceDeliveryBegin()" 
time="2017-08-19T08:32:25+01:00" level=debug msg="ORDER:: &{UUID:876794bd-115d-4053-7cbc-ea086fd67375 Service:{ID:1 Name:Car charger Description:Can charge your hybrid / electric car Prices:map[1:{ID:1 Description:Kilowatt-hour PricePerUnit:0xc42013d900 UnitID:1 UnitDescription:One kilowatt-hour}]} SelectedPriceID:1 ClientID:4159e823-8dc9-406f-7571-2c3acb1f11e0 SelectedNumberOfUnits:5 PSPReference:115968240 DeliveryToken:{Key:876794bd-115d-4053-7cbc-ea086fd67375 Issued:2017-08-19 08:32:25.61248692 +0100 BST Expiry:2017-08-26 08:32:25.612486947 +0100 BST RefundOnExpiry:false Signature:[]} ConsumedUnits:0}" 
time="2017-08-19T08:32:25+01:00" level=debug msg="REQ SDT Key: 876794bd-115d-4053-7cbc-ea086fd67375" 
time="2017-08-19T08:32:25+01:00" level=debug msg="end hte.ServiceHandlerImpl.ServiceDeliveryBegin()" 
time="2017-08-19T08:32:29+01:00" level=debug msg="begin hte.ServiceHandlerImpl.ServiceDeliveryEnd()" 
time="2017-08-19T08:32:29+01:00" level=debug msg="end hte.ServiceHandlerImpl.ServiceDeliveryEnd()" 
time="2017-08-19T08:32:29+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:32:29+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:32:29+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:32:34+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:32:34+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:32:34+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:32:39+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:32:39+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:32:39+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:32:44+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T08:32:44+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T08:32:44+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T08:32:49+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T09:32:54+01:00" level=debug msg="End log setup" 
time="2017-08-19T09:32:54+01:00" level=debug msg="After initLogFile()" 
time="2017-08-19T09:32:54+01:00" level=debug msg="Before startRPC()" 
time="2017-08-19T09:32:54+01:00" level=debug msg="Before startRPC()" 
time="2017-08-19T09:32:54+01:00" level=debug msg="Before assign RPC config." 
time="2017-08-19T09:32:54+01:00" level=debug msg="After assign RPC config." 
time="2017-08-19T09:32:54+01:00" level=debug msg="Before rpc.NewService" Configuration: ="{Protocol:binary Framed:false Buffered:false Host:127.0.0.1 Port:10000 Secure:false BufferSize:8192 Loglevel: Logfile: CallbackPort:0}" 
time="2017-08-19T09:32:54+01:00" level=debug msg="begin rpc.ServiceImpl.NewService()" Config="{Protocol:binary Framed:false Buffered:false Host:127.0.0.1 Port:10000 Secure:false BufferSize:8192 Loglevel: Logfile: CallbackPort:0}" 
time="2017-08-19T09:32:54+01:00" level=debug msg="end rpc.ServiceImpl.NewService()" 
time="2017-08-19T09:32:54+01:00" level=debug msg="After rpc.NewService" 
time="2017-08-19T09:32:54+01:00" level=debug msg="Attempting to start RPC interface on port" port=10000 
time="2017-08-19T09:32:54+01:00" level=debug msg="begin rpc.ServiceImpl.start()" 
time="2017-08-19T09:32:54+01:00" level=debug msg="Begin RPC.WPWithinHandler.NewWPWithinHander()" 
time="2017-08-19T09:32:54+01:00" level=debug msg="End RPC.WPWithinHandler.NewWPWithinHander()" 
time="2017-08-19T09:32:54+01:00" level=debug msg="Starting the rpc server on...: 127.0.0.1:10000" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Begin RPC.WPWithinHandler.Setup()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="begin wpwithin.Initialise()" description="Example WorldpayWithin producer" name="Producer Example" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Will perform parameter validation" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Parameter validation passed" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Will create new core.SDKFactory" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Did create new core.SDKFactory" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Will create new core.Core" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Did create new core.Core" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Will call doWebSocketLogSetup()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Begin wpwithin.doWebSocketLogSetup()" Configuration={true 8081 debug,warn,info,error,fatal} 
time="2017-08-19T09:32:55+01:00" level=debug msg="Config.WSLogEnable is true -- proceed to setup WS Logger" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Clean up Config.WSLogLevel -- remove spaces" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Split up Config.WSLogLevel to array -- comma delimiter" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Setting up logger to support the specified log levels." log levels=[debug warn info error fatal] 
time="2017-08-19T09:32:55+01:00" level=debug msg="Attempt to get external IPv4 address" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Did get external IPv4" IPv4=172.20.10.6 
time="2017-08-19T09:32:55+01:00" level=debug msg="will call wslog.Initialise()" ip_add=172.20.10.6 log levels=[debug warning info error fatal] ws_port=8081 
time="2017-08-19T09:32:55+01:00" level=info msg="Did set up WebSocket logger @ http://172.20.10.6:8081" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Did call wslog.Initialise()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="End doWebSocketLogSetup()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="After call doWebSocketLogSetup()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Will call Factory.GetDevice()" description="Example WorldpayWithin producer" name="Producer Example" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Will call Factory.GetOrderManager()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="After call Factory.GetOrderManager()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Will call Factory.GetSvcBroadcaster()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="After call Factory.GetSvcBroadcaster()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Will call Factory.GetSvcScanner()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="After call Factory.GetSvcScanner()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="end wpwithin.Initialise()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="wp.callback not set, not setting handler in WPWithin." 
time="2017-08-19T09:32:55+01:00" level=debug msg="End RPC.WPWithinHandler.Setup()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Begin RPC.WPWithinHandler.AddService()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="End RPC.WPWithinHandler.AddService()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Begin wpwithin.AddService()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Is wp.core.Device.Services map nil? true" 
time="2017-08-19T09:32:55+01:00" level=debug msg="wp.core.Device.Services is nil, will make now: map[int]*types.Service" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Did make wp.core.Device.Services: map[int]*types.Service" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Does wp.core.Device.Services contain service with id 1? false" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Adding service to wp.core.Device.Services as it doesn't appear to exist." 
time="2017-08-19T09:32:55+01:00" level=debug msg="End wpwithin.AddService()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="RPC.WPWithinHandler.InitProducer()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Begin wpwithin.InitProducer()" pspConfig=map[hte_public_key:8c0ce953-455d-4c12-8d14-ff20d565e485 secure_net_id:8008609 app_version:0.1 secure_key:KZ9kWv2EPy7M developer_id:12345678 psp_name:securenet public_key:8c0ce953-455d-4c12-8d14-ff20d565e485 api_endpoint:https://gwapi.demo.securenet.com/api hte_private_key:KZ9kWv2EPy7M] 
time="2017-08-19T09:32:55+01:00" level=debug msg="Is pspConfig parameter nil? false" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Will call Factory.GetPSPMerchant()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="begin client.New()" apiEndpoint="https://gwapi.demo.securenet.com/api" appVersion=0.1 secureKey=KZ9kWv2EPy7M secureNetID=8008609 
time="2017-08-19T09:32:55+01:00" level=debug msg="begin connectionImpl.NewConnection" APIBaseURL="https://gwapi.demo.securenet.com/api" AppVersion=0.1 Proxy= SecureKey="**obfuscated**" SecureNetID=8008609 UserAgentString="os.name=darwin;os.version=?;os.arch=amd64;lang.version=go1.7.1;lib.version=1.0;api.version=1.0;lang=go;owner=worldpay-tech-innovation" sslCheck=true timeout=60 
time="2017-08-19T09:32:55+01:00" level=debug msg="Did create new connection" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Did create new tokenization service" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Did create card not present service" 
time="2017-08-19T09:32:55+01:00" level=debug msg="end client.New()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Did call Factory.GetPSPMerchant()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Will call hte.NewHTECredential()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Did call hte.NewHTECredential()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Will call Factory.GetHTEServiceHandler()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Did call Factory.GetHTEServiceHandler()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Will call Factory.GetHTE()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Did call Factory.GetHTE()" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Will setup channel of type error make(chan error)" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Did call make(chan error)" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Will spin up goroutine to start HTE service" 
time="2017-08-19T09:32:55+01:00" level=debug msg="Did spin up go routine.. this is main thread." 
time="2017-08-19T09:32:55+01:00" level=debug msg="Inside go routine, will call wp.core.HTE.Start()" 
time="2017-08-19T09:32:56+01:00" level=debug msg="Did wait 750ms, no error" 
time="2017-08-19T09:32:56+01:00" level=debug msg="End wpwithin.InitProducer()" Error result=<nil> 
time="2017-08-19T09:32:56+01:00" level=debug msg="RPC.WPWithinHandler.StartServiceBroadcast()" 
time="2017-08-19T09:32:56+01:00" level=debug msg="Begin wpwithin.startServiceBroadcast()" 
time="2017-08-19T09:32:56+01:00" level=debug msg="Will construct types.BroadcastMessage now" 
time="2017-08-19T09:32:56+01:00" level=debug msg="Did construct types.BroadcastMessage" 
time="2017-08-19T09:32:56+01:00" level=debug msg="Will make channel of type error for catching broadcast errors from go routine." 
time="2017-08-19T09:32:56+01:00" level=debug msg="Did make channel of type error" 
time="2017-08-19T09:32:56+01:00" level=debug msg="Will spin up go routine to perform broadcasting" 
time="2017-08-19T09:32:56+01:00" level=debug msg="Did spin up go routine to perform broadcasting" 
time="2017-08-19T09:32:56+01:00" level=debug msg="Inside go routine, will call wp.core.SvcBroadcaster.StartBroadcast(" message={Example WorldpayWithin producer 172.20.10.6 64521 b9e343f8-78dd-4037-590d-b35c1647cfd7  http://} timeoutmillis=0 
time="2017-08-19T09:32:56+01:00" level=debug msg="Start svc broadcast" 
time="2017-08-19T09:32:56+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T09:32:56+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T09:32:56+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T09:32:57+01:00" level=debug msg="End wpwithin.startServiceBroadcast()" Result err=<nil> 
time="2017-08-19T09:33:01+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T09:33:01+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T09:33:01+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T09:33:06+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T09:33:06+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T09:33:06+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T09:33:11+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T09:33:11+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T09:33:11+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T09:33:16+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T09:33:16+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T09:33:16+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T09:33:18+01:00" level=debug msg="clientImpl.CardNotPresentService()" 
time="2017-08-19T09:33:18+01:00" level=debug msg="Begin ChargeUsingToken()" 
time="2017-08-19T09:33:18+01:00" level=debug msg="begin connectionImpl.Post()" auth=true url="/Payments/Charge" 
time="2017-08-19T09:33:18+01:00" level=info msg="HTTP Request: POST https://gwapi.demo.securenet.com/api/Payments/Charge" 
time="2017-08-19T09:33:18+01:00" level=debug msg="begin connectionImpl.request()" auth=true body="{\"amount\":1.25,\"paymentVaultToken\":{\"customerId\":\"4a08c685-222f-4530-7f25-8af265e0b6c1\",\"paymentMethodId\":\"345d5a52-2f3f-4e64-b1b6-82770e4e0be9\",\"publicKey\":\"8c0ce953-455d-4c12-8d14-ff20d565e485\",\"paymentType\":\"CREDIT_CARD\"},\"developerApplication\":{\"developerId\":12345678,\"version\":\"0.1\"},\"extendedInformation\":null}" method=POST url="https://gwapi.demo.securenet.com/api/Payments/Charge" 
time="2017-08-19T09:33:18+01:00" level=debug msg="Did create new HTTP request" 
time="2017-08-19T09:33:18+01:00" level=debug msg="Did set authorisation key (service key)" 
time="2017-08-19T09:33:18+01:00" level=debug msg="Request Header. Content-Type : [application/json]" 
time="2017-08-19T09:33:18+01:00" level=debug msg="Request Header. Accept : [application/json]" 
time="2017-08-19T09:33:18+01:00" level=debug msg="Request Header. Origin : [http://www.worldpay.com]" 
time="2017-08-19T09:33:18+01:00" level=debug msg="Request Header. Authorization : [Basic ODAwODYwOTpLWjlrV3YyRVB5N00=]" 
time="2017-08-19T09:33:18+01:00" level=debug msg="Request Body: {\"amount\":1.25,\"paymentVaultToken\":{\"customerId\":\"4a08c685-222f-4530-7f25-8af265e0b6c1\",\"paymentMethodId\":\"345d5a52-2f3f-4e64-b1b6-82770e4e0be9\",\"publicKey\":\"8c0ce953-455d-4c12-8d14-ff20d565e485\",\"paymentType\":\"CREDIT_CARD\"},\"developerApplication\":{\"developerId\":12345678,\"version\":\"0.1\"},\"extendedInformation\":null}" 
time="2017-08-19T09:33:21+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T09:33:21+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T09:33:21+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T09:33:26+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T09:33:26+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T09:33:26+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T09:33:26+01:00" level=debug msg="Did make HTTP request" 
time="2017-08-19T09:33:26+01:00" level=debug msg="Response Header. Expires : [-1]" 
time="2017-08-19T09:33:26+01:00" level=debug msg="Response Header. X-Powered-By : [ASP.NET]" 
time="2017-08-19T09:33:26+01:00" level=debug msg="Response Header. Date : [Sat, 19 Aug 2017 08:33:02 GMT]" 
time="2017-08-19T09:33:26+01:00" level=debug msg="Response Header. Set-Cookie : [TS01dc44ce=014e6ce3a3465ba79093f689657f68d0a8ee4f30cb95cb61b766c7767beb363bd03304b479; Path=/]" 
time="2017-08-19T09:33:26+01:00" level=debug msg="Response Header. Cache-Control : [no-cache]" 
time="2017-08-19T09:33:26+01:00" level=debug msg="Response Header. Pragma : [no-cache]" 
time="2017-08-19T09:33:26+01:00" level=debug msg="Response Header. Content-Length : [1697]" 
time="2017-08-19T09:33:26+01:00" level=debug msg="Response Header. Content-Type : [application/json; charset=utf-8]" 
time="2017-08-19T09:33:26+01:00" level=debug msg="HTTP Response body: \n{\"transaction\":{\"secureNetId\":8008609,\"transactionType\":\"AUTH_CAPTURE\",\"customerId\":\"\",\"orderId\":\"AP80086091908170432561445\",\"transactionId\":115968248,\"authorizationCode\":\"RZGRBD\",\"authorizedAmount\":1.25,\"allowedPartialCharges\":false,\"paymentTypeCode\":\"MC\",\"paymentTypeResult\":\"CREDIT_CARD\",\"level2Valid\":true,\"level3Valid\":true,\"transactionData\":{\"date\":\"2017-08-19T08:32:56Z\",\"amount\":1.25},\"settlementData\":null,\"vaultData\":null,\"creditCardType\":\"MASTERCARD\",\"cardNumber\":\"XXXXXXXXXXXX 4444\",\"avsCode\":\"Y\",\"avsResult\":\"MATCH\",\"cardHolder_FirstName\":\"\",\"cardHolder_LastName\":\"\",\"expirationDate\":\"1118\",\"billAddress\":{\"line1\":\"\",\"city\":\"\",\"state\":\"\",\"zip\":\"\",\"country\":\"\",\"company\":\"\",\"phone\":\"\",\"firstName\":null,\"lastName\":null},\"email\":\"\",\"emailReceipt\":false,\"softDescriptor\":null,\"dynamicMCC\":null,\"cardCodeCode\":\"M\",\"cardCodeResult\":\"MATCH\",\"accountName\":null,\"accountType\":null,\"accountNumber\":null,\"checkNumber\":null,\"traceNumber\":null,\"surchargeAmount\":0.0,\"cashbackAmount\":0.0,\"fnsNumber\":null,\"voucherNumber\":null,\"fleetCardInfo\":null,\"gratuity\":0.0,\"industrySpecificData\":\"0\",\"marketSpecificData\":\"\",\"networkCode\":\"\",\"additionalAmount\":0.0,\"additionalData1\":null,\"additionalData2\":null,\"additionalData3\":null,\"additionalData4\":\"\",\"additionalData5\":\"\",\"method\":\"CC\",\"responseText\":\"Approved\",\"imageResult\":null,\"userDefinedFields\":null,\"notes\":null,\"invoiceDescription\":null,\"catIndicator\":\"0\",\"callId\":\"\"},\"success\":true,\"result\":\"APPROVED\",\"responseCode\":1,\"message\":\"SUCCESS\",\"responseDateTime\":\"2017-08-19T08:32:56.12Z\",\"rawRequest\":null,\"rawResponse\":null,\"jsonRequest\":null,\"emvResponse\":{\"issuerauthenticationdata\":null,\"issuerscripttemplatE1\":null,\"issuerscripttemplatE2\":null}}" 
time="2017-08-19T09:33:26+01:00" level=debug msg="end connectionImpl.request()" 
time="2017-08-19T09:33:26+01:00" level=debug msg="Did close response body" 
time="2017-08-19T09:33:26+01:00" level=debug msg="end connectionImpl.Post()" 
time="2017-08-19T09:33:26+01:00" level=debug msg="End ChargeUsingToken()" 
time="2017-08-19T09:33:26+01:00" level=debug msg="begin hte.ServiceHandlerImpl.ServiceDeliveryBegin()" 
time="2017-08-19T09:33:26+01:00" level=debug msg="ORDER:: &{UUID:4a08c685-222f-4530-7f25-8af265e0b6c1 Service:{ID:1 Name:Car charger Description:Can charge your hybrid / electric car Prices:map[1:{ID:1 Description:Kilowatt-hour PricePerUnit:0xc4201501a0 UnitID:1 UnitDescription:One kilowatt-hour}]} SelectedPriceID:1 ClientID:4159e823-8dc9-406f-7571-2c3acb1f11e0 SelectedNumberOfUnits:5 PSPReference:115968248 DeliveryToken:{Key:4a08c685-222f-4530-7f25-8af265e0b6c1 Issued:2017-08-19 09:33:26.961036977 +0100 BST Expiry:2017-08-26 09:33:26.961037034 +0100 BST RefundOnExpiry:false Signature:[]} ConsumedUnits:0}" 
time="2017-08-19T09:33:26+01:00" level=debug msg="REQ SDT Key: 4a08c685-222f-4530-7f25-8af265e0b6c1" 
time="2017-08-19T09:33:26+01:00" level=debug msg="end hte.ServiceHandlerImpl.ServiceDeliveryBegin()" 
time="2017-08-19T09:33:31+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T09:33:31+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T09:33:31+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T09:33:36+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T09:33:36+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T09:33:36+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T09:33:36+01:00" level=debug msg="begin hte.ServiceHandlerImpl.ServiceDeliveryEnd()" 
time="2017-08-19T09:33:36+01:00" level=debug msg="end hte.ServiceHandlerImpl.ServiceDeliveryEnd()" 
time="2017-08-19T09:33:41+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T09:33:41+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T09:33:41+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T09:33:46+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T19:28:35+01:00" level=debug msg="End log setup" 
time="2017-08-19T19:28:35+01:00" level=debug msg="After initLogFile()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Before startRPC()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Before startRPC()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Before assign RPC config." 
time="2017-08-19T19:28:35+01:00" level=debug msg="After assign RPC config." 
time="2017-08-19T19:28:35+01:00" level=debug msg="Before rpc.NewService" Configuration: ="{Protocol:binary Framed:false Buffered:false Host:127.0.0.1 Port:10000 Secure:false BufferSize:8192 Loglevel: Logfile: CallbackPort:0}" 
time="2017-08-19T19:28:35+01:00" level=debug msg="begin rpc.ServiceImpl.NewService()" Config="{Protocol:binary Framed:false Buffered:false Host:127.0.0.1 Port:10000 Secure:false BufferSize:8192 Loglevel: Logfile: CallbackPort:0}" 
time="2017-08-19T19:28:35+01:00" level=debug msg="end rpc.ServiceImpl.NewService()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="After rpc.NewService" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Attempting to start RPC interface on port" port=10000 
time="2017-08-19T19:28:35+01:00" level=debug msg="begin rpc.ServiceImpl.start()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Begin RPC.WPWithinHandler.NewWPWithinHander()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="End RPC.WPWithinHandler.NewWPWithinHander()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Starting the rpc server on...: 127.0.0.1:10000" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Begin RPC.WPWithinHandler.Setup()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="begin wpwithin.Initialise()" description="Example WorldpayWithin producer" name="Producer Example" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Will perform parameter validation" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Parameter validation passed" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Will create new core.SDKFactory" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Did create new core.SDKFactory" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Will create new core.Core" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Did create new core.Core" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Will call doWebSocketLogSetup()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Begin wpwithin.doWebSocketLogSetup()" Configuration={true 8081 debug,warn,info,error,fatal} 
time="2017-08-19T19:28:35+01:00" level=debug msg="Config.WSLogEnable is true -- proceed to setup WS Logger" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Clean up Config.WSLogLevel -- remove spaces" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Split up Config.WSLogLevel to array -- comma delimiter" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Setting up logger to support the specified log levels." log levels=[debug warn info error fatal] 
time="2017-08-19T19:28:35+01:00" level=debug msg="Attempt to get external IPv4 address" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Did get external IPv4" IPv4=192.168.1.22 
time="2017-08-19T19:28:35+01:00" level=debug msg="will call wslog.Initialise()" ip_add=192.168.1.22 log levels=[debug warning info error fatal] ws_port=8081 
time="2017-08-19T19:28:35+01:00" level=info msg="Did set up WebSocket logger @ http://192.168.1.22:8081" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Did call wslog.Initialise()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="End doWebSocketLogSetup()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="After call doWebSocketLogSetup()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Will call Factory.GetDevice()" description="Example WorldpayWithin producer" name="Producer Example" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Will call Factory.GetOrderManager()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="After call Factory.GetOrderManager()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Will call Factory.GetSvcBroadcaster()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="After call Factory.GetSvcBroadcaster()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Will call Factory.GetSvcScanner()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="After call Factory.GetSvcScanner()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="end wpwithin.Initialise()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="wp.callback not set, not setting handler in WPWithin." 
time="2017-08-19T19:28:35+01:00" level=debug msg="End RPC.WPWithinHandler.Setup()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Begin RPC.WPWithinHandler.AddService()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="End RPC.WPWithinHandler.AddService()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Begin wpwithin.AddService()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Is wp.core.Device.Services map nil? true" 
time="2017-08-19T19:28:35+01:00" level=debug msg="wp.core.Device.Services is nil, will make now: map[int]*types.Service" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Did make wp.core.Device.Services: map[int]*types.Service" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Does wp.core.Device.Services contain service with id 1? false" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Adding service to wp.core.Device.Services as it doesn't appear to exist." 
time="2017-08-19T19:28:35+01:00" level=debug msg="End wpwithin.AddService()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="RPC.WPWithinHandler.InitProducer()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Begin wpwithin.InitProducer()" pspConfig=map[psp_name:securenet public_key:8c0ce953-455d-4c12-8d14-ff20d565e485 hte_public_key:8c0ce953-455d-4c12-8d14-ff20d565e485 developer_id:12345678 api_endpoint:https://gwapi.demo.securenet.com/api hte_private_key:KZ9kWv2EPy7M app_version:0.1 secure_key:KZ9kWv2EPy7M secure_net_id:8008609] 
time="2017-08-19T19:28:35+01:00" level=debug msg="Is pspConfig parameter nil? false" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Will call Factory.GetPSPMerchant()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="begin client.New()" apiEndpoint="https://gwapi.demo.securenet.com/api" appVersion=0.1 secureKey=KZ9kWv2EPy7M secureNetID=8008609 
time="2017-08-19T19:28:35+01:00" level=debug msg="begin connectionImpl.NewConnection" APIBaseURL="https://gwapi.demo.securenet.com/api" AppVersion=0.1 Proxy= SecureKey="**obfuscated**" SecureNetID=8008609 UserAgentString="os.name=darwin;os.version=?;os.arch=amd64;lang.version=go1.7.1;lib.version=1.0;api.version=1.0;lang=go;owner=worldpay-tech-innovation" sslCheck=true timeout=60 
time="2017-08-19T19:28:35+01:00" level=debug msg="Did create new connection" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Did create new tokenization service" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Did create card not present service" 
time="2017-08-19T19:28:35+01:00" level=debug msg="end client.New()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Did call Factory.GetPSPMerchant()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Will call hte.NewHTECredential()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Did call hte.NewHTECredential()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Will call Factory.GetHTEServiceHandler()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Did call Factory.GetHTEServiceHandler()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Will call Factory.GetHTE()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Did call Factory.GetHTE()" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Will setup channel of type error make(chan error)" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Did call make(chan error)" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Will spin up goroutine to start HTE service" 
time="2017-08-19T19:28:35+01:00" level=debug msg="Did spin up go routine.. this is main thread." 
time="2017-08-19T19:28:35+01:00" level=debug msg="Inside go routine, will call wp.core.HTE.Start()" 
time="2017-08-19T19:28:36+01:00" level=debug msg="Did wait 750ms, no error" 
time="2017-08-19T19:28:36+01:00" level=debug msg="End wpwithin.InitProducer()" Error result=<nil> 
time="2017-08-19T19:28:36+01:00" level=debug msg="RPC.WPWithinHandler.StartServiceBroadcast()" 
time="2017-08-19T19:28:36+01:00" level=debug msg="Begin wpwithin.startServiceBroadcast()" 
time="2017-08-19T19:28:36+01:00" level=debug msg="Will construct types.BroadcastMessage now" 
time="2017-08-19T19:28:36+01:00" level=debug msg="Did construct types.BroadcastMessage" 
time="2017-08-19T19:28:36+01:00" level=debug msg="Will make channel of type error for catching broadcast errors from go routine." 
time="2017-08-19T19:28:36+01:00" level=debug msg="Did make channel of type error" 
time="2017-08-19T19:28:36+01:00" level=debug msg="Will spin up go routine to perform broadcasting" 
time="2017-08-19T19:28:36+01:00" level=debug msg="Did spin up go routine to perform broadcasting" 
time="2017-08-19T19:28:36+01:00" level=debug msg="Inside go routine, will call wp.core.SvcBroadcaster.StartBroadcast(" message={Example WorldpayWithin producer 192.168.1.22 64521 b9e343f8-78dd-4037-590d-b35c1647cfd7  http://} timeoutmillis=0 
time="2017-08-19T19:28:36+01:00" level=debug msg="Start svc broadcast" 
time="2017-08-19T19:28:36+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T19:28:36+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T19:28:36+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T19:28:37+01:00" level=debug msg="End wpwithin.startServiceBroadcast()" Result err=<nil> 
time="2017-08-19T19:28:41+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T19:28:41+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T19:28:41+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T19:28:46+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T19:28:46+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T19:28:46+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T19:28:51+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T19:28:51+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T19:28:51+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T19:28:56+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T19:28:56+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T19:28:56+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T19:28:59+01:00" level=debug msg="clientImpl.CardNotPresentService()" 
time="2017-08-19T19:28:59+01:00" level=debug msg="Begin ChargeUsingToken()" 
time="2017-08-19T19:28:59+01:00" level=debug msg="begin connectionImpl.Post()" auth=true url="/Payments/Charge" 
time="2017-08-19T19:28:59+01:00" level=info msg="HTTP Request: POST https://gwapi.demo.securenet.com/api/Payments/Charge" 
time="2017-08-19T19:28:59+01:00" level=debug msg="begin connectionImpl.request()" auth=true body="{\"amount\":1.25,\"paymentVaultToken\":{\"customerId\":\"97d6c22d-f15e-40a0-6761-16cd1070ad79\",\"paymentMethodId\":\"a55fd3dc-dc5a-4c08-a399-cd097c9b3de1\",\"publicKey\":\"8c0ce953-455d-4c12-8d14-ff20d565e485\",\"paymentType\":\"CREDIT_CARD\"},\"developerApplication\":{\"developerId\":12345678,\"version\":\"0.1\"},\"extendedInformation\":null}" method=POST url="https://gwapi.demo.securenet.com/api/Payments/Charge" 
time="2017-08-19T19:28:59+01:00" level=debug msg="Did create new HTTP request" 
time="2017-08-19T19:28:59+01:00" level=debug msg="Did set authorisation key (service key)" 
time="2017-08-19T19:28:59+01:00" level=debug msg="Request Header. Authorization : [Basic ODAwODYwOTpLWjlrV3YyRVB5N00=]" 
time="2017-08-19T19:28:59+01:00" level=debug msg="Request Header. Content-Type : [application/json]" 
time="2017-08-19T19:28:59+01:00" level=debug msg="Request Header. Accept : [application/json]" 
time="2017-08-19T19:28:59+01:00" level=debug msg="Request Header. Origin : [http://www.worldpay.com]" 
time="2017-08-19T19:28:59+01:00" level=debug msg="Request Body: {\"amount\":1.25,\"paymentVaultToken\":{\"customerId\":\"97d6c22d-f15e-40a0-6761-16cd1070ad79\",\"paymentMethodId\":\"a55fd3dc-dc5a-4c08-a399-cd097c9b3de1\",\"publicKey\":\"8c0ce953-455d-4c12-8d14-ff20d565e485\",\"paymentType\":\"CREDIT_CARD\"},\"developerApplication\":{\"developerId\":12345678,\"version\":\"0.1\"},\"extendedInformation\":null}" 
time="2017-08-19T19:29:01+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T19:29:01+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T19:29:01+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T19:29:03+01:00" level=debug msg="Did make HTTP request" 
time="2017-08-19T19:29:03+01:00" level=debug msg="Response Header. Cache-Control : [no-cache]" 
time="2017-08-19T19:29:03+01:00" level=debug msg="Response Header. Pragma : [no-cache]" 
time="2017-08-19T19:29:03+01:00" level=debug msg="Response Header. Content-Length : [1697]" 
time="2017-08-19T19:29:03+01:00" level=debug msg="Response Header. Content-Type : [application/json; charset=utf-8]" 
time="2017-08-19T19:29:03+01:00" level=debug msg="Response Header. Expires : [-1]" 
time="2017-08-19T19:29:03+01:00" level=debug msg="Response Header. X-Powered-By : [ASP.NET]" 
time="2017-08-19T19:29:03+01:00" level=debug msg="Response Header. Date : [Sat, 19 Aug 2017 18:28:35 GMT]" 
time="2017-08-19T19:29:03+01:00" level=debug msg="Response Header. Set-Cookie : [TS01dc44ce=014e6ce3a320eb9ad92f0864229d094be8c2c1767a3f067aff5de7b563928780aa209fc654; Path=/]" 
time="2017-08-19T19:29:03+01:00" level=debug msg="HTTP Response body: \n{\"transaction\":{\"secureNetId\":8008609,\"transactionType\":\"AUTH_CAPTURE\",\"customerId\":\"\",\"orderId\":\"AP80086091908171428341381\",\"transactionId\":115968294,\"authorizationCode\":\"VRJ1KG\",\"authorizedAmount\":1.25,\"allowedPartialCharges\":false,\"paymentTypeCode\":\"MC\",\"paymentTypeResult\":\"CREDIT_CARD\",\"level2Valid\":true,\"level3Valid\":true,\"transactionData\":{\"date\":\"2017-08-19T18:28:34Z\",\"amount\":1.25},\"settlementData\":null,\"vaultData\":null,\"creditCardType\":\"MASTERCARD\",\"cardNumber\":\"XXXXXXXXXXXX 4444\",\"avsCode\":\"Y\",\"avsResult\":\"MATCH\",\"cardHolder_FirstName\":\"\",\"cardHolder_LastName\":\"\",\"expirationDate\":\"1118\",\"billAddress\":{\"line1\":\"\",\"city\":\"\",\"state\":\"\",\"zip\":\"\",\"country\":\"\",\"company\":\"\",\"phone\":\"\",\"firstName\":null,\"lastName\":null},\"email\":\"\",\"emailReceipt\":false,\"softDescriptor\":null,\"dynamicMCC\":null,\"cardCodeCode\":\"M\",\"cardCodeResult\":\"MATCH\",\"accountName\":null,\"accountType\":null,\"accountNumber\":null,\"checkNumber\":null,\"traceNumber\":null,\"surchargeAmount\":0.0,\"cashbackAmount\":0.0,\"fnsNumber\":null,\"voucherNumber\":null,\"fleetCardInfo\":null,\"gratuity\":0.0,\"industrySpecificData\":\"0\",\"marketSpecificData\":\"\",\"networkCode\":\"\",\"additionalAmount\":0.0,\"additionalData1\":null,\"additionalData2\":null,\"additionalData3\":null,\"additionalData4\":\"\",\"additionalData5\":\"\",\"method\":\"CC\",\"responseText\":\"Approved\",\"imageResult\":null,\"userDefinedFields\":null,\"notes\":null,\"invoiceDescription\":null,\"catIndicator\":\"0\",\"callId\":\"\"},\"success\":true,\"result\":\"APPROVED\",\"responseCode\":1,\"message\":\"SUCCESS\",\"responseDateTime\":\"2017-08-19T18:28:34.12Z\",\"rawRequest\":null,\"rawResponse\":null,\"jsonRequest\":null,\"emvResponse\":{\"issuerauthenticationdata\":null,\"issuerscripttemplatE1\":null,\"issuerscripttemplatE2\":null}}" 
time="2017-08-19T19:29:03+01:00" level=debug msg="end connectionImpl.request()" 
time="2017-08-19T19:29:03+01:00" level=debug msg="Did close response body" 
time="2017-08-19T19:29:03+01:00" level=debug msg="end connectionImpl.Post()" 
time="2017-08-19T19:29:03+01:00" level=debug msg="End ChargeUsingToken()" 
time="2017-08-19T19:29:03+01:00" level=debug msg="begin hte.ServiceHandlerImpl.ServiceDeliveryBegin()" 
time="2017-08-19T19:29:03+01:00" level=debug msg="ORDER:: &{UUID:97d6c22d-f15e-40a0-6761-16cd1070ad79 Service:{ID:1 Name:Car charger Description:Can charge your hybrid / electric car Prices:map[1:{ID:1 Description:Kilowatt-hour PricePerUnit:0xc42013d960 UnitID:1 UnitDescription:One kilowatt-hour}]} SelectedPriceID:1 ClientID:4159e823-8dc9-406f-7571-2c3acb1f11e0 SelectedNumberOfUnits:5 PSPReference:115968294 DeliveryToken:{Key:97d6c22d-f15e-40a0-6761-16cd1070ad79 Issued:2017-08-19 19:29:03.115807001 +0100 BST Expiry:2017-08-26 19:29:03.115807031 +0100 BST RefundOnExpiry:false Signature:[]} ConsumedUnits:0}" 
time="2017-08-19T19:29:03+01:00" level=debug msg="REQ SDT Key: 97d6c22d-f15e-40a0-6761-16cd1070ad79" 
time="2017-08-19T19:29:03+01:00" level=debug msg="end hte.ServiceHandlerImpl.ServiceDeliveryBegin()" 
time="2017-08-19T19:29:06+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T19:29:06+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T19:29:06+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T19:29:11+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T19:29:11+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T19:29:11+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T19:29:13+01:00" level=debug msg="begin hte.ServiceHandlerImpl.ServiceDeliveryEnd()" 
time="2017-08-19T19:29:13+01:00" level=debug msg="end hte.ServiceHandlerImpl.ServiceDeliveryEnd()" 
time="2017-08-19T19:29:16+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T19:29:16+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T19:29:16+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T19:29:21+01:00" level=debug msg=Broadcasting.. 
time="2017-08-19T19:29:21+01:00" level=debug msg="Did open UDP broadcast socket" 
time="2017-08-19T19:29:21+01:00" level=debug msg="Did successfully write broadcast message" 
time="2017-08-19T19:29:26+01:00" level=debug msg=Broadcasting.. 
